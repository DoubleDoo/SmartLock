
SmartLock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002f8  00800100  00002568  000025fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002568  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000424  008003f8  008003f8  000028f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000028f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002924  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000476d  00000000  00000000  00002ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e8e  00000000  00000000  00007231  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011b5  00000000  00000000  000080bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000444  00000000  00000000  00009274  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ae7  00000000  00000000  000096b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001550  00000000  00000000  0000a19f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000178  00000000  00000000  0000b6ef  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	72 c0       	rjmp	.+228    	; 0xe6 <__ctors_end>
       2:	00 00       	nop
       4:	9a c0       	rjmp	.+308    	; 0x13a <__bad_interrupt>
       6:	00 00       	nop
       8:	98 c0       	rjmp	.+304    	; 0x13a <__bad_interrupt>
       a:	00 00       	nop
       c:	96 c0       	rjmp	.+300    	; 0x13a <__bad_interrupt>
       e:	00 00       	nop
      10:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__vector_4>
      14:	92 c0       	rjmp	.+292    	; 0x13a <__bad_interrupt>
      16:	00 00       	nop
      18:	90 c0       	rjmp	.+288    	; 0x13a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	8e c0       	rjmp	.+284    	; 0x13a <__bad_interrupt>
      1e:	00 00       	nop
      20:	8c c0       	rjmp	.+280    	; 0x13a <__bad_interrupt>
      22:	00 00       	nop
      24:	8a c0       	rjmp	.+276    	; 0x13a <__bad_interrupt>
      26:	00 00       	nop
      28:	88 c0       	rjmp	.+272    	; 0x13a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	86 c0       	rjmp	.+268    	; 0x13a <__bad_interrupt>
      2e:	00 00       	nop
      30:	84 c0       	rjmp	.+264    	; 0x13a <__bad_interrupt>
      32:	00 00       	nop
      34:	82 c0       	rjmp	.+260    	; 0x13a <__bad_interrupt>
      36:	00 00       	nop
      38:	80 c0       	rjmp	.+256    	; 0x13a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	7e c0       	rjmp	.+252    	; 0x13a <__bad_interrupt>
      3e:	00 00       	nop
      40:	7c c0       	rjmp	.+248    	; 0x13a <__bad_interrupt>
      42:	00 00       	nop
      44:	7a c0       	rjmp	.+244    	; 0x13a <__bad_interrupt>
      46:	00 00       	nop
      48:	78 c0       	rjmp	.+240    	; 0x13a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	76 c0       	rjmp	.+236    	; 0x13a <__bad_interrupt>
      4e:	00 00       	nop
      50:	74 c0       	rjmp	.+232    	; 0x13a <__bad_interrupt>
      52:	00 00       	nop
      54:	72 c0       	rjmp	.+228    	; 0x13a <__bad_interrupt>
      56:	00 00       	nop
      58:	70 c0       	rjmp	.+224    	; 0x13a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	6e c0       	rjmp	.+220    	; 0x13a <__bad_interrupt>
      5e:	00 00       	nop
      60:	6c c0       	rjmp	.+216    	; 0x13a <__bad_interrupt>
      62:	00 00       	nop
      64:	6a c0       	rjmp	.+212    	; 0x13a <__bad_interrupt>
      66:	00 00       	nop
      68:	68 c0       	rjmp	.+208    	; 0x13a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	66 c0       	rjmp	.+204    	; 0x13a <__bad_interrupt>
      6e:	00 00       	nop
      70:	64 c0       	rjmp	.+200    	; 0x13a <__bad_interrupt>
      72:	00 00       	nop
      74:	62 c0       	rjmp	.+196    	; 0x13a <__bad_interrupt>
      76:	00 00       	nop
      78:	60 c0       	rjmp	.+192    	; 0x13a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	5e c0       	rjmp	.+188    	; 0x13a <__bad_interrupt>
      7e:	00 00       	nop
      80:	5c c0       	rjmp	.+184    	; 0x13a <__bad_interrupt>
      82:	00 00       	nop
      84:	5a c0       	rjmp	.+180    	; 0x13a <__bad_interrupt>
      86:	00 00       	nop
      88:	58 c0       	rjmp	.+176    	; 0x13a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	57 01       	movw	r10, r14
      8e:	8d 01       	movw	r16, r26
      90:	c3 01       	movw	r24, r6
      92:	f9 01       	movw	r30, r18
      94:	2f 02       	muls	r18, r31
      96:	65 02       	muls	r22, r21
      98:	9b 02       	muls	r25, r27
      9a:	d1 02       	muls	r29, r17
      9c:	07 03       	mulsu	r16, r23
      9e:	3d 03       	fmul	r19, r21
      a0:	72 03       	mulsu	r23, r18
      a2:	13 04       	cpc	r1, r3
      a4:	70 04       	cpc	r7, r0
      a6:	cd 04       	cpc	r12, r13
      a8:	2a 05       	cpc	r18, r10
      aa:	87 05       	cpc	r24, r7
      ac:	e4 05       	cpc	r30, r4
      ae:	41 06       	cpc	r4, r17
      b0:	9e 06       	cpc	r9, r30
      b2:	fb 06       	cpc	r15, r27
      b4:	58 07       	cpc	r21, r24
      b6:	b5 07       	cpc	r27, r21
      b8:	54 0a       	sbc	r5, r20
      ba:	8d 0a       	sbc	r8, r29
      bc:	c6 0a       	sbc	r12, r22
      be:	ff 0a       	sbc	r15, r31
      c0:	38 0b       	sbc	r19, r24
      c2:	71 0b       	sbc	r23, r17
      c4:	aa 0b       	sbc	r26, r26
      c6:	e3 0b       	sbc	r30, r19
      c8:	1c 0c       	add	r1, r12
      ca:	55 0c       	add	r5, r5
      cc:	8d 0c       	add	r8, r13
      ce:	a9 0d       	add	r26, r9
      d0:	e2 0d       	add	r30, r2
      d2:	1b 0e       	add	r1, r27
      d4:	54 0e       	add	r5, r20
      d6:	8d 0e       	add	r8, r29
      d8:	c6 0e       	add	r12, r22
      da:	ff 0e       	add	r15, r31
      dc:	38 0f       	add	r19, r24
      de:	71 0f       	add	r23, r17
      e0:	aa 0f       	add	r26, r26
      e2:	e2 0f       	add	r30, r18

000000e4 <__ctors_start>:
      e4:	99 10       	cpse	r9, r9

000000e6 <__ctors_end>:
      e6:	11 24       	eor	r1, r1
      e8:	1f be       	out	0x3f, r1	; 63
      ea:	cf ef       	ldi	r28, 0xFF	; 255
      ec:	d0 e4       	ldi	r29, 0x40	; 64
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	cd bf       	out	0x3d, r28	; 61

000000f2 <__do_copy_data>:
      f2:	13 e0       	ldi	r17, 0x03	; 3
      f4:	a0 e0       	ldi	r26, 0x00	; 0
      f6:	b1 e0       	ldi	r27, 0x01	; 1
      f8:	e8 e6       	ldi	r30, 0x68	; 104
      fa:	f5 e2       	ldi	r31, 0x25	; 37
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	0b bf       	out	0x3b, r16	; 59
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x14>
     102:	07 90       	elpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	a8 3f       	cpi	r26, 0xF8	; 248
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0x10>

0000010c <__do_clear_bss>:
     10c:	28 e0       	ldi	r18, 0x08	; 8
     10e:	a8 ef       	ldi	r26, 0xF8	; 248
     110:	b3 e0       	ldi	r27, 0x03	; 3
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	ac 31       	cpi	r26, 0x1C	; 28
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>

0000011c <__do_global_ctors>:
     11c:	10 e0       	ldi	r17, 0x00	; 0
     11e:	c3 e7       	ldi	r28, 0x73	; 115
     120:	d0 e0       	ldi	r29, 0x00	; 0
     122:	04 c0       	rjmp	.+8      	; 0x12c <__do_global_ctors+0x10>
     124:	21 97       	sbiw	r28, 0x01	; 1
     126:	fe 01       	movw	r30, r28
     128:	0e 94 a9 12 	call	0x2552	; 0x2552 <__tablejump2__>
     12c:	c2 37       	cpi	r28, 0x72	; 114
     12e:	d1 07       	cpc	r29, r17
     130:	c9 f7       	brne	.-14     	; 0x124 <__do_global_ctors+0x8>
     132:	0e 94 46 10 	call	0x208c	; 0x208c <main>
     136:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <_exit>

0000013a <__bad_interrupt>:
     13a:	62 cf       	rjmp	.-316    	; 0x0 <__vectors>

0000013c <_ZN9Main_Menu7refreshEv>:
    {
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X-20,MAIN_MENU_IMG_Y+1,1,16,lt);
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X+56,MAIN_MENU_IMG_Y+1,1,16,rt);
    };
	
    void refresh() override
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	ec 01       	movw	r28, r24
	{
		//oled.OLED_Bufer_Clear();
		Default();
     142:	e8 81       	ld	r30, Y
     144:	f9 81       	ldd	r31, Y+1	; 0x01
     146:	01 90       	ld	r0, Z+
     148:	f0 81       	ld	r31, Z
     14a:	e0 2d       	mov	r30, r0
     14c:	09 95       	icall
		actions();
     14e:	e8 81       	ld	r30, Y
     150:	f9 81       	ldd	r31, Y+1	; 0x01
     152:	00 88       	ldd	r0, Z+16	; 0x10
     154:	f1 89       	ldd	r31, Z+17	; 0x11
     156:	e0 2d       	mov	r30, r0
     158:	ce 01       	movw	r24, r28
     15a:	09 95       	icall
	};
     15c:	df 91       	pop	r29
     15e:	cf 91       	pop	r28
     160:	08 95       	ret

00000162 <_ZN9Main_Menu4nextEv>:

	};
	
	void next()override
	{
		pointer++;
     162:	dc 01       	movw	r26, r24
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	2d 91       	ld	r18, X+
     168:	3c 91       	ld	r19, X
     16a:	15 97       	sbiw	r26, 0x05	; 5
     16c:	2f 5f       	subi	r18, 0xFF	; 255
     16e:	3f 4f       	sbci	r19, 0xFF	; 255
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
     170:	23 30       	cpi	r18, 0x03	; 3
     172:	31 05       	cpc	r19, r1
     174:	2c f4       	brge	.+10     	; 0x180 <_ZN9Main_Menu4nextEv+0x1e>

	};
	
	void next()override
	{
		pointer++;
     176:	15 96       	adiw	r26, 0x05	; 5
     178:	3c 93       	st	X, r19
     17a:	2e 93       	st	-X, r18
     17c:	14 97       	sbiw	r26, 0x04	; 4
     17e:	03 c0       	rjmp	.+6      	; 0x186 <_ZN9Main_Menu4nextEv+0x24>
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
     180:	fc 01       	movw	r30, r24
     182:	15 82       	std	Z+5, r1	; 0x05
     184:	14 82       	std	Z+4, r1	; 0x04
		actions();
     186:	dc 01       	movw	r26, r24
     188:	ed 91       	ld	r30, X+
     18a:	fc 91       	ld	r31, X
     18c:	00 88       	ldd	r0, Z+16	; 0x10
     18e:	f1 89       	ldd	r31, Z+17	; 0x11
     190:	e0 2d       	mov	r30, r0
     192:	09 95       	icall
     194:	08 95       	ret

00000196 <_ZN9Main_Menu8previousEv>:
	};
	
	void previous()override
	{
		pointer--;
     196:	dc 01       	movw	r26, r24
     198:	14 96       	adiw	r26, 0x04	; 4
     19a:	2d 91       	ld	r18, X+
     19c:	3c 91       	ld	r19, X
     19e:	15 97       	sbiw	r26, 0x05	; 5
     1a0:	21 50       	subi	r18, 0x01	; 1
     1a2:	31 09       	sbc	r19, r1
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
     1a4:	2a f0       	brmi	.+10     	; 0x1b0 <_ZN9Main_Menu8previousEv+0x1a>
		actions();
	};
	
	void previous()override
	{
		pointer--;
     1a6:	15 96       	adiw	r26, 0x05	; 5
     1a8:	3c 93       	st	X, r19
     1aa:	2e 93       	st	-X, r18
     1ac:	14 97       	sbiw	r26, 0x04	; 4
     1ae:	05 c0       	rjmp	.+10     	; 0x1ba <_ZN9Main_Menu8previousEv+0x24>
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
     1b0:	22 e0       	ldi	r18, 0x02	; 2
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	fc 01       	movw	r30, r24
     1b6:	35 83       	std	Z+5, r19	; 0x05
     1b8:	24 83       	std	Z+4, r18	; 0x04
		actions();
     1ba:	dc 01       	movw	r26, r24
     1bc:	ed 91       	ld	r30, X+
     1be:	fc 91       	ld	r31, X
     1c0:	00 88       	ldd	r0, Z+16	; 0x10
     1c2:	f1 89       	ldd	r31, Z+17	; 0x11
     1c4:	e0 2d       	mov	r30, r0
     1c6:	09 95       	icall
     1c8:	08 95       	ret

000001ca <_ZN9Main_Menu6choiseEv>:
	};
	
	void choise()override
	{
		switch(pointer)
     1ca:	dc 01       	movw	r26, r24
     1cc:	14 96       	adiw	r26, 0x04	; 4
     1ce:	2d 91       	ld	r18, X+
     1d0:	3c 91       	ld	r19, X
     1d2:	15 97       	sbiw	r26, 0x05	; 5
     1d4:	23 2b       	or	r18, r19
     1d6:	59 f4       	brne	.+22     	; 0x1ee <_ZN9Main_Menu6choiseEv+0x24>
		{
			case 0:
			{
			    Main_Menu_Status=false;
     1d8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=true;
     1dc:	21 e0       	ldi	r18, 0x01	; 1
     1de:	20 93 19 04 	sts	0x0419, r18	; 0x800419 <Password_Menu_Status>
				close();
     1e2:	ed 91       	ld	r30, X+
     1e4:	fc 91       	ld	r31, X
     1e6:	04 80       	ldd	r0, Z+4	; 0x04
     1e8:	f5 81       	ldd	r31, Z+5	; 0x05
     1ea:	e0 2d       	mov	r30, r0
     1ec:	09 95       	icall
     1ee:	08 95       	ret

000001f0 <_ZN9Main_Menu4backEv>:
				break;
			}
		}
	};
	
	void back()override
     1f0:	08 95       	ret

000001f2 <_ZN9Main_Menu7animateEv>:
	{
		
		
	};
	
	void animate()override
     1f2:	08 95       	ret

000001f4 <_ZN13Password_Menu7refreshEv>:
		oled.OLED_Write_To_Bufer(x[2],y+1,1,8,line);
		oled.OLED_Write_To_Bufer(x[3],y+1,1,8,line);
		oled.OLED_Write_To_Bufer(x[4],y+1,1,8,line);
	};
	
	void refresh() override
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	ec 01       	movw	r28, r24
	{
				//oled.OLED_Bufer_Clear();
				Default();
     1fa:	e8 81       	ld	r30, Y
     1fc:	f9 81       	ldd	r31, Y+1	; 0x01
     1fe:	01 90       	ld	r0, Z+
     200:	f0 81       	ld	r31, Z
     202:	e0 2d       	mov	r30, r0
     204:	09 95       	icall
				actions();
     206:	e8 81       	ld	r30, Y
     208:	f9 81       	ldd	r31, Y+1	; 0x01
     20a:	00 88       	ldd	r0, Z+16	; 0x10
     20c:	f1 89       	ldd	r31, Z+17	; 0x11
     20e:	e0 2d       	mov	r30, r0
     210:	ce 01       	movw	r24, r28
     212:	09 95       	icall
	};
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <_ZN13Password_Menu4nextEv>:
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
     21a:	dc 01       	movw	r26, r24
     21c:	16 96       	adiw	r26, 0x06	; 6
     21e:	2d 91       	ld	r18, X+
     220:	3c 91       	ld	r19, X
     222:	17 97       	sbiw	r26, 0x07	; 7
     224:	2f 5f       	subi	r18, 0xFF	; 255
     226:	3f 4f       	sbci	r19, 0xFF	; 255
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
     228:	2b 30       	cpi	r18, 0x0B	; 11
     22a:	31 05       	cpc	r19, r1
     22c:	2c f4       	brge	.+10     	; 0x238 <_ZN13Password_Menu4nextEv+0x1e>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
     22e:	17 96       	adiw	r26, 0x07	; 7
     230:	3c 93       	st	X, r19
     232:	2e 93       	st	-X, r18
     234:	16 97       	sbiw	r26, 0x06	; 6
     236:	03 c0       	rjmp	.+6      	; 0x23e <_ZN13Password_Menu4nextEv+0x24>
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
     238:	fc 01       	movw	r30, r24
     23a:	17 82       	std	Z+7, r1	; 0x07
     23c:	16 82       	std	Z+6, r1	; 0x06
		actions();
     23e:	dc 01       	movw	r26, r24
     240:	ed 91       	ld	r30, X+
     242:	fc 91       	ld	r31, X
     244:	00 88       	ldd	r0, Z+16	; 0x10
     246:	f1 89       	ldd	r31, Z+17	; 0x11
     248:	e0 2d       	mov	r30, r0
     24a:	09 95       	icall
     24c:	08 95       	ret

0000024e <_ZN13Password_Menu8previousEv>:
	};
	
	void previous()override
	{
		symbol_pointer--;
     24e:	dc 01       	movw	r26, r24
     250:	16 96       	adiw	r26, 0x06	; 6
     252:	2d 91       	ld	r18, X+
     254:	3c 91       	ld	r19, X
     256:	17 97       	sbiw	r26, 0x07	; 7
     258:	21 50       	subi	r18, 0x01	; 1
     25a:	31 09       	sbc	r19, r1
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
     25c:	2a f0       	brmi	.+10     	; 0x268 <_ZN13Password_Menu8previousEv+0x1a>
		actions();
	};
	
	void previous()override
	{
		symbol_pointer--;
     25e:	17 96       	adiw	r26, 0x07	; 7
     260:	3c 93       	st	X, r19
     262:	2e 93       	st	-X, r18
     264:	16 97       	sbiw	r26, 0x06	; 6
     266:	05 c0       	rjmp	.+10     	; 0x272 <_ZN13Password_Menu8previousEv+0x24>
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
     268:	2a e0       	ldi	r18, 0x0A	; 10
     26a:	30 e0       	ldi	r19, 0x00	; 0
     26c:	fc 01       	movw	r30, r24
     26e:	37 83       	std	Z+7, r19	; 0x07
     270:	26 83       	std	Z+6, r18	; 0x06
		actions();
     272:	dc 01       	movw	r26, r24
     274:	ed 91       	ld	r30, X+
     276:	fc 91       	ld	r31, X
     278:	00 88       	ldd	r0, Z+16	; 0x10
     27a:	f1 89       	ldd	r31, Z+17	; 0x11
     27c:	e0 2d       	mov	r30, r0
     27e:	09 95       	icall
     280:	08 95       	ret

00000282 <_ZN13Password_Menu7animateEv>:
				 pointer=0;
		}
		else actions();	
	};
	
	void animate()override
     282:	08 95       	ret

00000284 <_ZN13Password_Menu6choiseEv>:
		symbol_pointer--;
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
		actions();
	};
	
	void choise()override
     284:	af 92       	push	r10
     286:	bf 92       	push	r11
     288:	cf 92       	push	r12
     28a:	df 92       	push	r13
     28c:	ef 92       	push	r14
     28e:	ff 92       	push	r15
     290:	0f 93       	push	r16
     292:	1f 93       	push	r17
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	ec 01       	movw	r28, r24
	{
		switch(symbol_pointer)
     29a:	ee 81       	ldd	r30, Y+6	; 0x06
     29c:	ff 81       	ldd	r31, Y+7	; 0x07
     29e:	eb 30       	cpi	r30, 0x0B	; 11
     2a0:	f1 05       	cpc	r31, r1
     2a2:	08 f0       	brcs	.+2      	; 0x2a6 <_ZN13Password_Menu6choiseEv+0x22>
     2a4:	25 c2       	rjmp	.+1098   	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     2a6:	ea 5b       	subi	r30, 0xBA	; 186
     2a8:	ff 4f       	sbci	r31, 0xFF	; 255
     2aa:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__tablejump2__>
		{
			case 0:
			{
    			 pointer++;
     2ae:	8c 81       	ldd	r24, Y+4	; 0x04
     2b0:	9d 81       	ldd	r25, Y+5	; 0x05
     2b2:	01 96       	adiw	r24, 0x01	; 1
     2b4:	9d 83       	std	Y+5, r25	; 0x05
     2b6:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     2b8:	18 16       	cp	r1, r24
     2ba:	19 06       	cpc	r1, r25
     2bc:	0c f0       	brlt	.+2      	; 0x2c0 <_ZN13Password_Menu6choiseEv+0x3c>
     2be:	18 c2       	rjmp	.+1072   	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     2c0:	6e 01       	movw	r12, r28
     2c2:	88 e0       	ldi	r24, 0x08	; 8
     2c4:	c8 0e       	add	r12, r24
     2c6:	d1 1c       	adc	r13, r1
     2c8:	e1 2c       	mov	r14, r1
     2ca:	f1 2c       	mov	r15, r1
     2cc:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     2ce:	4a 89       	ldd	r20, Y+18	; 0x12
     2d0:	5b 89       	ldd	r21, Y+19	; 0x13
     2d2:	4e 5f       	subi	r20, 0xFE	; 254
     2d4:	5f 4f       	sbci	r21, 0xFF	; 255
     2d6:	f6 01       	movw	r30, r12
     2d8:	61 91       	ld	r22, Z+
     2da:	71 91       	ld	r23, Z+
     2dc:	6f 01       	movw	r12, r30
     2de:	08 e0       	ldi	r16, 0x08	; 8
     2e0:	10 e0       	ldi	r17, 0x00	; 0
     2e2:	21 e0       	ldi	r18, 0x01	; 1
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	8a e1       	ldi	r24, 0x1A	; 26
     2e8:	94 e0       	ldi	r25, 0x04	; 4
     2ea:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     2ee:	4a 89       	ldd	r20, Y+18	; 0x12
     2f0:	5b 89       	ldd	r21, Y+19	; 0x13
     2f2:	41 50       	subi	r20, 0x01	; 1
     2f4:	51 09       	sbc	r21, r1
     2f6:	f5 01       	movw	r30, r10
     2f8:	60 81       	ld	r22, Z
     2fa:	71 81       	ldd	r23, Z+1	; 0x01
     2fc:	21 e0       	ldi	r18, 0x01	; 1
     2fe:	30 e0       	ldi	r19, 0x00	; 0
     300:	8a e1       	ldi	r24, 0x1A	; 26
     302:	94 e0       	ldi	r25, 0x04	; 4
     304:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		switch(symbol_pointer)
		{
			case 0:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     308:	ff ef       	ldi	r31, 0xFF	; 255
     30a:	ef 1a       	sub	r14, r31
     30c:	ff 0a       	sbc	r15, r31
     30e:	8c 81       	ldd	r24, Y+4	; 0x04
     310:	9d 81       	ldd	r25, Y+5	; 0x05
     312:	e8 16       	cp	r14, r24
     314:	f9 06       	cpc	r15, r25
     316:	d4 f2       	brlt	.-76     	; 0x2cc <_ZN13Password_Menu6choiseEv+0x48>
     318:	eb c1       	rjmp	.+982    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 1:
			{
    			 pointer++;
     31a:	8c 81       	ldd	r24, Y+4	; 0x04
     31c:	9d 81       	ldd	r25, Y+5	; 0x05
     31e:	01 96       	adiw	r24, 0x01	; 1
     320:	9d 83       	std	Y+5, r25	; 0x05
     322:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     324:	18 16       	cp	r1, r24
     326:	19 06       	cpc	r1, r25
     328:	0c f0       	brlt	.+2      	; 0x32c <_ZN13Password_Menu6choiseEv+0xa8>
     32a:	e2 c1       	rjmp	.+964    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     32c:	6e 01       	movw	r12, r28
     32e:	88 e0       	ldi	r24, 0x08	; 8
     330:	c8 0e       	add	r12, r24
     332:	d1 1c       	adc	r13, r1
     334:	e1 2c       	mov	r14, r1
     336:	f1 2c       	mov	r15, r1
     338:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     33a:	4a 89       	ldd	r20, Y+18	; 0x12
     33c:	5b 89       	ldd	r21, Y+19	; 0x13
     33e:	4e 5f       	subi	r20, 0xFE	; 254
     340:	5f 4f       	sbci	r21, 0xFF	; 255
     342:	f6 01       	movw	r30, r12
     344:	61 91       	ld	r22, Z+
     346:	71 91       	ld	r23, Z+
     348:	6f 01       	movw	r12, r30
     34a:	08 e0       	ldi	r16, 0x08	; 8
     34c:	10 e0       	ldi	r17, 0x00	; 0
     34e:	21 e0       	ldi	r18, 0x01	; 1
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	8a e1       	ldi	r24, 0x1A	; 26
     354:	94 e0       	ldi	r25, 0x04	; 4
     356:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     35a:	4a 89       	ldd	r20, Y+18	; 0x12
     35c:	5b 89       	ldd	r21, Y+19	; 0x13
     35e:	41 50       	subi	r20, 0x01	; 1
     360:	51 09       	sbc	r21, r1
     362:	f5 01       	movw	r30, r10
     364:	60 81       	ld	r22, Z
     366:	71 81       	ldd	r23, Z+1	; 0x01
     368:	21 e0       	ldi	r18, 0x01	; 1
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	8a e1       	ldi	r24, 0x1A	; 26
     36e:	94 e0       	ldi	r25, 0x04	; 4
     370:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 1:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     374:	ff ef       	ldi	r31, 0xFF	; 255
     376:	ef 1a       	sub	r14, r31
     378:	ff 0a       	sbc	r15, r31
     37a:	8c 81       	ldd	r24, Y+4	; 0x04
     37c:	9d 81       	ldd	r25, Y+5	; 0x05
     37e:	e8 16       	cp	r14, r24
     380:	f9 06       	cpc	r15, r25
     382:	d4 f2       	brlt	.-76     	; 0x338 <_ZN13Password_Menu6choiseEv+0xb4>
     384:	b5 c1       	rjmp	.+874    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 2:
			{
	    			 pointer++;
     386:	8c 81       	ldd	r24, Y+4	; 0x04
     388:	9d 81       	ldd	r25, Y+5	; 0x05
     38a:	01 96       	adiw	r24, 0x01	; 1
     38c:	9d 83       	std	Y+5, r25	; 0x05
     38e:	8c 83       	std	Y+4, r24	; 0x04
	    			 for(int i=0;i<pointer;i++)
     390:	18 16       	cp	r1, r24
     392:	19 06       	cpc	r1, r25
     394:	0c f0       	brlt	.+2      	; 0x398 <_ZN13Password_Menu6choiseEv+0x114>
     396:	ac c1       	rjmp	.+856    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     398:	6e 01       	movw	r12, r28
     39a:	88 e0       	ldi	r24, 0x08	; 8
     39c:	c8 0e       	add	r12, r24
     39e:	d1 1c       	adc	r13, r1
     3a0:	e1 2c       	mov	r14, r1
     3a2:	f1 2c       	mov	r15, r1
     3a4:	56 01       	movw	r10, r12
	    			 {
		    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     3a6:	4a 89       	ldd	r20, Y+18	; 0x12
     3a8:	5b 89       	ldd	r21, Y+19	; 0x13
     3aa:	4e 5f       	subi	r20, 0xFE	; 254
     3ac:	5f 4f       	sbci	r21, 0xFF	; 255
     3ae:	f6 01       	movw	r30, r12
     3b0:	61 91       	ld	r22, Z+
     3b2:	71 91       	ld	r23, Z+
     3b4:	6f 01       	movw	r12, r30
     3b6:	08 e0       	ldi	r16, 0x08	; 8
     3b8:	10 e0       	ldi	r17, 0x00	; 0
     3ba:	21 e0       	ldi	r18, 0x01	; 1
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	8a e1       	ldi	r24, 0x1A	; 26
     3c0:	94 e0       	ldi	r25, 0x04	; 4
     3c2:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     3c6:	4a 89       	ldd	r20, Y+18	; 0x12
     3c8:	5b 89       	ldd	r21, Y+19	; 0x13
     3ca:	41 50       	subi	r20, 0x01	; 1
     3cc:	51 09       	sbc	r21, r1
     3ce:	f5 01       	movw	r30, r10
     3d0:	60 81       	ld	r22, Z
     3d2:	71 81       	ldd	r23, Z+1	; 0x01
     3d4:	21 e0       	ldi	r18, 0x01	; 1
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	8a e1       	ldi	r24, 0x1A	; 26
     3da:	94 e0       	ldi	r25, 0x04	; 4
     3dc:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 2:
			{
	    			 pointer++;
	    			 for(int i=0;i<pointer;i++)
     3e0:	ff ef       	ldi	r31, 0xFF	; 255
     3e2:	ef 1a       	sub	r14, r31
     3e4:	ff 0a       	sbc	r15, r31
     3e6:	8c 81       	ldd	r24, Y+4	; 0x04
     3e8:	9d 81       	ldd	r25, Y+5	; 0x05
     3ea:	e8 16       	cp	r14, r24
     3ec:	f9 06       	cpc	r15, r25
     3ee:	d4 f2       	brlt	.-76     	; 0x3a4 <_ZN13Password_Menu6choiseEv+0x120>
     3f0:	7f c1       	rjmp	.+766    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
	    			 }
	    			 break;
			}
			case 3:
			{
    			 pointer++;
     3f2:	8c 81       	ldd	r24, Y+4	; 0x04
     3f4:	9d 81       	ldd	r25, Y+5	; 0x05
     3f6:	01 96       	adiw	r24, 0x01	; 1
     3f8:	9d 83       	std	Y+5, r25	; 0x05
     3fa:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     3fc:	18 16       	cp	r1, r24
     3fe:	19 06       	cpc	r1, r25
     400:	0c f0       	brlt	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     402:	76 c1       	rjmp	.+748    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     404:	6e 01       	movw	r12, r28
     406:	88 e0       	ldi	r24, 0x08	; 8
     408:	c8 0e       	add	r12, r24
     40a:	d1 1c       	adc	r13, r1
     40c:	e1 2c       	mov	r14, r1
     40e:	f1 2c       	mov	r15, r1
     410:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     412:	4a 89       	ldd	r20, Y+18	; 0x12
     414:	5b 89       	ldd	r21, Y+19	; 0x13
     416:	4e 5f       	subi	r20, 0xFE	; 254
     418:	5f 4f       	sbci	r21, 0xFF	; 255
     41a:	f6 01       	movw	r30, r12
     41c:	61 91       	ld	r22, Z+
     41e:	71 91       	ld	r23, Z+
     420:	6f 01       	movw	r12, r30
     422:	08 e0       	ldi	r16, 0x08	; 8
     424:	10 e0       	ldi	r17, 0x00	; 0
     426:	21 e0       	ldi	r18, 0x01	; 1
     428:	30 e0       	ldi	r19, 0x00	; 0
     42a:	8a e1       	ldi	r24, 0x1A	; 26
     42c:	94 e0       	ldi	r25, 0x04	; 4
     42e:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     432:	4a 89       	ldd	r20, Y+18	; 0x12
     434:	5b 89       	ldd	r21, Y+19	; 0x13
     436:	41 50       	subi	r20, 0x01	; 1
     438:	51 09       	sbc	r21, r1
     43a:	f5 01       	movw	r30, r10
     43c:	60 81       	ld	r22, Z
     43e:	71 81       	ldd	r23, Z+1	; 0x01
     440:	21 e0       	ldi	r18, 0x01	; 1
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	8a e1       	ldi	r24, 0x1A	; 26
     446:	94 e0       	ldi	r25, 0x04	; 4
     448:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     44c:	ff ef       	ldi	r31, 0xFF	; 255
     44e:	ef 1a       	sub	r14, r31
     450:	ff 0a       	sbc	r15, r31
     452:	8c 81       	ldd	r24, Y+4	; 0x04
     454:	9d 81       	ldd	r25, Y+5	; 0x05
     456:	e8 16       	cp	r14, r24
     458:	f9 06       	cpc	r15, r25
     45a:	d4 f2       	brlt	.-76     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     45c:	49 c1       	rjmp	.+658    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 4:
			{
    			 pointer++;
     45e:	8c 81       	ldd	r24, Y+4	; 0x04
     460:	9d 81       	ldd	r25, Y+5	; 0x05
     462:	01 96       	adiw	r24, 0x01	; 1
     464:	9d 83       	std	Y+5, r25	; 0x05
     466:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     468:	18 16       	cp	r1, r24
     46a:	19 06       	cpc	r1, r25
     46c:	0c f0       	brlt	.+2      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     46e:	40 c1       	rjmp	.+640    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     470:	6e 01       	movw	r12, r28
     472:	88 e0       	ldi	r24, 0x08	; 8
     474:	c8 0e       	add	r12, r24
     476:	d1 1c       	adc	r13, r1
     478:	e1 2c       	mov	r14, r1
     47a:	f1 2c       	mov	r15, r1
     47c:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     47e:	4a 89       	ldd	r20, Y+18	; 0x12
     480:	5b 89       	ldd	r21, Y+19	; 0x13
     482:	4e 5f       	subi	r20, 0xFE	; 254
     484:	5f 4f       	sbci	r21, 0xFF	; 255
     486:	f6 01       	movw	r30, r12
     488:	61 91       	ld	r22, Z+
     48a:	71 91       	ld	r23, Z+
     48c:	6f 01       	movw	r12, r30
     48e:	08 e0       	ldi	r16, 0x08	; 8
     490:	10 e0       	ldi	r17, 0x00	; 0
     492:	21 e0       	ldi	r18, 0x01	; 1
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	8a e1       	ldi	r24, 0x1A	; 26
     498:	94 e0       	ldi	r25, 0x04	; 4
     49a:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     49e:	4a 89       	ldd	r20, Y+18	; 0x12
     4a0:	5b 89       	ldd	r21, Y+19	; 0x13
     4a2:	41 50       	subi	r20, 0x01	; 1
     4a4:	51 09       	sbc	r21, r1
     4a6:	f5 01       	movw	r30, r10
     4a8:	60 81       	ld	r22, Z
     4aa:	71 81       	ldd	r23, Z+1	; 0x01
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	30 e0       	ldi	r19, 0x00	; 0
     4b0:	8a e1       	ldi	r24, 0x1A	; 26
     4b2:	94 e0       	ldi	r25, 0x04	; 4
     4b4:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 4:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     4b8:	ff ef       	ldi	r31, 0xFF	; 255
     4ba:	ef 1a       	sub	r14, r31
     4bc:	ff 0a       	sbc	r15, r31
     4be:	8c 81       	ldd	r24, Y+4	; 0x04
     4c0:	9d 81       	ldd	r25, Y+5	; 0x05
     4c2:	e8 16       	cp	r14, r24
     4c4:	f9 06       	cpc	r15, r25
     4c6:	d4 f2       	brlt	.-76     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     4c8:	13 c1       	rjmp	.+550    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 5:
			{
    			 pointer++;
     4ca:	8c 81       	ldd	r24, Y+4	; 0x04
     4cc:	9d 81       	ldd	r25, Y+5	; 0x05
     4ce:	01 96       	adiw	r24, 0x01	; 1
     4d0:	9d 83       	std	Y+5, r25	; 0x05
     4d2:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     4d4:	18 16       	cp	r1, r24
     4d6:	19 06       	cpc	r1, r25
     4d8:	0c f0       	brlt	.+2      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
     4da:	0a c1       	rjmp	.+532    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     4dc:	6e 01       	movw	r12, r28
     4de:	88 e0       	ldi	r24, 0x08	; 8
     4e0:	c8 0e       	add	r12, r24
     4e2:	d1 1c       	adc	r13, r1
     4e4:	e1 2c       	mov	r14, r1
     4e6:	f1 2c       	mov	r15, r1
     4e8:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     4ea:	4a 89       	ldd	r20, Y+18	; 0x12
     4ec:	5b 89       	ldd	r21, Y+19	; 0x13
     4ee:	4e 5f       	subi	r20, 0xFE	; 254
     4f0:	5f 4f       	sbci	r21, 0xFF	; 255
     4f2:	f6 01       	movw	r30, r12
     4f4:	61 91       	ld	r22, Z+
     4f6:	71 91       	ld	r23, Z+
     4f8:	6f 01       	movw	r12, r30
     4fa:	08 e0       	ldi	r16, 0x08	; 8
     4fc:	10 e0       	ldi	r17, 0x00	; 0
     4fe:	21 e0       	ldi	r18, 0x01	; 1
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	8a e1       	ldi	r24, 0x1A	; 26
     504:	94 e0       	ldi	r25, 0x04	; 4
     506:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     50a:	4a 89       	ldd	r20, Y+18	; 0x12
     50c:	5b 89       	ldd	r21, Y+19	; 0x13
     50e:	41 50       	subi	r20, 0x01	; 1
     510:	51 09       	sbc	r21, r1
     512:	f5 01       	movw	r30, r10
     514:	60 81       	ld	r22, Z
     516:	71 81       	ldd	r23, Z+1	; 0x01
     518:	21 e0       	ldi	r18, 0x01	; 1
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	8a e1       	ldi	r24, 0x1A	; 26
     51e:	94 e0       	ldi	r25, 0x04	; 4
     520:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 5:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     524:	ff ef       	ldi	r31, 0xFF	; 255
     526:	ef 1a       	sub	r14, r31
     528:	ff 0a       	sbc	r15, r31
     52a:	8c 81       	ldd	r24, Y+4	; 0x04
     52c:	9d 81       	ldd	r25, Y+5	; 0x05
     52e:	e8 16       	cp	r14, r24
     530:	f9 06       	cpc	r15, r25
     532:	d4 f2       	brlt	.-76     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
     534:	dd c0       	rjmp	.+442    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 6:
			{
    			 pointer++;
     536:	8c 81       	ldd	r24, Y+4	; 0x04
     538:	9d 81       	ldd	r25, Y+5	; 0x05
     53a:	01 96       	adiw	r24, 0x01	; 1
     53c:	9d 83       	std	Y+5, r25	; 0x05
     53e:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     540:	18 16       	cp	r1, r24
     542:	19 06       	cpc	r1, r25
     544:	0c f0       	brlt	.+2      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
     546:	d4 c0       	rjmp	.+424    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     548:	6e 01       	movw	r12, r28
     54a:	88 e0       	ldi	r24, 0x08	; 8
     54c:	c8 0e       	add	r12, r24
     54e:	d1 1c       	adc	r13, r1
     550:	e1 2c       	mov	r14, r1
     552:	f1 2c       	mov	r15, r1
     554:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     556:	4a 89       	ldd	r20, Y+18	; 0x12
     558:	5b 89       	ldd	r21, Y+19	; 0x13
     55a:	4e 5f       	subi	r20, 0xFE	; 254
     55c:	5f 4f       	sbci	r21, 0xFF	; 255
     55e:	f6 01       	movw	r30, r12
     560:	61 91       	ld	r22, Z+
     562:	71 91       	ld	r23, Z+
     564:	6f 01       	movw	r12, r30
     566:	08 e0       	ldi	r16, 0x08	; 8
     568:	10 e0       	ldi	r17, 0x00	; 0
     56a:	21 e0       	ldi	r18, 0x01	; 1
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	8a e1       	ldi	r24, 0x1A	; 26
     570:	94 e0       	ldi	r25, 0x04	; 4
     572:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     576:	4a 89       	ldd	r20, Y+18	; 0x12
     578:	5b 89       	ldd	r21, Y+19	; 0x13
     57a:	41 50       	subi	r20, 0x01	; 1
     57c:	51 09       	sbc	r21, r1
     57e:	f5 01       	movw	r30, r10
     580:	60 81       	ld	r22, Z
     582:	71 81       	ldd	r23, Z+1	; 0x01
     584:	21 e0       	ldi	r18, 0x01	; 1
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	8a e1       	ldi	r24, 0x1A	; 26
     58a:	94 e0       	ldi	r25, 0x04	; 4
     58c:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 6:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     590:	ff ef       	ldi	r31, 0xFF	; 255
     592:	ef 1a       	sub	r14, r31
     594:	ff 0a       	sbc	r15, r31
     596:	8c 81       	ldd	r24, Y+4	; 0x04
     598:	9d 81       	ldd	r25, Y+5	; 0x05
     59a:	e8 16       	cp	r14, r24
     59c:	f9 06       	cpc	r15, r25
     59e:	d4 f2       	brlt	.-76     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
     5a0:	a7 c0       	rjmp	.+334    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 7:
			{
    			 pointer++;
     5a2:	8c 81       	ldd	r24, Y+4	; 0x04
     5a4:	9d 81       	ldd	r25, Y+5	; 0x05
     5a6:	01 96       	adiw	r24, 0x01	; 1
     5a8:	9d 83       	std	Y+5, r25	; 0x05
     5aa:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     5ac:	18 16       	cp	r1, r24
     5ae:	19 06       	cpc	r1, r25
     5b0:	0c f0       	brlt	.+2      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5b2:	9e c0       	rjmp	.+316    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     5b4:	6e 01       	movw	r12, r28
     5b6:	88 e0       	ldi	r24, 0x08	; 8
     5b8:	c8 0e       	add	r12, r24
     5ba:	d1 1c       	adc	r13, r1
     5bc:	e1 2c       	mov	r14, r1
     5be:	f1 2c       	mov	r15, r1
     5c0:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     5c2:	4a 89       	ldd	r20, Y+18	; 0x12
     5c4:	5b 89       	ldd	r21, Y+19	; 0x13
     5c6:	4e 5f       	subi	r20, 0xFE	; 254
     5c8:	5f 4f       	sbci	r21, 0xFF	; 255
     5ca:	f6 01       	movw	r30, r12
     5cc:	61 91       	ld	r22, Z+
     5ce:	71 91       	ld	r23, Z+
     5d0:	6f 01       	movw	r12, r30
     5d2:	08 e0       	ldi	r16, 0x08	; 8
     5d4:	10 e0       	ldi	r17, 0x00	; 0
     5d6:	21 e0       	ldi	r18, 0x01	; 1
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	8a e1       	ldi	r24, 0x1A	; 26
     5dc:	94 e0       	ldi	r25, 0x04	; 4
     5de:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     5e2:	4a 89       	ldd	r20, Y+18	; 0x12
     5e4:	5b 89       	ldd	r21, Y+19	; 0x13
     5e6:	41 50       	subi	r20, 0x01	; 1
     5e8:	51 09       	sbc	r21, r1
     5ea:	f5 01       	movw	r30, r10
     5ec:	60 81       	ld	r22, Z
     5ee:	71 81       	ldd	r23, Z+1	; 0x01
     5f0:	21 e0       	ldi	r18, 0x01	; 1
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	8a e1       	ldi	r24, 0x1A	; 26
     5f6:	94 e0       	ldi	r25, 0x04	; 4
     5f8:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 7:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     5fc:	ff ef       	ldi	r31, 0xFF	; 255
     5fe:	ef 1a       	sub	r14, r31
     600:	ff 0a       	sbc	r15, r31
     602:	8c 81       	ldd	r24, Y+4	; 0x04
     604:	9d 81       	ldd	r25, Y+5	; 0x05
     606:	e8 16       	cp	r14, r24
     608:	f9 06       	cpc	r15, r25
     60a:	d4 f2       	brlt	.-76     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
     60c:	71 c0       	rjmp	.+226    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 8:
			{
    			 pointer++;
     60e:	8c 81       	ldd	r24, Y+4	; 0x04
     610:	9d 81       	ldd	r25, Y+5	; 0x05
     612:	01 96       	adiw	r24, 0x01	; 1
     614:	9d 83       	std	Y+5, r25	; 0x05
     616:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     618:	18 16       	cp	r1, r24
     61a:	19 06       	cpc	r1, r25
     61c:	0c f0       	brlt	.+2      	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
     61e:	68 c0       	rjmp	.+208    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     620:	6e 01       	movw	r12, r28
     622:	88 e0       	ldi	r24, 0x08	; 8
     624:	c8 0e       	add	r12, r24
     626:	d1 1c       	adc	r13, r1
     628:	e1 2c       	mov	r14, r1
     62a:	f1 2c       	mov	r15, r1
     62c:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     62e:	4a 89       	ldd	r20, Y+18	; 0x12
     630:	5b 89       	ldd	r21, Y+19	; 0x13
     632:	4e 5f       	subi	r20, 0xFE	; 254
     634:	5f 4f       	sbci	r21, 0xFF	; 255
     636:	f6 01       	movw	r30, r12
     638:	61 91       	ld	r22, Z+
     63a:	71 91       	ld	r23, Z+
     63c:	6f 01       	movw	r12, r30
     63e:	08 e0       	ldi	r16, 0x08	; 8
     640:	10 e0       	ldi	r17, 0x00	; 0
     642:	21 e0       	ldi	r18, 0x01	; 1
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	8a e1       	ldi	r24, 0x1A	; 26
     648:	94 e0       	ldi	r25, 0x04	; 4
     64a:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     64e:	4a 89       	ldd	r20, Y+18	; 0x12
     650:	5b 89       	ldd	r21, Y+19	; 0x13
     652:	41 50       	subi	r20, 0x01	; 1
     654:	51 09       	sbc	r21, r1
     656:	f5 01       	movw	r30, r10
     658:	60 81       	ld	r22, Z
     65a:	71 81       	ldd	r23, Z+1	; 0x01
     65c:	21 e0       	ldi	r18, 0x01	; 1
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	8a e1       	ldi	r24, 0x1A	; 26
     662:	94 e0       	ldi	r25, 0x04	; 4
     664:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 8:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     668:	ff ef       	ldi	r31, 0xFF	; 255
     66a:	ef 1a       	sub	r14, r31
     66c:	ff 0a       	sbc	r15, r31
     66e:	8c 81       	ldd	r24, Y+4	; 0x04
     670:	9d 81       	ldd	r25, Y+5	; 0x05
     672:	e8 16       	cp	r14, r24
     674:	f9 06       	cpc	r15, r25
     676:	d4 f2       	brlt	.-76     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
     678:	3b c0       	rjmp	.+118    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
    			 }
    			 break;
			}
			case 9:
			{
    			 pointer++;
     67a:	8c 81       	ldd	r24, Y+4	; 0x04
     67c:	9d 81       	ldd	r25, Y+5	; 0x05
     67e:	01 96       	adiw	r24, 0x01	; 1
     680:	9d 83       	std	Y+5, r25	; 0x05
     682:	8c 83       	std	Y+4, r24	; 0x04
				for(int i=0;i<pointer;i++)
     684:	18 16       	cp	r1, r24
     686:	19 06       	cpc	r1, r25
     688:	9c f5       	brge	.+102    	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
     68a:	6e 01       	movw	r12, r28
     68c:	88 e0       	ldi	r24, 0x08	; 8
     68e:	c8 0e       	add	r12, r24
     690:	d1 1c       	adc	r13, r1
     692:	e1 2c       	mov	r14, r1
     694:	f1 2c       	mov	r15, r1
     696:	56 01       	movw	r10, r12
				{
					oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     698:	4a 89       	ldd	r20, Y+18	; 0x12
     69a:	5b 89       	ldd	r21, Y+19	; 0x13
     69c:	4e 5f       	subi	r20, 0xFE	; 254
     69e:	5f 4f       	sbci	r21, 0xFF	; 255
     6a0:	f6 01       	movw	r30, r12
     6a2:	61 91       	ld	r22, Z+
     6a4:	71 91       	ld	r23, Z+
     6a6:	6f 01       	movw	r12, r30
     6a8:	08 e0       	ldi	r16, 0x08	; 8
     6aa:	10 e0       	ldi	r17, 0x00	; 0
     6ac:	21 e0       	ldi	r18, 0x01	; 1
     6ae:	30 e0       	ldi	r19, 0x00	; 0
     6b0:	8a e1       	ldi	r24, 0x1A	; 26
     6b2:	94 e0       	ldi	r25, 0x04	; 4
     6b4:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     6b8:	4a 89       	ldd	r20, Y+18	; 0x12
     6ba:	5b 89       	ldd	r21, Y+19	; 0x13
     6bc:	41 50       	subi	r20, 0x01	; 1
     6be:	51 09       	sbc	r21, r1
     6c0:	f5 01       	movw	r30, r10
     6c2:	60 81       	ld	r22, Z
     6c4:	71 81       	ldd	r23, Z+1	; 0x01
     6c6:	21 e0       	ldi	r18, 0x01	; 1
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	8a e1       	ldi	r24, 0x1A	; 26
     6cc:	94 e0       	ldi	r25, 0x04	; 4
     6ce:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 9:
			{
    			 pointer++;
				for(int i=0;i<pointer;i++)
     6d2:	ff ef       	ldi	r31, 0xFF	; 255
     6d4:	ef 1a       	sub	r14, r31
     6d6:	ff 0a       	sbc	r15, r31
     6d8:	8c 81       	ldd	r24, Y+4	; 0x04
     6da:	9d 81       	ldd	r25, Y+5	; 0x05
     6dc:	e8 16       	cp	r14, r24
     6de:	f9 06       	cpc	r15, r25
     6e0:	d4 f2       	brlt	.-76     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
     6e2:	06 c0       	rjmp	.+12     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
				}
				break;
			}
			case 10:
			{
				 back();
     6e4:	e8 81       	ld	r30, Y
     6e6:	f9 81       	ldd	r31, Y+1	; 0x01
     6e8:	04 84       	ldd	r0, Z+12	; 0x0c
     6ea:	f5 85       	ldd	r31, Z+13	; 0x0d
     6ec:	e0 2d       	mov	r30, r0
     6ee:	09 95       	icall
				break;
			}
		}
		     if(pointer>PASSWORD_MENU_POINER_COUNT) {
     6f0:	8c 81       	ldd	r24, Y+4	; 0x04
     6f2:	9d 81       	ldd	r25, Y+5	; 0x05
     6f4:	05 97       	sbiw	r24, 0x05	; 5
     6f6:	6c f0       	brlt	.+26     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
				 
				Main_Menu_Status=true;
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=false;
     6fe:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <Password_Menu_Status>
				close();
     702:	e8 81       	ld	r30, Y
     704:	f9 81       	ldd	r31, Y+1	; 0x01
     706:	04 80       	ldd	r0, Z+4	; 0x04
     708:	f5 81       	ldd	r31, Z+5	; 0x05
     70a:	e0 2d       	mov	r30, r0
     70c:	ce 01       	movw	r24, r28
     70e:	09 95       	icall
     710:	09 c0       	rjmp	.+18     	; 0x724 <__LOCK_REGION_LENGTH__+0x324>
				 }
			 else
			 {
				 symbol_pointer=0;
     712:	1f 82       	std	Y+7, r1	; 0x07
     714:	1e 82       	std	Y+6, r1	; 0x06
				 actions();	 
     716:	e8 81       	ld	r30, Y
     718:	f9 81       	ldd	r31, Y+1	; 0x01
     71a:	00 88       	ldd	r0, Z+16	; 0x10
     71c:	f1 89       	ldd	r31, Z+17	; 0x11
     71e:	e0 2d       	mov	r30, r0
     720:	ce 01       	movw	r24, r28
     722:	09 95       	icall
			 }
		
		
	};
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	1f 91       	pop	r17
     72a:	0f 91       	pop	r16
     72c:	ff 90       	pop	r15
     72e:	ef 90       	pop	r14
     730:	df 90       	pop	r13
     732:	cf 90       	pop	r12
     734:	bf 90       	pop	r11
     736:	af 90       	pop	r10
     738:	08 95       	ret

0000073a <_ZN13Password_Menu4backEv>:
	
	void back()override
     73a:	0f 93       	push	r16
     73c:	1f 93       	push	r17
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	ec 01       	movw	r28, r24
	{
		oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     744:	4a 89       	ldd	r20, Y+18	; 0x12
     746:	5b 89       	ldd	r21, Y+19	; 0x13
     748:	ec 81       	ldd	r30, Y+4	; 0x04
     74a:	fd 81       	ldd	r31, Y+5	; 0x05
     74c:	34 96       	adiw	r30, 0x04	; 4
     74e:	ee 0f       	add	r30, r30
     750:	ff 1f       	adc	r31, r31
     752:	e8 0f       	add	r30, r24
     754:	f9 1f       	adc	r31, r25
     756:	60 81       	ld	r22, Z
     758:	71 81       	ldd	r23, Z+1	; 0x01
     75a:	08 e0       	ldi	r16, 0x08	; 8
     75c:	10 e0       	ldi	r17, 0x00	; 0
     75e:	21 e0       	ldi	r18, 0x01	; 1
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	8a e1       	ldi	r24, 0x1A	; 26
     764:	94 e0       	ldi	r25, 0x04	; 4
     766:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Clear_Bufer_part(x[pointer],y+2,1,8);
     76a:	4a 89       	ldd	r20, Y+18	; 0x12
     76c:	5b 89       	ldd	r21, Y+19	; 0x13
     76e:	4e 5f       	subi	r20, 0xFE	; 254
     770:	5f 4f       	sbci	r21, 0xFF	; 255
     772:	ec 81       	ldd	r30, Y+4	; 0x04
     774:	fd 81       	ldd	r31, Y+5	; 0x05
     776:	34 96       	adiw	r30, 0x04	; 4
     778:	ee 0f       	add	r30, r30
     77a:	ff 1f       	adc	r31, r31
     77c:	ec 0f       	add	r30, r28
     77e:	fd 1f       	adc	r31, r29
     780:	60 81       	ld	r22, Z
     782:	71 81       	ldd	r23, Z+1	; 0x01
     784:	21 e0       	ldi	r18, 0x01	; 1
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	8a e1       	ldi	r24, 0x1A	; 26
     78a:	94 e0       	ldi	r25, 0x04	; 4
     78c:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Clear_Bufer_part(x[pointer],y-1,1,8);
     790:	4a 89       	ldd	r20, Y+18	; 0x12
     792:	5b 89       	ldd	r21, Y+19	; 0x13
     794:	41 50       	subi	r20, 0x01	; 1
     796:	51 09       	sbc	r21, r1
     798:	ec 81       	ldd	r30, Y+4	; 0x04
     79a:	fd 81       	ldd	r31, Y+5	; 0x05
     79c:	34 96       	adiw	r30, 0x04	; 4
     79e:	ee 0f       	add	r30, r30
     7a0:	ff 1f       	adc	r31, r31
     7a2:	ec 0f       	add	r30, r28
     7a4:	fd 1f       	adc	r31, r29
     7a6:	60 81       	ld	r22, Z
     7a8:	71 81       	ldd	r23, Z+1	; 0x01
     7aa:	21 e0       	ldi	r18, 0x01	; 1
     7ac:	30 e0       	ldi	r19, 0x00	; 0
     7ae:	8a e1       	ldi	r24, 0x1A	; 26
     7b0:	94 e0       	ldi	r25, 0x04	; 4
     7b2:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		pointer--;
     7b6:	8c 81       	ldd	r24, Y+4	; 0x04
     7b8:	9d 81       	ldd	r25, Y+5	; 0x05
     7ba:	01 97       	sbiw	r24, 0x01	; 1
     7bc:	9d 83       	std	Y+5, r25	; 0x05
     7be:	8c 83       	std	Y+4, r24	; 0x04
		if(pointer<0) 
     7c0:	99 23       	and	r25, r25
     7c2:	7c f4       	brge	.+30     	; 0x7e2 <_ZN13Password_Menu4backEv+0xa8>
		{
			Password_Menu_Status=false;
     7c4:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <Password_Menu_Status>
		    Main_Menu_Status=true;
     7c8:	81 e0       	ldi	r24, 0x01	; 1
     7ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
				 close();
     7ce:	e8 81       	ld	r30, Y
     7d0:	f9 81       	ldd	r31, Y+1	; 0x01
     7d2:	04 80       	ldd	r0, Z+4	; 0x04
     7d4:	f5 81       	ldd	r31, Z+5	; 0x05
     7d6:	e0 2d       	mov	r30, r0
     7d8:	ce 01       	movw	r24, r28
     7da:	09 95       	icall
				 pointer=0;
     7dc:	1d 82       	std	Y+5, r1	; 0x05
     7de:	1c 82       	std	Y+4, r1	; 0x04
     7e0:	07 c0       	rjmp	.+14     	; 0x7f0 <_ZN13Password_Menu4backEv+0xb6>
		}
		else actions();	
     7e2:	e8 81       	ld	r30, Y
     7e4:	f9 81       	ldd	r31, Y+1	; 0x01
     7e6:	00 88       	ldd	r0, Z+16	; 0x10
     7e8:	f1 89       	ldd	r31, Z+17	; 0x11
     7ea:	e0 2d       	mov	r30, r0
     7ec:	ce 01       	movw	r24, r28
     7ee:	09 95       	icall
	};
     7f0:	df 91       	pop	r29
     7f2:	cf 91       	pop	r28
     7f4:	1f 91       	pop	r17
     7f6:	0f 91       	pop	r16
     7f8:	08 95       	ret

000007fa <_ZN13Password_Menu7actionsEv>:
	{
		
		
	};
	
	void actions()override
     7fa:	ef 92       	push	r14
     7fc:	ff 92       	push	r15
     7fe:	0f 93       	push	r16
     800:	1f 93       	push	r17
     802:	cf 93       	push	r28
     804:	df 93       	push	r29
     806:	ec 01       	movw	r28, r24
	{
		if(Password_Menu_Status){
     808:	90 91 19 04 	lds	r25, 0x0419	; 0x800419 <Password_Menu_Status>
     80c:	99 23       	and	r25, r25
     80e:	09 f4       	brne	.+2      	; 0x812 <_ZN13Password_Menu7actionsEv+0x18>
     810:	08 c4       	rjmp	.+2064   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
		switch(symbol_pointer)
     812:	ee 81       	ldd	r30, Y+6	; 0x06
     814:	ff 81       	ldd	r31, Y+7	; 0x07
     816:	eb 30       	cpi	r30, 0x0B	; 11
     818:	f1 05       	cpc	r31, r1
     81a:	08 f0       	brcs	.+2      	; 0x81e <_ZN13Password_Menu7actionsEv+0x24>
     81c:	02 c4       	rjmp	.+2052   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
     81e:	ef 5a       	subi	r30, 0xAF	; 175
     820:	ff 4f       	sbci	r31, 0xFF	; 255
     822:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__tablejump2__>
		{
			case 0:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     826:	4a 89       	ldd	r20, Y+18	; 0x12
     828:	5b 89       	ldd	r21, Y+19	; 0x13
     82a:	ec 81       	ldd	r30, Y+4	; 0x04
     82c:	fd 81       	ldd	r31, Y+5	; 0x05
     82e:	34 96       	adiw	r30, 0x04	; 4
     830:	ee 0f       	add	r30, r30
     832:	ff 1f       	adc	r31, r31
     834:	ec 0f       	add	r30, r28
     836:	fd 1f       	adc	r31, r29
     838:	60 81       	ld	r22, Z
     83a:	71 81       	ldd	r23, Z+1	; 0x01
     83c:	08 e0       	ldi	r16, 0x08	; 8
     83e:	10 e0       	ldi	r17, 0x00	; 0
     840:	21 e0       	ldi	r18, 0x01	; 1
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	8a e1       	ldi	r24, 0x1A	; 26
     846:	94 e0       	ldi	r25, 0x04	; 4
     848:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,zero);
     84c:	4a 89       	ldd	r20, Y+18	; 0x12
     84e:	5b 89       	ldd	r21, Y+19	; 0x13
     850:	ec 81       	ldd	r30, Y+4	; 0x04
     852:	fd 81       	ldd	r31, Y+5	; 0x05
     854:	34 96       	adiw	r30, 0x04	; 4
     856:	ee 0f       	add	r30, r30
     858:	ff 1f       	adc	r31, r31
     85a:	ec 0f       	add	r30, r28
     85c:	fd 1f       	adc	r31, r29
     85e:	60 81       	ld	r22, Z
     860:	71 81       	ldd	r23, Z+1	; 0x01
     862:	0f 2e       	mov	r0, r31
     864:	f9 eb       	ldi	r31, 0xB9	; 185
     866:	ef 2e       	mov	r14, r31
     868:	f3 e0       	ldi	r31, 0x03	; 3
     86a:	ff 2e       	mov	r15, r31
     86c:	f0 2d       	mov	r31, r0
     86e:	21 e0       	ldi	r18, 0x01	; 1
     870:	30 e0       	ldi	r19, 0x00	; 0
     872:	8a e1       	ldi	r24, 0x1A	; 26
     874:	94 e0       	ldi	r25, 0x04	; 4
     876:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     87a:	4a 89       	ldd	r20, Y+18	; 0x12
     87c:	5b 89       	ldd	r21, Y+19	; 0x13
     87e:	4e 5f       	subi	r20, 0xFE	; 254
     880:	5f 4f       	sbci	r21, 0xFF	; 255
     882:	ec 81       	ldd	r30, Y+4	; 0x04
     884:	fd 81       	ldd	r31, Y+5	; 0x05
     886:	34 96       	adiw	r30, 0x04	; 4
     888:	ee 0f       	add	r30, r30
     88a:	ff 1f       	adc	r31, r31
     88c:	ec 0f       	add	r30, r28
     88e:	fd 1f       	adc	r31, r29
     890:	60 81       	ld	r22, Z
     892:	71 81       	ldd	r23, Z+1	; 0x01
     894:	0f 2e       	mov	r0, r31
     896:	f1 e5       	ldi	r31, 0x51	; 81
     898:	ef 2e       	mov	r14, r31
     89a:	f3 e0       	ldi	r31, 0x03	; 3
     89c:	ff 2e       	mov	r15, r31
     89e:	f0 2d       	mov	r31, r0
     8a0:	21 e0       	ldi	r18, 0x01	; 1
     8a2:	30 e0       	ldi	r19, 0x00	; 0
     8a4:	8a e1       	ldi	r24, 0x1A	; 26
     8a6:	94 e0       	ldi	r25, 0x04	; 4
     8a8:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     8ac:	4a 89       	ldd	r20, Y+18	; 0x12
     8ae:	5b 89       	ldd	r21, Y+19	; 0x13
     8b0:	41 50       	subi	r20, 0x01	; 1
     8b2:	51 09       	sbc	r21, r1
     8b4:	8c 81       	ldd	r24, Y+4	; 0x04
     8b6:	9d 81       	ldd	r25, Y+5	; 0x05
     8b8:	04 96       	adiw	r24, 0x04	; 4
     8ba:	88 0f       	add	r24, r24
     8bc:	99 1f       	adc	r25, r25
     8be:	c8 0f       	add	r28, r24
     8c0:	d9 1f       	adc	r29, r25
     8c2:	68 81       	ld	r22, Y
     8c4:	79 81       	ldd	r23, Y+1	; 0x01
     8c6:	0f 2e       	mov	r0, r31
     8c8:	f9 e5       	ldi	r31, 0x59	; 89
     8ca:	ef 2e       	mov	r14, r31
     8cc:	f3 e0       	ldi	r31, 0x03	; 3
     8ce:	ff 2e       	mov	r15, r31
     8d0:	f0 2d       	mov	r31, r0
     8d2:	21 e0       	ldi	r18, 0x01	; 1
     8d4:	30 e0       	ldi	r19, 0x00	; 0
     8d6:	8a e1       	ldi	r24, 0x1A	; 26
     8d8:	94 e0       	ldi	r25, 0x04	; 4
     8da:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     8de:	a1 c3       	rjmp	.+1858   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 1:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     8e0:	4a 89       	ldd	r20, Y+18	; 0x12
     8e2:	5b 89       	ldd	r21, Y+19	; 0x13
     8e4:	ec 81       	ldd	r30, Y+4	; 0x04
     8e6:	fd 81       	ldd	r31, Y+5	; 0x05
     8e8:	34 96       	adiw	r30, 0x04	; 4
     8ea:	ee 0f       	add	r30, r30
     8ec:	ff 1f       	adc	r31, r31
     8ee:	ec 0f       	add	r30, r28
     8f0:	fd 1f       	adc	r31, r29
     8f2:	60 81       	ld	r22, Z
     8f4:	71 81       	ldd	r23, Z+1	; 0x01
     8f6:	08 e0       	ldi	r16, 0x08	; 8
     8f8:	10 e0       	ldi	r17, 0x00	; 0
     8fa:	21 e0       	ldi	r18, 0x01	; 1
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	8a e1       	ldi	r24, 0x1A	; 26
     900:	94 e0       	ldi	r25, 0x04	; 4
     902:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,one);
     906:	4a 89       	ldd	r20, Y+18	; 0x12
     908:	5b 89       	ldd	r21, Y+19	; 0x13
     90a:	ec 81       	ldd	r30, Y+4	; 0x04
     90c:	fd 81       	ldd	r31, Y+5	; 0x05
     90e:	34 96       	adiw	r30, 0x04	; 4
     910:	ee 0f       	add	r30, r30
     912:	ff 1f       	adc	r31, r31
     914:	ec 0f       	add	r30, r28
     916:	fd 1f       	adc	r31, r29
     918:	60 81       	ld	r22, Z
     91a:	71 81       	ldd	r23, Z+1	; 0x01
     91c:	0f 2e       	mov	r0, r31
     91e:	f1 eb       	ldi	r31, 0xB1	; 177
     920:	ef 2e       	mov	r14, r31
     922:	f3 e0       	ldi	r31, 0x03	; 3
     924:	ff 2e       	mov	r15, r31
     926:	f0 2d       	mov	r31, r0
     928:	21 e0       	ldi	r18, 0x01	; 1
     92a:	30 e0       	ldi	r19, 0x00	; 0
     92c:	8a e1       	ldi	r24, 0x1A	; 26
     92e:	94 e0       	ldi	r25, 0x04	; 4
     930:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     934:	4a 89       	ldd	r20, Y+18	; 0x12
     936:	5b 89       	ldd	r21, Y+19	; 0x13
     938:	4e 5f       	subi	r20, 0xFE	; 254
     93a:	5f 4f       	sbci	r21, 0xFF	; 255
     93c:	ec 81       	ldd	r30, Y+4	; 0x04
     93e:	fd 81       	ldd	r31, Y+5	; 0x05
     940:	34 96       	adiw	r30, 0x04	; 4
     942:	ee 0f       	add	r30, r30
     944:	ff 1f       	adc	r31, r31
     946:	ec 0f       	add	r30, r28
     948:	fd 1f       	adc	r31, r29
     94a:	60 81       	ld	r22, Z
     94c:	71 81       	ldd	r23, Z+1	; 0x01
     94e:	0f 2e       	mov	r0, r31
     950:	f1 e5       	ldi	r31, 0x51	; 81
     952:	ef 2e       	mov	r14, r31
     954:	f3 e0       	ldi	r31, 0x03	; 3
     956:	ff 2e       	mov	r15, r31
     958:	f0 2d       	mov	r31, r0
     95a:	21 e0       	ldi	r18, 0x01	; 1
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	8a e1       	ldi	r24, 0x1A	; 26
     960:	94 e0       	ldi	r25, 0x04	; 4
     962:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     966:	4a 89       	ldd	r20, Y+18	; 0x12
     968:	5b 89       	ldd	r21, Y+19	; 0x13
     96a:	41 50       	subi	r20, 0x01	; 1
     96c:	51 09       	sbc	r21, r1
     96e:	8c 81       	ldd	r24, Y+4	; 0x04
     970:	9d 81       	ldd	r25, Y+5	; 0x05
     972:	04 96       	adiw	r24, 0x04	; 4
     974:	88 0f       	add	r24, r24
     976:	99 1f       	adc	r25, r25
     978:	c8 0f       	add	r28, r24
     97a:	d9 1f       	adc	r29, r25
     97c:	68 81       	ld	r22, Y
     97e:	79 81       	ldd	r23, Y+1	; 0x01
     980:	0f 2e       	mov	r0, r31
     982:	f9 e5       	ldi	r31, 0x59	; 89
     984:	ef 2e       	mov	r14, r31
     986:	f3 e0       	ldi	r31, 0x03	; 3
     988:	ff 2e       	mov	r15, r31
     98a:	f0 2d       	mov	r31, r0
     98c:	21 e0       	ldi	r18, 0x01	; 1
     98e:	30 e0       	ldi	r19, 0x00	; 0
     990:	8a e1       	ldi	r24, 0x1A	; 26
     992:	94 e0       	ldi	r25, 0x04	; 4
     994:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     998:	44 c3       	rjmp	.+1672   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 2:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     99a:	4a 89       	ldd	r20, Y+18	; 0x12
     99c:	5b 89       	ldd	r21, Y+19	; 0x13
     99e:	ec 81       	ldd	r30, Y+4	; 0x04
     9a0:	fd 81       	ldd	r31, Y+5	; 0x05
     9a2:	34 96       	adiw	r30, 0x04	; 4
     9a4:	ee 0f       	add	r30, r30
     9a6:	ff 1f       	adc	r31, r31
     9a8:	ec 0f       	add	r30, r28
     9aa:	fd 1f       	adc	r31, r29
     9ac:	60 81       	ld	r22, Z
     9ae:	71 81       	ldd	r23, Z+1	; 0x01
     9b0:	08 e0       	ldi	r16, 0x08	; 8
     9b2:	10 e0       	ldi	r17, 0x00	; 0
     9b4:	21 e0       	ldi	r18, 0x01	; 1
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	8a e1       	ldi	r24, 0x1A	; 26
     9ba:	94 e0       	ldi	r25, 0x04	; 4
     9bc:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,two);
     9c0:	4a 89       	ldd	r20, Y+18	; 0x12
     9c2:	5b 89       	ldd	r21, Y+19	; 0x13
     9c4:	ec 81       	ldd	r30, Y+4	; 0x04
     9c6:	fd 81       	ldd	r31, Y+5	; 0x05
     9c8:	34 96       	adiw	r30, 0x04	; 4
     9ca:	ee 0f       	add	r30, r30
     9cc:	ff 1f       	adc	r31, r31
     9ce:	ec 0f       	add	r30, r28
     9d0:	fd 1f       	adc	r31, r29
     9d2:	60 81       	ld	r22, Z
     9d4:	71 81       	ldd	r23, Z+1	; 0x01
     9d6:	0f 2e       	mov	r0, r31
     9d8:	f9 ea       	ldi	r31, 0xA9	; 169
     9da:	ef 2e       	mov	r14, r31
     9dc:	f3 e0       	ldi	r31, 0x03	; 3
     9de:	ff 2e       	mov	r15, r31
     9e0:	f0 2d       	mov	r31, r0
     9e2:	21 e0       	ldi	r18, 0x01	; 1
     9e4:	30 e0       	ldi	r19, 0x00	; 0
     9e6:	8a e1       	ldi	r24, 0x1A	; 26
     9e8:	94 e0       	ldi	r25, 0x04	; 4
     9ea:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     9ee:	4a 89       	ldd	r20, Y+18	; 0x12
     9f0:	5b 89       	ldd	r21, Y+19	; 0x13
     9f2:	4e 5f       	subi	r20, 0xFE	; 254
     9f4:	5f 4f       	sbci	r21, 0xFF	; 255
     9f6:	ec 81       	ldd	r30, Y+4	; 0x04
     9f8:	fd 81       	ldd	r31, Y+5	; 0x05
     9fa:	34 96       	adiw	r30, 0x04	; 4
     9fc:	ee 0f       	add	r30, r30
     9fe:	ff 1f       	adc	r31, r31
     a00:	ec 0f       	add	r30, r28
     a02:	fd 1f       	adc	r31, r29
     a04:	60 81       	ld	r22, Z
     a06:	71 81       	ldd	r23, Z+1	; 0x01
     a08:	0f 2e       	mov	r0, r31
     a0a:	f1 e5       	ldi	r31, 0x51	; 81
     a0c:	ef 2e       	mov	r14, r31
     a0e:	f3 e0       	ldi	r31, 0x03	; 3
     a10:	ff 2e       	mov	r15, r31
     a12:	f0 2d       	mov	r31, r0
     a14:	21 e0       	ldi	r18, 0x01	; 1
     a16:	30 e0       	ldi	r19, 0x00	; 0
     a18:	8a e1       	ldi	r24, 0x1A	; 26
     a1a:	94 e0       	ldi	r25, 0x04	; 4
     a1c:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     a20:	4a 89       	ldd	r20, Y+18	; 0x12
     a22:	5b 89       	ldd	r21, Y+19	; 0x13
     a24:	41 50       	subi	r20, 0x01	; 1
     a26:	51 09       	sbc	r21, r1
     a28:	8c 81       	ldd	r24, Y+4	; 0x04
     a2a:	9d 81       	ldd	r25, Y+5	; 0x05
     a2c:	04 96       	adiw	r24, 0x04	; 4
     a2e:	88 0f       	add	r24, r24
     a30:	99 1f       	adc	r25, r25
     a32:	c8 0f       	add	r28, r24
     a34:	d9 1f       	adc	r29, r25
     a36:	68 81       	ld	r22, Y
     a38:	79 81       	ldd	r23, Y+1	; 0x01
     a3a:	0f 2e       	mov	r0, r31
     a3c:	f9 e5       	ldi	r31, 0x59	; 89
     a3e:	ef 2e       	mov	r14, r31
     a40:	f3 e0       	ldi	r31, 0x03	; 3
     a42:	ff 2e       	mov	r15, r31
     a44:	f0 2d       	mov	r31, r0
     a46:	21 e0       	ldi	r18, 0x01	; 1
     a48:	30 e0       	ldi	r19, 0x00	; 0
     a4a:	8a e1       	ldi	r24, 0x1A	; 26
     a4c:	94 e0       	ldi	r25, 0x04	; 4
     a4e:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     a52:	e7 c2       	rjmp	.+1486   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 3:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     a54:	4a 89       	ldd	r20, Y+18	; 0x12
     a56:	5b 89       	ldd	r21, Y+19	; 0x13
     a58:	ec 81       	ldd	r30, Y+4	; 0x04
     a5a:	fd 81       	ldd	r31, Y+5	; 0x05
     a5c:	34 96       	adiw	r30, 0x04	; 4
     a5e:	ee 0f       	add	r30, r30
     a60:	ff 1f       	adc	r31, r31
     a62:	ec 0f       	add	r30, r28
     a64:	fd 1f       	adc	r31, r29
     a66:	60 81       	ld	r22, Z
     a68:	71 81       	ldd	r23, Z+1	; 0x01
     a6a:	08 e0       	ldi	r16, 0x08	; 8
     a6c:	10 e0       	ldi	r17, 0x00	; 0
     a6e:	21 e0       	ldi	r18, 0x01	; 1
     a70:	30 e0       	ldi	r19, 0x00	; 0
     a72:	8a e1       	ldi	r24, 0x1A	; 26
     a74:	94 e0       	ldi	r25, 0x04	; 4
     a76:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,three);
     a7a:	4a 89       	ldd	r20, Y+18	; 0x12
     a7c:	5b 89       	ldd	r21, Y+19	; 0x13
     a7e:	ec 81       	ldd	r30, Y+4	; 0x04
     a80:	fd 81       	ldd	r31, Y+5	; 0x05
     a82:	34 96       	adiw	r30, 0x04	; 4
     a84:	ee 0f       	add	r30, r30
     a86:	ff 1f       	adc	r31, r31
     a88:	ec 0f       	add	r30, r28
     a8a:	fd 1f       	adc	r31, r29
     a8c:	60 81       	ld	r22, Z
     a8e:	71 81       	ldd	r23, Z+1	; 0x01
     a90:	0f 2e       	mov	r0, r31
     a92:	f1 ea       	ldi	r31, 0xA1	; 161
     a94:	ef 2e       	mov	r14, r31
     a96:	f3 e0       	ldi	r31, 0x03	; 3
     a98:	ff 2e       	mov	r15, r31
     a9a:	f0 2d       	mov	r31, r0
     a9c:	21 e0       	ldi	r18, 0x01	; 1
     a9e:	30 e0       	ldi	r19, 0x00	; 0
     aa0:	8a e1       	ldi	r24, 0x1A	; 26
     aa2:	94 e0       	ldi	r25, 0x04	; 4
     aa4:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     aa8:	4a 89       	ldd	r20, Y+18	; 0x12
     aaa:	5b 89       	ldd	r21, Y+19	; 0x13
     aac:	4e 5f       	subi	r20, 0xFE	; 254
     aae:	5f 4f       	sbci	r21, 0xFF	; 255
     ab0:	ec 81       	ldd	r30, Y+4	; 0x04
     ab2:	fd 81       	ldd	r31, Y+5	; 0x05
     ab4:	34 96       	adiw	r30, 0x04	; 4
     ab6:	ee 0f       	add	r30, r30
     ab8:	ff 1f       	adc	r31, r31
     aba:	ec 0f       	add	r30, r28
     abc:	fd 1f       	adc	r31, r29
     abe:	60 81       	ld	r22, Z
     ac0:	71 81       	ldd	r23, Z+1	; 0x01
     ac2:	0f 2e       	mov	r0, r31
     ac4:	f1 e5       	ldi	r31, 0x51	; 81
     ac6:	ef 2e       	mov	r14, r31
     ac8:	f3 e0       	ldi	r31, 0x03	; 3
     aca:	ff 2e       	mov	r15, r31
     acc:	f0 2d       	mov	r31, r0
     ace:	21 e0       	ldi	r18, 0x01	; 1
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	8a e1       	ldi	r24, 0x1A	; 26
     ad4:	94 e0       	ldi	r25, 0x04	; 4
     ad6:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     ada:	4a 89       	ldd	r20, Y+18	; 0x12
     adc:	5b 89       	ldd	r21, Y+19	; 0x13
     ade:	41 50       	subi	r20, 0x01	; 1
     ae0:	51 09       	sbc	r21, r1
     ae2:	8c 81       	ldd	r24, Y+4	; 0x04
     ae4:	9d 81       	ldd	r25, Y+5	; 0x05
     ae6:	04 96       	adiw	r24, 0x04	; 4
     ae8:	88 0f       	add	r24, r24
     aea:	99 1f       	adc	r25, r25
     aec:	c8 0f       	add	r28, r24
     aee:	d9 1f       	adc	r29, r25
     af0:	68 81       	ld	r22, Y
     af2:	79 81       	ldd	r23, Y+1	; 0x01
     af4:	0f 2e       	mov	r0, r31
     af6:	f9 e5       	ldi	r31, 0x59	; 89
     af8:	ef 2e       	mov	r14, r31
     afa:	f3 e0       	ldi	r31, 0x03	; 3
     afc:	ff 2e       	mov	r15, r31
     afe:	f0 2d       	mov	r31, r0
     b00:	21 e0       	ldi	r18, 0x01	; 1
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	8a e1       	ldi	r24, 0x1A	; 26
     b06:	94 e0       	ldi	r25, 0x04	; 4
     b08:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     b0c:	8a c2       	rjmp	.+1300   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 4:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     b0e:	4a 89       	ldd	r20, Y+18	; 0x12
     b10:	5b 89       	ldd	r21, Y+19	; 0x13
     b12:	ec 81       	ldd	r30, Y+4	; 0x04
     b14:	fd 81       	ldd	r31, Y+5	; 0x05
     b16:	34 96       	adiw	r30, 0x04	; 4
     b18:	ee 0f       	add	r30, r30
     b1a:	ff 1f       	adc	r31, r31
     b1c:	ec 0f       	add	r30, r28
     b1e:	fd 1f       	adc	r31, r29
     b20:	60 81       	ld	r22, Z
     b22:	71 81       	ldd	r23, Z+1	; 0x01
     b24:	08 e0       	ldi	r16, 0x08	; 8
     b26:	10 e0       	ldi	r17, 0x00	; 0
     b28:	21 e0       	ldi	r18, 0x01	; 1
     b2a:	30 e0       	ldi	r19, 0x00	; 0
     b2c:	8a e1       	ldi	r24, 0x1A	; 26
     b2e:	94 e0       	ldi	r25, 0x04	; 4
     b30:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,four);
     b34:	4a 89       	ldd	r20, Y+18	; 0x12
     b36:	5b 89       	ldd	r21, Y+19	; 0x13
     b38:	ec 81       	ldd	r30, Y+4	; 0x04
     b3a:	fd 81       	ldd	r31, Y+5	; 0x05
     b3c:	34 96       	adiw	r30, 0x04	; 4
     b3e:	ee 0f       	add	r30, r30
     b40:	ff 1f       	adc	r31, r31
     b42:	ec 0f       	add	r30, r28
     b44:	fd 1f       	adc	r31, r29
     b46:	60 81       	ld	r22, Z
     b48:	71 81       	ldd	r23, Z+1	; 0x01
     b4a:	0f 2e       	mov	r0, r31
     b4c:	f9 e9       	ldi	r31, 0x99	; 153
     b4e:	ef 2e       	mov	r14, r31
     b50:	f3 e0       	ldi	r31, 0x03	; 3
     b52:	ff 2e       	mov	r15, r31
     b54:	f0 2d       	mov	r31, r0
     b56:	21 e0       	ldi	r18, 0x01	; 1
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	8a e1       	ldi	r24, 0x1A	; 26
     b5c:	94 e0       	ldi	r25, 0x04	; 4
     b5e:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     b62:	4a 89       	ldd	r20, Y+18	; 0x12
     b64:	5b 89       	ldd	r21, Y+19	; 0x13
     b66:	4e 5f       	subi	r20, 0xFE	; 254
     b68:	5f 4f       	sbci	r21, 0xFF	; 255
     b6a:	ec 81       	ldd	r30, Y+4	; 0x04
     b6c:	fd 81       	ldd	r31, Y+5	; 0x05
     b6e:	34 96       	adiw	r30, 0x04	; 4
     b70:	ee 0f       	add	r30, r30
     b72:	ff 1f       	adc	r31, r31
     b74:	ec 0f       	add	r30, r28
     b76:	fd 1f       	adc	r31, r29
     b78:	60 81       	ld	r22, Z
     b7a:	71 81       	ldd	r23, Z+1	; 0x01
     b7c:	0f 2e       	mov	r0, r31
     b7e:	f1 e5       	ldi	r31, 0x51	; 81
     b80:	ef 2e       	mov	r14, r31
     b82:	f3 e0       	ldi	r31, 0x03	; 3
     b84:	ff 2e       	mov	r15, r31
     b86:	f0 2d       	mov	r31, r0
     b88:	21 e0       	ldi	r18, 0x01	; 1
     b8a:	30 e0       	ldi	r19, 0x00	; 0
     b8c:	8a e1       	ldi	r24, 0x1A	; 26
     b8e:	94 e0       	ldi	r25, 0x04	; 4
     b90:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     b94:	4a 89       	ldd	r20, Y+18	; 0x12
     b96:	5b 89       	ldd	r21, Y+19	; 0x13
     b98:	41 50       	subi	r20, 0x01	; 1
     b9a:	51 09       	sbc	r21, r1
     b9c:	8c 81       	ldd	r24, Y+4	; 0x04
     b9e:	9d 81       	ldd	r25, Y+5	; 0x05
     ba0:	04 96       	adiw	r24, 0x04	; 4
     ba2:	88 0f       	add	r24, r24
     ba4:	99 1f       	adc	r25, r25
     ba6:	c8 0f       	add	r28, r24
     ba8:	d9 1f       	adc	r29, r25
     baa:	68 81       	ld	r22, Y
     bac:	79 81       	ldd	r23, Y+1	; 0x01
     bae:	0f 2e       	mov	r0, r31
     bb0:	f9 e5       	ldi	r31, 0x59	; 89
     bb2:	ef 2e       	mov	r14, r31
     bb4:	f3 e0       	ldi	r31, 0x03	; 3
     bb6:	ff 2e       	mov	r15, r31
     bb8:	f0 2d       	mov	r31, r0
     bba:	21 e0       	ldi	r18, 0x01	; 1
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	8a e1       	ldi	r24, 0x1A	; 26
     bc0:	94 e0       	ldi	r25, 0x04	; 4
     bc2:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     bc6:	2d c2       	rjmp	.+1114   	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 5:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     bc8:	4a 89       	ldd	r20, Y+18	; 0x12
     bca:	5b 89       	ldd	r21, Y+19	; 0x13
     bcc:	ec 81       	ldd	r30, Y+4	; 0x04
     bce:	fd 81       	ldd	r31, Y+5	; 0x05
     bd0:	34 96       	adiw	r30, 0x04	; 4
     bd2:	ee 0f       	add	r30, r30
     bd4:	ff 1f       	adc	r31, r31
     bd6:	ec 0f       	add	r30, r28
     bd8:	fd 1f       	adc	r31, r29
     bda:	60 81       	ld	r22, Z
     bdc:	71 81       	ldd	r23, Z+1	; 0x01
     bde:	08 e0       	ldi	r16, 0x08	; 8
     be0:	10 e0       	ldi	r17, 0x00	; 0
     be2:	21 e0       	ldi	r18, 0x01	; 1
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	8a e1       	ldi	r24, 0x1A	; 26
     be8:	94 e0       	ldi	r25, 0x04	; 4
     bea:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,five);
     bee:	4a 89       	ldd	r20, Y+18	; 0x12
     bf0:	5b 89       	ldd	r21, Y+19	; 0x13
     bf2:	ec 81       	ldd	r30, Y+4	; 0x04
     bf4:	fd 81       	ldd	r31, Y+5	; 0x05
     bf6:	34 96       	adiw	r30, 0x04	; 4
     bf8:	ee 0f       	add	r30, r30
     bfa:	ff 1f       	adc	r31, r31
     bfc:	ec 0f       	add	r30, r28
     bfe:	fd 1f       	adc	r31, r29
     c00:	60 81       	ld	r22, Z
     c02:	71 81       	ldd	r23, Z+1	; 0x01
     c04:	0f 2e       	mov	r0, r31
     c06:	f1 e9       	ldi	r31, 0x91	; 145
     c08:	ef 2e       	mov	r14, r31
     c0a:	f3 e0       	ldi	r31, 0x03	; 3
     c0c:	ff 2e       	mov	r15, r31
     c0e:	f0 2d       	mov	r31, r0
     c10:	21 e0       	ldi	r18, 0x01	; 1
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	8a e1       	ldi	r24, 0x1A	; 26
     c16:	94 e0       	ldi	r25, 0x04	; 4
     c18:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     c1c:	4a 89       	ldd	r20, Y+18	; 0x12
     c1e:	5b 89       	ldd	r21, Y+19	; 0x13
     c20:	4e 5f       	subi	r20, 0xFE	; 254
     c22:	5f 4f       	sbci	r21, 0xFF	; 255
     c24:	ec 81       	ldd	r30, Y+4	; 0x04
     c26:	fd 81       	ldd	r31, Y+5	; 0x05
     c28:	34 96       	adiw	r30, 0x04	; 4
     c2a:	ee 0f       	add	r30, r30
     c2c:	ff 1f       	adc	r31, r31
     c2e:	ec 0f       	add	r30, r28
     c30:	fd 1f       	adc	r31, r29
     c32:	60 81       	ld	r22, Z
     c34:	71 81       	ldd	r23, Z+1	; 0x01
     c36:	0f 2e       	mov	r0, r31
     c38:	f1 e5       	ldi	r31, 0x51	; 81
     c3a:	ef 2e       	mov	r14, r31
     c3c:	f3 e0       	ldi	r31, 0x03	; 3
     c3e:	ff 2e       	mov	r15, r31
     c40:	f0 2d       	mov	r31, r0
     c42:	21 e0       	ldi	r18, 0x01	; 1
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	8a e1       	ldi	r24, 0x1A	; 26
     c48:	94 e0       	ldi	r25, 0x04	; 4
     c4a:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     c4e:	4a 89       	ldd	r20, Y+18	; 0x12
     c50:	5b 89       	ldd	r21, Y+19	; 0x13
     c52:	41 50       	subi	r20, 0x01	; 1
     c54:	51 09       	sbc	r21, r1
     c56:	8c 81       	ldd	r24, Y+4	; 0x04
     c58:	9d 81       	ldd	r25, Y+5	; 0x05
     c5a:	04 96       	adiw	r24, 0x04	; 4
     c5c:	88 0f       	add	r24, r24
     c5e:	99 1f       	adc	r25, r25
     c60:	c8 0f       	add	r28, r24
     c62:	d9 1f       	adc	r29, r25
     c64:	68 81       	ld	r22, Y
     c66:	79 81       	ldd	r23, Y+1	; 0x01
     c68:	0f 2e       	mov	r0, r31
     c6a:	f9 e5       	ldi	r31, 0x59	; 89
     c6c:	ef 2e       	mov	r14, r31
     c6e:	f3 e0       	ldi	r31, 0x03	; 3
     c70:	ff 2e       	mov	r15, r31
     c72:	f0 2d       	mov	r31, r0
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	8a e1       	ldi	r24, 0x1A	; 26
     c7a:	94 e0       	ldi	r25, 0x04	; 4
     c7c:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     c80:	d0 c1       	rjmp	.+928    	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 6:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     c82:	4a 89       	ldd	r20, Y+18	; 0x12
     c84:	5b 89       	ldd	r21, Y+19	; 0x13
     c86:	ec 81       	ldd	r30, Y+4	; 0x04
     c88:	fd 81       	ldd	r31, Y+5	; 0x05
     c8a:	34 96       	adiw	r30, 0x04	; 4
     c8c:	ee 0f       	add	r30, r30
     c8e:	ff 1f       	adc	r31, r31
     c90:	ec 0f       	add	r30, r28
     c92:	fd 1f       	adc	r31, r29
     c94:	60 81       	ld	r22, Z
     c96:	71 81       	ldd	r23, Z+1	; 0x01
     c98:	08 e0       	ldi	r16, 0x08	; 8
     c9a:	10 e0       	ldi	r17, 0x00	; 0
     c9c:	21 e0       	ldi	r18, 0x01	; 1
     c9e:	30 e0       	ldi	r19, 0x00	; 0
     ca0:	8a e1       	ldi	r24, 0x1A	; 26
     ca2:	94 e0       	ldi	r25, 0x04	; 4
     ca4:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,six);
     ca8:	4a 89       	ldd	r20, Y+18	; 0x12
     caa:	5b 89       	ldd	r21, Y+19	; 0x13
     cac:	ec 81       	ldd	r30, Y+4	; 0x04
     cae:	fd 81       	ldd	r31, Y+5	; 0x05
     cb0:	34 96       	adiw	r30, 0x04	; 4
     cb2:	ee 0f       	add	r30, r30
     cb4:	ff 1f       	adc	r31, r31
     cb6:	ec 0f       	add	r30, r28
     cb8:	fd 1f       	adc	r31, r29
     cba:	60 81       	ld	r22, Z
     cbc:	71 81       	ldd	r23, Z+1	; 0x01
     cbe:	0f 2e       	mov	r0, r31
     cc0:	f9 e8       	ldi	r31, 0x89	; 137
     cc2:	ef 2e       	mov	r14, r31
     cc4:	f3 e0       	ldi	r31, 0x03	; 3
     cc6:	ff 2e       	mov	r15, r31
     cc8:	f0 2d       	mov	r31, r0
     cca:	21 e0       	ldi	r18, 0x01	; 1
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	8a e1       	ldi	r24, 0x1A	; 26
     cd0:	94 e0       	ldi	r25, 0x04	; 4
     cd2:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     cd6:	4a 89       	ldd	r20, Y+18	; 0x12
     cd8:	5b 89       	ldd	r21, Y+19	; 0x13
     cda:	4e 5f       	subi	r20, 0xFE	; 254
     cdc:	5f 4f       	sbci	r21, 0xFF	; 255
     cde:	ec 81       	ldd	r30, Y+4	; 0x04
     ce0:	fd 81       	ldd	r31, Y+5	; 0x05
     ce2:	34 96       	adiw	r30, 0x04	; 4
     ce4:	ee 0f       	add	r30, r30
     ce6:	ff 1f       	adc	r31, r31
     ce8:	ec 0f       	add	r30, r28
     cea:	fd 1f       	adc	r31, r29
     cec:	60 81       	ld	r22, Z
     cee:	71 81       	ldd	r23, Z+1	; 0x01
     cf0:	0f 2e       	mov	r0, r31
     cf2:	f1 e5       	ldi	r31, 0x51	; 81
     cf4:	ef 2e       	mov	r14, r31
     cf6:	f3 e0       	ldi	r31, 0x03	; 3
     cf8:	ff 2e       	mov	r15, r31
     cfa:	f0 2d       	mov	r31, r0
     cfc:	21 e0       	ldi	r18, 0x01	; 1
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	8a e1       	ldi	r24, 0x1A	; 26
     d02:	94 e0       	ldi	r25, 0x04	; 4
     d04:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     d08:	4a 89       	ldd	r20, Y+18	; 0x12
     d0a:	5b 89       	ldd	r21, Y+19	; 0x13
     d0c:	41 50       	subi	r20, 0x01	; 1
     d0e:	51 09       	sbc	r21, r1
     d10:	8c 81       	ldd	r24, Y+4	; 0x04
     d12:	9d 81       	ldd	r25, Y+5	; 0x05
     d14:	04 96       	adiw	r24, 0x04	; 4
     d16:	88 0f       	add	r24, r24
     d18:	99 1f       	adc	r25, r25
     d1a:	c8 0f       	add	r28, r24
     d1c:	d9 1f       	adc	r29, r25
     d1e:	68 81       	ld	r22, Y
     d20:	79 81       	ldd	r23, Y+1	; 0x01
     d22:	0f 2e       	mov	r0, r31
     d24:	f9 e5       	ldi	r31, 0x59	; 89
     d26:	ef 2e       	mov	r14, r31
     d28:	f3 e0       	ldi	r31, 0x03	; 3
     d2a:	ff 2e       	mov	r15, r31
     d2c:	f0 2d       	mov	r31, r0
     d2e:	21 e0       	ldi	r18, 0x01	; 1
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	8a e1       	ldi	r24, 0x1A	; 26
     d34:	94 e0       	ldi	r25, 0x04	; 4
     d36:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     d3a:	73 c1       	rjmp	.+742    	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 7:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     d3c:	4a 89       	ldd	r20, Y+18	; 0x12
     d3e:	5b 89       	ldd	r21, Y+19	; 0x13
     d40:	ec 81       	ldd	r30, Y+4	; 0x04
     d42:	fd 81       	ldd	r31, Y+5	; 0x05
     d44:	34 96       	adiw	r30, 0x04	; 4
     d46:	ee 0f       	add	r30, r30
     d48:	ff 1f       	adc	r31, r31
     d4a:	ec 0f       	add	r30, r28
     d4c:	fd 1f       	adc	r31, r29
     d4e:	60 81       	ld	r22, Z
     d50:	71 81       	ldd	r23, Z+1	; 0x01
     d52:	08 e0       	ldi	r16, 0x08	; 8
     d54:	10 e0       	ldi	r17, 0x00	; 0
     d56:	21 e0       	ldi	r18, 0x01	; 1
     d58:	30 e0       	ldi	r19, 0x00	; 0
     d5a:	8a e1       	ldi	r24, 0x1A	; 26
     d5c:	94 e0       	ldi	r25, 0x04	; 4
     d5e:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,seven);
     d62:	4a 89       	ldd	r20, Y+18	; 0x12
     d64:	5b 89       	ldd	r21, Y+19	; 0x13
     d66:	ec 81       	ldd	r30, Y+4	; 0x04
     d68:	fd 81       	ldd	r31, Y+5	; 0x05
     d6a:	34 96       	adiw	r30, 0x04	; 4
     d6c:	ee 0f       	add	r30, r30
     d6e:	ff 1f       	adc	r31, r31
     d70:	ec 0f       	add	r30, r28
     d72:	fd 1f       	adc	r31, r29
     d74:	60 81       	ld	r22, Z
     d76:	71 81       	ldd	r23, Z+1	; 0x01
     d78:	0f 2e       	mov	r0, r31
     d7a:	f1 e8       	ldi	r31, 0x81	; 129
     d7c:	ef 2e       	mov	r14, r31
     d7e:	f3 e0       	ldi	r31, 0x03	; 3
     d80:	ff 2e       	mov	r15, r31
     d82:	f0 2d       	mov	r31, r0
     d84:	21 e0       	ldi	r18, 0x01	; 1
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	8a e1       	ldi	r24, 0x1A	; 26
     d8a:	94 e0       	ldi	r25, 0x04	; 4
     d8c:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     d90:	4a 89       	ldd	r20, Y+18	; 0x12
     d92:	5b 89       	ldd	r21, Y+19	; 0x13
     d94:	4e 5f       	subi	r20, 0xFE	; 254
     d96:	5f 4f       	sbci	r21, 0xFF	; 255
     d98:	ec 81       	ldd	r30, Y+4	; 0x04
     d9a:	fd 81       	ldd	r31, Y+5	; 0x05
     d9c:	34 96       	adiw	r30, 0x04	; 4
     d9e:	ee 0f       	add	r30, r30
     da0:	ff 1f       	adc	r31, r31
     da2:	ec 0f       	add	r30, r28
     da4:	fd 1f       	adc	r31, r29
     da6:	60 81       	ld	r22, Z
     da8:	71 81       	ldd	r23, Z+1	; 0x01
     daa:	0f 2e       	mov	r0, r31
     dac:	f1 e5       	ldi	r31, 0x51	; 81
     dae:	ef 2e       	mov	r14, r31
     db0:	f3 e0       	ldi	r31, 0x03	; 3
     db2:	ff 2e       	mov	r15, r31
     db4:	f0 2d       	mov	r31, r0
     db6:	21 e0       	ldi	r18, 0x01	; 1
     db8:	30 e0       	ldi	r19, 0x00	; 0
     dba:	8a e1       	ldi	r24, 0x1A	; 26
     dbc:	94 e0       	ldi	r25, 0x04	; 4
     dbe:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     dc2:	4a 89       	ldd	r20, Y+18	; 0x12
     dc4:	5b 89       	ldd	r21, Y+19	; 0x13
     dc6:	41 50       	subi	r20, 0x01	; 1
     dc8:	51 09       	sbc	r21, r1
     dca:	8c 81       	ldd	r24, Y+4	; 0x04
     dcc:	9d 81       	ldd	r25, Y+5	; 0x05
     dce:	04 96       	adiw	r24, 0x04	; 4
     dd0:	88 0f       	add	r24, r24
     dd2:	99 1f       	adc	r25, r25
     dd4:	c8 0f       	add	r28, r24
     dd6:	d9 1f       	adc	r29, r25
     dd8:	68 81       	ld	r22, Y
     dda:	79 81       	ldd	r23, Y+1	; 0x01
     ddc:	0f 2e       	mov	r0, r31
     dde:	f9 e5       	ldi	r31, 0x59	; 89
     de0:	ef 2e       	mov	r14, r31
     de2:	f3 e0       	ldi	r31, 0x03	; 3
     de4:	ff 2e       	mov	r15, r31
     de6:	f0 2d       	mov	r31, r0
     de8:	21 e0       	ldi	r18, 0x01	; 1
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	8a e1       	ldi	r24, 0x1A	; 26
     dee:	94 e0       	ldi	r25, 0x04	; 4
     df0:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     df4:	16 c1       	rjmp	.+556    	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 8:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     df6:	4a 89       	ldd	r20, Y+18	; 0x12
     df8:	5b 89       	ldd	r21, Y+19	; 0x13
     dfa:	ec 81       	ldd	r30, Y+4	; 0x04
     dfc:	fd 81       	ldd	r31, Y+5	; 0x05
     dfe:	34 96       	adiw	r30, 0x04	; 4
     e00:	ee 0f       	add	r30, r30
     e02:	ff 1f       	adc	r31, r31
     e04:	ec 0f       	add	r30, r28
     e06:	fd 1f       	adc	r31, r29
     e08:	60 81       	ld	r22, Z
     e0a:	71 81       	ldd	r23, Z+1	; 0x01
     e0c:	08 e0       	ldi	r16, 0x08	; 8
     e0e:	10 e0       	ldi	r17, 0x00	; 0
     e10:	21 e0       	ldi	r18, 0x01	; 1
     e12:	30 e0       	ldi	r19, 0x00	; 0
     e14:	8a e1       	ldi	r24, 0x1A	; 26
     e16:	94 e0       	ldi	r25, 0x04	; 4
     e18:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,eight);
     e1c:	4a 89       	ldd	r20, Y+18	; 0x12
     e1e:	5b 89       	ldd	r21, Y+19	; 0x13
     e20:	ec 81       	ldd	r30, Y+4	; 0x04
     e22:	fd 81       	ldd	r31, Y+5	; 0x05
     e24:	34 96       	adiw	r30, 0x04	; 4
     e26:	ee 0f       	add	r30, r30
     e28:	ff 1f       	adc	r31, r31
     e2a:	ec 0f       	add	r30, r28
     e2c:	fd 1f       	adc	r31, r29
     e2e:	60 81       	ld	r22, Z
     e30:	71 81       	ldd	r23, Z+1	; 0x01
     e32:	0f 2e       	mov	r0, r31
     e34:	f9 e7       	ldi	r31, 0x79	; 121
     e36:	ef 2e       	mov	r14, r31
     e38:	f3 e0       	ldi	r31, 0x03	; 3
     e3a:	ff 2e       	mov	r15, r31
     e3c:	f0 2d       	mov	r31, r0
     e3e:	21 e0       	ldi	r18, 0x01	; 1
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	8a e1       	ldi	r24, 0x1A	; 26
     e44:	94 e0       	ldi	r25, 0x04	; 4
     e46:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     e4a:	4a 89       	ldd	r20, Y+18	; 0x12
     e4c:	5b 89       	ldd	r21, Y+19	; 0x13
     e4e:	4e 5f       	subi	r20, 0xFE	; 254
     e50:	5f 4f       	sbci	r21, 0xFF	; 255
     e52:	ec 81       	ldd	r30, Y+4	; 0x04
     e54:	fd 81       	ldd	r31, Y+5	; 0x05
     e56:	34 96       	adiw	r30, 0x04	; 4
     e58:	ee 0f       	add	r30, r30
     e5a:	ff 1f       	adc	r31, r31
     e5c:	ec 0f       	add	r30, r28
     e5e:	fd 1f       	adc	r31, r29
     e60:	60 81       	ld	r22, Z
     e62:	71 81       	ldd	r23, Z+1	; 0x01
     e64:	0f 2e       	mov	r0, r31
     e66:	f1 e5       	ldi	r31, 0x51	; 81
     e68:	ef 2e       	mov	r14, r31
     e6a:	f3 e0       	ldi	r31, 0x03	; 3
     e6c:	ff 2e       	mov	r15, r31
     e6e:	f0 2d       	mov	r31, r0
     e70:	21 e0       	ldi	r18, 0x01	; 1
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	8a e1       	ldi	r24, 0x1A	; 26
     e76:	94 e0       	ldi	r25, 0x04	; 4
     e78:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     e7c:	4a 89       	ldd	r20, Y+18	; 0x12
     e7e:	5b 89       	ldd	r21, Y+19	; 0x13
     e80:	41 50       	subi	r20, 0x01	; 1
     e82:	51 09       	sbc	r21, r1
     e84:	8c 81       	ldd	r24, Y+4	; 0x04
     e86:	9d 81       	ldd	r25, Y+5	; 0x05
     e88:	04 96       	adiw	r24, 0x04	; 4
     e8a:	88 0f       	add	r24, r24
     e8c:	99 1f       	adc	r25, r25
     e8e:	c8 0f       	add	r28, r24
     e90:	d9 1f       	adc	r29, r25
     e92:	68 81       	ld	r22, Y
     e94:	79 81       	ldd	r23, Y+1	; 0x01
     e96:	0f 2e       	mov	r0, r31
     e98:	f9 e5       	ldi	r31, 0x59	; 89
     e9a:	ef 2e       	mov	r14, r31
     e9c:	f3 e0       	ldi	r31, 0x03	; 3
     e9e:	ff 2e       	mov	r15, r31
     ea0:	f0 2d       	mov	r31, r0
     ea2:	21 e0       	ldi	r18, 0x01	; 1
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	8a e1       	ldi	r24, 0x1A	; 26
     ea8:	94 e0       	ldi	r25, 0x04	; 4
     eaa:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     eae:	b9 c0       	rjmp	.+370    	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 9:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     eb0:	4a 89       	ldd	r20, Y+18	; 0x12
     eb2:	5b 89       	ldd	r21, Y+19	; 0x13
     eb4:	ec 81       	ldd	r30, Y+4	; 0x04
     eb6:	fd 81       	ldd	r31, Y+5	; 0x05
     eb8:	34 96       	adiw	r30, 0x04	; 4
     eba:	ee 0f       	add	r30, r30
     ebc:	ff 1f       	adc	r31, r31
     ebe:	ec 0f       	add	r30, r28
     ec0:	fd 1f       	adc	r31, r29
     ec2:	60 81       	ld	r22, Z
     ec4:	71 81       	ldd	r23, Z+1	; 0x01
     ec6:	08 e0       	ldi	r16, 0x08	; 8
     ec8:	10 e0       	ldi	r17, 0x00	; 0
     eca:	21 e0       	ldi	r18, 0x01	; 1
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	8a e1       	ldi	r24, 0x1A	; 26
     ed0:	94 e0       	ldi	r25, 0x04	; 4
     ed2:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,nine);
     ed6:	4a 89       	ldd	r20, Y+18	; 0x12
     ed8:	5b 89       	ldd	r21, Y+19	; 0x13
     eda:	ec 81       	ldd	r30, Y+4	; 0x04
     edc:	fd 81       	ldd	r31, Y+5	; 0x05
     ede:	34 96       	adiw	r30, 0x04	; 4
     ee0:	ee 0f       	add	r30, r30
     ee2:	ff 1f       	adc	r31, r31
     ee4:	ec 0f       	add	r30, r28
     ee6:	fd 1f       	adc	r31, r29
     ee8:	60 81       	ld	r22, Z
     eea:	71 81       	ldd	r23, Z+1	; 0x01
     eec:	0f 2e       	mov	r0, r31
     eee:	f1 e7       	ldi	r31, 0x71	; 113
     ef0:	ef 2e       	mov	r14, r31
     ef2:	f3 e0       	ldi	r31, 0x03	; 3
     ef4:	ff 2e       	mov	r15, r31
     ef6:	f0 2d       	mov	r31, r0
     ef8:	21 e0       	ldi	r18, 0x01	; 1
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	8a e1       	ldi	r24, 0x1A	; 26
     efe:	94 e0       	ldi	r25, 0x04	; 4
     f00:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     f04:	4a 89       	ldd	r20, Y+18	; 0x12
     f06:	5b 89       	ldd	r21, Y+19	; 0x13
     f08:	4e 5f       	subi	r20, 0xFE	; 254
     f0a:	5f 4f       	sbci	r21, 0xFF	; 255
     f0c:	ec 81       	ldd	r30, Y+4	; 0x04
     f0e:	fd 81       	ldd	r31, Y+5	; 0x05
     f10:	34 96       	adiw	r30, 0x04	; 4
     f12:	ee 0f       	add	r30, r30
     f14:	ff 1f       	adc	r31, r31
     f16:	ec 0f       	add	r30, r28
     f18:	fd 1f       	adc	r31, r29
     f1a:	60 81       	ld	r22, Z
     f1c:	71 81       	ldd	r23, Z+1	; 0x01
     f1e:	0f 2e       	mov	r0, r31
     f20:	f1 e5       	ldi	r31, 0x51	; 81
     f22:	ef 2e       	mov	r14, r31
     f24:	f3 e0       	ldi	r31, 0x03	; 3
     f26:	ff 2e       	mov	r15, r31
     f28:	f0 2d       	mov	r31, r0
     f2a:	21 e0       	ldi	r18, 0x01	; 1
     f2c:	30 e0       	ldi	r19, 0x00	; 0
     f2e:	8a e1       	ldi	r24, 0x1A	; 26
     f30:	94 e0       	ldi	r25, 0x04	; 4
     f32:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     f36:	4a 89       	ldd	r20, Y+18	; 0x12
     f38:	5b 89       	ldd	r21, Y+19	; 0x13
     f3a:	41 50       	subi	r20, 0x01	; 1
     f3c:	51 09       	sbc	r21, r1
     f3e:	8c 81       	ldd	r24, Y+4	; 0x04
     f40:	9d 81       	ldd	r25, Y+5	; 0x05
     f42:	04 96       	adiw	r24, 0x04	; 4
     f44:	88 0f       	add	r24, r24
     f46:	99 1f       	adc	r25, r25
     f48:	c8 0f       	add	r28, r24
     f4a:	d9 1f       	adc	r29, r25
     f4c:	68 81       	ld	r22, Y
     f4e:	79 81       	ldd	r23, Y+1	; 0x01
     f50:	0f 2e       	mov	r0, r31
     f52:	f9 e5       	ldi	r31, 0x59	; 89
     f54:	ef 2e       	mov	r14, r31
     f56:	f3 e0       	ldi	r31, 0x03	; 3
     f58:	ff 2e       	mov	r15, r31
     f5a:	f0 2d       	mov	r31, r0
     f5c:	21 e0       	ldi	r18, 0x01	; 1
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	8a e1       	ldi	r24, 0x1A	; 26
     f62:	94 e0       	ldi	r25, 0x04	; 4
     f64:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
     f68:	5c c0       	rjmp	.+184    	; 0x1022 <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 10:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     f6a:	4a 89       	ldd	r20, Y+18	; 0x12
     f6c:	5b 89       	ldd	r21, Y+19	; 0x13
     f6e:	ec 81       	ldd	r30, Y+4	; 0x04
     f70:	fd 81       	ldd	r31, Y+5	; 0x05
     f72:	34 96       	adiw	r30, 0x04	; 4
     f74:	ee 0f       	add	r30, r30
     f76:	ff 1f       	adc	r31, r31
     f78:	ec 0f       	add	r30, r28
     f7a:	fd 1f       	adc	r31, r29
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	08 e0       	ldi	r16, 0x08	; 8
     f82:	10 e0       	ldi	r17, 0x00	; 0
     f84:	21 e0       	ldi	r18, 0x01	; 1
     f86:	30 e0       	ldi	r19, 0x00	; 0
     f88:	8a e1       	ldi	r24, 0x1A	; 26
     f8a:	94 e0       	ldi	r25, 0x04	; 4
     f8c:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,arrow);
     f90:	4a 89       	ldd	r20, Y+18	; 0x12
     f92:	5b 89       	ldd	r21, Y+19	; 0x13
     f94:	ec 81       	ldd	r30, Y+4	; 0x04
     f96:	fd 81       	ldd	r31, Y+5	; 0x05
     f98:	34 96       	adiw	r30, 0x04	; 4
     f9a:	ee 0f       	add	r30, r30
     f9c:	ff 1f       	adc	r31, r31
     f9e:	ec 0f       	add	r30, r28
     fa0:	fd 1f       	adc	r31, r29
     fa2:	60 81       	ld	r22, Z
     fa4:	71 81       	ldd	r23, Z+1	; 0x01
     fa6:	0f 2e       	mov	r0, r31
     fa8:	f1 e6       	ldi	r31, 0x61	; 97
     faa:	ef 2e       	mov	r14, r31
     fac:	f3 e0       	ldi	r31, 0x03	; 3
     fae:	ff 2e       	mov	r15, r31
     fb0:	f0 2d       	mov	r31, r0
     fb2:	21 e0       	ldi	r18, 0x01	; 1
     fb4:	30 e0       	ldi	r19, 0x00	; 0
     fb6:	8a e1       	ldi	r24, 0x1A	; 26
     fb8:	94 e0       	ldi	r25, 0x04	; 4
     fba:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
     fbe:	4a 89       	ldd	r20, Y+18	; 0x12
     fc0:	5b 89       	ldd	r21, Y+19	; 0x13
     fc2:	4e 5f       	subi	r20, 0xFE	; 254
     fc4:	5f 4f       	sbci	r21, 0xFF	; 255
     fc6:	ec 81       	ldd	r30, Y+4	; 0x04
     fc8:	fd 81       	ldd	r31, Y+5	; 0x05
     fca:	34 96       	adiw	r30, 0x04	; 4
     fcc:	ee 0f       	add	r30, r30
     fce:	ff 1f       	adc	r31, r31
     fd0:	ec 0f       	add	r30, r28
     fd2:	fd 1f       	adc	r31, r29
     fd4:	60 81       	ld	r22, Z
     fd6:	71 81       	ldd	r23, Z+1	; 0x01
     fd8:	0f 2e       	mov	r0, r31
     fda:	f1 e5       	ldi	r31, 0x51	; 81
     fdc:	ef 2e       	mov	r14, r31
     fde:	f3 e0       	ldi	r31, 0x03	; 3
     fe0:	ff 2e       	mov	r15, r31
     fe2:	f0 2d       	mov	r31, r0
     fe4:	21 e0       	ldi	r18, 0x01	; 1
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	8a e1       	ldi	r24, 0x1A	; 26
     fea:	94 e0       	ldi	r25, 0x04	; 4
     fec:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
     ff0:	4a 89       	ldd	r20, Y+18	; 0x12
     ff2:	5b 89       	ldd	r21, Y+19	; 0x13
     ff4:	41 50       	subi	r20, 0x01	; 1
     ff6:	51 09       	sbc	r21, r1
     ff8:	8c 81       	ldd	r24, Y+4	; 0x04
     ffa:	9d 81       	ldd	r25, Y+5	; 0x05
     ffc:	04 96       	adiw	r24, 0x04	; 4
     ffe:	88 0f       	add	r24, r24
    1000:	99 1f       	adc	r25, r25
    1002:	c8 0f       	add	r28, r24
    1004:	d9 1f       	adc	r29, r25
    1006:	68 81       	ld	r22, Y
    1008:	79 81       	ldd	r23, Y+1	; 0x01
    100a:	0f 2e       	mov	r0, r31
    100c:	f9 e5       	ldi	r31, 0x59	; 89
    100e:	ef 2e       	mov	r14, r31
    1010:	f3 e0       	ldi	r31, 0x03	; 3
    1012:	ff 2e       	mov	r15, r31
    1014:	f0 2d       	mov	r31, r0
    1016:	21 e0       	ldi	r18, 0x01	; 1
    1018:	30 e0       	ldi	r19, 0x00	; 0
    101a:	8a e1       	ldi	r24, 0x1A	; 26
    101c:	94 e0       	ldi	r25, 0x04	; 4
    101e:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
			}
		}
		}
	};
    1022:	df 91       	pop	r29
    1024:	cf 91       	pop	r28
    1026:	1f 91       	pop	r17
    1028:	0f 91       	pop	r16
    102a:	ff 90       	pop	r15
    102c:	ef 90       	pop	r14
    102e:	08 95       	ret

00001030 <_ZN13Password_Menu7DefaultEv>:
	Password_Menu()
	{

	};
	
	void Default() override
    1030:	ef 92       	push	r14
    1032:	ff 92       	push	r15
    1034:	0f 93       	push	r16
    1036:	1f 93       	push	r17
    1038:	cf 93       	push	r28
    103a:	df 93       	push	r29
    103c:	ec 01       	movw	r28, r24
	{
		oled.OLED_Write_To_Bufer(x[0],y+1,1,8,line);
    103e:	4a 89       	ldd	r20, Y+18	; 0x12
    1040:	5b 89       	ldd	r21, Y+19	; 0x13
    1042:	4f 5f       	subi	r20, 0xFF	; 255
    1044:	5f 4f       	sbci	r21, 0xFF	; 255
    1046:	68 85       	ldd	r22, Y+8	; 0x08
    1048:	79 85       	ldd	r23, Y+9	; 0x09
    104a:	0f 2e       	mov	r0, r31
    104c:	f9 e6       	ldi	r31, 0x69	; 105
    104e:	ef 2e       	mov	r14, r31
    1050:	f3 e0       	ldi	r31, 0x03	; 3
    1052:	ff 2e       	mov	r15, r31
    1054:	f0 2d       	mov	r31, r0
    1056:	08 e0       	ldi	r16, 0x08	; 8
    1058:	10 e0       	ldi	r17, 0x00	; 0
    105a:	21 e0       	ldi	r18, 0x01	; 1
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	8a e1       	ldi	r24, 0x1A	; 26
    1060:	94 e0       	ldi	r25, 0x04	; 4
    1062:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[1],y+1,1,8,line);
    1066:	4a 89       	ldd	r20, Y+18	; 0x12
    1068:	5b 89       	ldd	r21, Y+19	; 0x13
    106a:	4f 5f       	subi	r20, 0xFF	; 255
    106c:	5f 4f       	sbci	r21, 0xFF	; 255
    106e:	6a 85       	ldd	r22, Y+10	; 0x0a
    1070:	7b 85       	ldd	r23, Y+11	; 0x0b
    1072:	21 e0       	ldi	r18, 0x01	; 1
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	8a e1       	ldi	r24, 0x1A	; 26
    1078:	94 e0       	ldi	r25, 0x04	; 4
    107a:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[2],y+1,1,8,line);
    107e:	4a 89       	ldd	r20, Y+18	; 0x12
    1080:	5b 89       	ldd	r21, Y+19	; 0x13
    1082:	4f 5f       	subi	r20, 0xFF	; 255
    1084:	5f 4f       	sbci	r21, 0xFF	; 255
    1086:	6c 85       	ldd	r22, Y+12	; 0x0c
    1088:	7d 85       	ldd	r23, Y+13	; 0x0d
    108a:	21 e0       	ldi	r18, 0x01	; 1
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	8a e1       	ldi	r24, 0x1A	; 26
    1090:	94 e0       	ldi	r25, 0x04	; 4
    1092:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[3],y+1,1,8,line);
    1096:	4a 89       	ldd	r20, Y+18	; 0x12
    1098:	5b 89       	ldd	r21, Y+19	; 0x13
    109a:	4f 5f       	subi	r20, 0xFF	; 255
    109c:	5f 4f       	sbci	r21, 0xFF	; 255
    109e:	6e 85       	ldd	r22, Y+14	; 0x0e
    10a0:	7f 85       	ldd	r23, Y+15	; 0x0f
    10a2:	21 e0       	ldi	r18, 0x01	; 1
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	8a e1       	ldi	r24, 0x1A	; 26
    10a8:	94 e0       	ldi	r25, 0x04	; 4
    10aa:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[4],y+1,1,8,line);
    10ae:	4a 89       	ldd	r20, Y+18	; 0x12
    10b0:	5b 89       	ldd	r21, Y+19	; 0x13
    10b2:	4f 5f       	subi	r20, 0xFF	; 255
    10b4:	5f 4f       	sbci	r21, 0xFF	; 255
    10b6:	68 89       	ldd	r22, Y+16	; 0x10
    10b8:	79 89       	ldd	r23, Y+17	; 0x11
    10ba:	21 e0       	ldi	r18, 0x01	; 1
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	8a e1       	ldi	r24, 0x1A	; 26
    10c0:	94 e0       	ldi	r25, 0x04	; 4
    10c2:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	};
    10c6:	df 91       	pop	r29
    10c8:	cf 91       	pop	r28
    10ca:	1f 91       	pop	r17
    10cc:	0f 91       	pop	r16
    10ce:	ff 90       	pop	r15
    10d0:	ef 90       	pop	r14
    10d2:	08 95       	ret

000010d4 <_ZN9Main_Menu7actionsEv>:
	{
		
		
	};
	
	void actions()override
    10d4:	ef 92       	push	r14
    10d6:	ff 92       	push	r15
    10d8:	0f 93       	push	r16
    10da:	1f 93       	push	r17
	{
		switch(pointer)
    10dc:	fc 01       	movw	r30, r24
    10de:	84 81       	ldd	r24, Z+4	; 0x04
    10e0:	95 81       	ldd	r25, Z+5	; 0x05
    10e2:	81 30       	cpi	r24, 0x01	; 1
    10e4:	91 05       	cpc	r25, r1
    10e6:	d9 f1       	breq	.+118    	; 0x115e <_ZN9Main_Menu7actionsEv+0x8a>
    10e8:	82 30       	cpi	r24, 0x02	; 2
    10ea:	91 05       	cpc	r25, r1
    10ec:	09 f4       	brne	.+2      	; 0x10f0 <_ZN9Main_Menu7actionsEv+0x1c>
    10ee:	54 c0       	rjmp	.+168    	; 0x1198 <_ZN9Main_Menu7actionsEv+0xc4>
    10f0:	89 2b       	or	r24, r25
    10f2:	09 f0       	breq	.+2      	; 0x10f6 <_ZN9Main_Menu7actionsEv+0x22>
    10f4:	6d c0       	rjmp	.+218    	; 0x11d0 <_ZN9Main_Menu7actionsEv+0xfc>
		{
			case 0:
			{
				oled.OLED_Clear_Bufer_part(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32);
    10f6:	00 e2       	ldi	r16, 0x20	; 32
    10f8:	10 e0       	ldi	r17, 0x00	; 0
    10fa:	24 e0       	ldi	r18, 0x04	; 4
    10fc:	30 e0       	ldi	r19, 0x00	; 0
    10fe:	42 e0       	ldi	r20, 0x02	; 2
    1100:	50 e0       	ldi	r21, 0x00	; 0
    1102:	62 e3       	ldi	r22, 0x32	; 50
    1104:	70 e0       	ldi	r23, 0x00	; 0
    1106:	8a e1       	ldi	r24, 0x1A	; 26
    1108:	94 e0       	ldi	r25, 0x04	; 4
    110a:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				if(locked) oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,unlock);
    110e:	80 91 18 04 	lds	r24, 0x0418	; 0x800418 <locked>
    1112:	88 23       	and	r24, r24
    1114:	89 f0       	breq	.+34     	; 0x1138 <_ZN9Main_Menu7actionsEv+0x64>
    1116:	0f 2e       	mov	r0, r31
    1118:	f1 e2       	ldi	r31, 0x21	; 33
    111a:	ef 2e       	mov	r14, r31
    111c:	f1 e0       	ldi	r31, 0x01	; 1
    111e:	ff 2e       	mov	r15, r31
    1120:	f0 2d       	mov	r31, r0
    1122:	24 e0       	ldi	r18, 0x04	; 4
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	42 e0       	ldi	r20, 0x02	; 2
    1128:	50 e0       	ldi	r21, 0x00	; 0
    112a:	62 e3       	ldi	r22, 0x32	; 50
    112c:	70 e0       	ldi	r23, 0x00	; 0
    112e:	8a e1       	ldi	r24, 0x1A	; 26
    1130:	94 e0       	ldi	r25, 0x04	; 4
    1132:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    1136:	4c c0       	rjmp	.+152    	; 0x11d0 <_ZN9Main_Menu7actionsEv+0xfc>
				else oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,lock);
    1138:	0f 2e       	mov	r0, r31
    113a:	f1 eb       	ldi	r31, 0xB1	; 177
    113c:	ef 2e       	mov	r14, r31
    113e:	f1 e0       	ldi	r31, 0x01	; 1
    1140:	ff 2e       	mov	r15, r31
    1142:	f0 2d       	mov	r31, r0
    1144:	00 e2       	ldi	r16, 0x20	; 32
    1146:	10 e0       	ldi	r17, 0x00	; 0
    1148:	24 e0       	ldi	r18, 0x04	; 4
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	42 e0       	ldi	r20, 0x02	; 2
    114e:	50 e0       	ldi	r21, 0x00	; 0
    1150:	62 e3       	ldi	r22, 0x32	; 50
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	8a e1       	ldi	r24, 0x1A	; 26
    1156:	94 e0       	ldi	r25, 0x04	; 4
    1158:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    115c:	39 c0       	rjmp	.+114    	; 0x11d0 <_ZN9Main_Menu7actionsEv+0xfc>
				break;
			}
			case 1:
			{
				oled.OLED_Clear_Bufer_part(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32);
    115e:	00 e2       	ldi	r16, 0x20	; 32
    1160:	10 e0       	ldi	r17, 0x00	; 0
    1162:	24 e0       	ldi	r18, 0x04	; 4
    1164:	30 e0       	ldi	r19, 0x00	; 0
    1166:	42 e0       	ldi	r20, 0x02	; 2
    1168:	50 e0       	ldi	r21, 0x00	; 0
    116a:	62 e3       	ldi	r22, 0x32	; 50
    116c:	70 e0       	ldi	r23, 0x00	; 0
    116e:	8a e1       	ldi	r24, 0x1A	; 26
    1170:	94 e0       	ldi	r25, 0x04	; 4
    1172:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,gear);
    1176:	0f 2e       	mov	r0, r31
    1178:	f1 ec       	ldi	r31, 0xC1	; 193
    117a:	ef 2e       	mov	r14, r31
    117c:	f2 e0       	ldi	r31, 0x02	; 2
    117e:	ff 2e       	mov	r15, r31
    1180:	f0 2d       	mov	r31, r0
    1182:	24 e0       	ldi	r18, 0x04	; 4
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	42 e0       	ldi	r20, 0x02	; 2
    1188:	50 e0       	ldi	r21, 0x00	; 0
    118a:	62 e3       	ldi	r22, 0x32	; 50
    118c:	70 e0       	ldi	r23, 0x00	; 0
    118e:	8a e1       	ldi	r24, 0x1A	; 26
    1190:	94 e0       	ldi	r25, 0x04	; 4
    1192:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    1196:	1c c0       	rjmp	.+56     	; 0x11d0 <_ZN9Main_Menu7actionsEv+0xfc>
			}
			case 2:
			{
				oled.OLED_Clear_Bufer_part(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32);
    1198:	00 e2       	ldi	r16, 0x20	; 32
    119a:	10 e0       	ldi	r17, 0x00	; 0
    119c:	24 e0       	ldi	r18, 0x04	; 4
    119e:	30 e0       	ldi	r19, 0x00	; 0
    11a0:	42 e0       	ldi	r20, 0x02	; 2
    11a2:	50 e0       	ldi	r21, 0x00	; 0
    11a4:	62 e3       	ldi	r22, 0x32	; 50
    11a6:	70 e0       	ldi	r23, 0x00	; 0
    11a8:	8a e1       	ldi	r24, 0x1A	; 26
    11aa:	94 e0       	ldi	r25, 0x04	; 4
    11ac:	0e 94 92 11 	call	0x2324	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,info);
    11b0:	0f 2e       	mov	r0, r31
    11b2:	f1 e3       	ldi	r31, 0x31	; 49
    11b4:	ef 2e       	mov	r14, r31
    11b6:	f2 e0       	ldi	r31, 0x02	; 2
    11b8:	ff 2e       	mov	r15, r31
    11ba:	f0 2d       	mov	r31, r0
    11bc:	24 e0       	ldi	r18, 0x04	; 4
    11be:	30 e0       	ldi	r19, 0x00	; 0
    11c0:	42 e0       	ldi	r20, 0x02	; 2
    11c2:	50 e0       	ldi	r21, 0x00	; 0
    11c4:	62 e3       	ldi	r22, 0x32	; 50
    11c6:	70 e0       	ldi	r23, 0x00	; 0
    11c8:	8a e1       	ldi	r24, 0x1A	; 26
    11ca:	94 e0       	ldi	r25, 0x04	; 4
    11cc:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
			}	
		}
	};
    11d0:	1f 91       	pop	r17
    11d2:	0f 91       	pop	r16
    11d4:	ff 90       	pop	r15
    11d6:	ef 90       	pop	r14
    11d8:	08 95       	ret

000011da <_ZN9Main_Menu7DefaultEv>:
	Main_Menu()
	{

	};
	
    void Default() override
    11da:	ef 92       	push	r14
    11dc:	ff 92       	push	r15
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    {
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X-20,MAIN_MENU_IMG_Y+1,1,16,lt);
    11e2:	0f 2e       	mov	r0, r31
    11e4:	f1 e1       	ldi	r31, 0x11	; 17
    11e6:	ef 2e       	mov	r14, r31
    11e8:	f1 e0       	ldi	r31, 0x01	; 1
    11ea:	ff 2e       	mov	r15, r31
    11ec:	f0 2d       	mov	r31, r0
    11ee:	00 e1       	ldi	r16, 0x10	; 16
    11f0:	10 e0       	ldi	r17, 0x00	; 0
    11f2:	21 e0       	ldi	r18, 0x01	; 1
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	43 e0       	ldi	r20, 0x03	; 3
    11f8:	50 e0       	ldi	r21, 0x00	; 0
    11fa:	6e e1       	ldi	r22, 0x1E	; 30
    11fc:	70 e0       	ldi	r23, 0x00	; 0
    11fe:	8a e1       	ldi	r24, 0x1A	; 26
    1200:	94 e0       	ldi	r25, 0x04	; 4
    1202:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X+56,MAIN_MENU_IMG_Y+1,1,16,rt);
    1206:	0f 2e       	mov	r0, r31
    1208:	f1 ea       	ldi	r31, 0xA1	; 161
    120a:	ef 2e       	mov	r14, r31
    120c:	f1 e0       	ldi	r31, 0x01	; 1
    120e:	ff 2e       	mov	r15, r31
    1210:	f0 2d       	mov	r31, r0
    1212:	21 e0       	ldi	r18, 0x01	; 1
    1214:	30 e0       	ldi	r19, 0x00	; 0
    1216:	43 e0       	ldi	r20, 0x03	; 3
    1218:	50 e0       	ldi	r21, 0x00	; 0
    121a:	6a e6       	ldi	r22, 0x6A	; 106
    121c:	70 e0       	ldi	r23, 0x00	; 0
    121e:	8a e1       	ldi	r24, 0x1A	; 26
    1220:	94 e0       	ldi	r25, 0x04	; 4
    1222:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    };
    1226:	1f 91       	pop	r17
    1228:	0f 91       	pop	r16
    122a:	ff 90       	pop	r15
    122c:	ef 90       	pop	r14
    122e:	08 95       	ret

00001230 <_ZN13Password_Menu5closeEv>:
				actions();
	};
	
	void close()override
	{
		pointer=0;
    1230:	fc 01       	movw	r30, r24
    1232:	15 82       	std	Z+5, r1	; 0x05
    1234:	14 82       	std	Z+4, r1	; 0x04
		Password_Menu_Status=false;
    1236:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <Password_Menu_Status>
		Main_Menu_Status=true;
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
		oled.OLED_Bufer_Clear();
    1240:	8a e1       	ldi	r24, 0x1A	; 26
    1242:	94 e0       	ldi	r25, 0x04	; 4
    1244:	de c7       	rjmp	.+4028   	; 0x2202 <_ZN4OLED16OLED_Bufer_ClearEv>
    1246:	08 95       	ret

00001248 <_ZN9Main_Menu5closeEv>:
		actions();
	};
	
	void close()override
	{
		oled.OLED_Bufer_Clear();
    1248:	8a e1       	ldi	r24, 0x1A	; 26
    124a:	94 e0       	ldi	r25, 0x04	; 4
    124c:	da c7       	rjmp	.+4020   	; 0x2202 <_ZN4OLED16OLED_Bufer_ClearEv>
    124e:	08 95       	ret

00001250 <__vector_4>:
bool btn3=false;
bool btn03=false;
bool btn12=false;

ISR(PCINT0_vect)
{
    1250:	1f 92       	push	r1
    1252:	0f 92       	push	r0
    1254:	0f b6       	in	r0, 0x3f	; 63
    1256:	0f 92       	push	r0
    1258:	11 24       	eor	r1, r1
    125a:	8f 93       	push	r24
    125c:	9f 93       	push	r25
    cli();
    125e:	f8 94       	cli
	if(PINA==0b00000100&!btn0 )
    1260:	90 b1       	in	r25, 0x00	; 0
    1262:	81 e0       	ldi	r24, 0x01	; 1
    1264:	94 30       	cpi	r25, 0x04	; 4
    1266:	09 f0       	breq	.+2      	; 0x126a <__vector_4+0x1a>
    1268:	80 e0       	ldi	r24, 0x00	; 0
    126a:	90 91 fd 03 	lds	r25, 0x03FD	; 0x8003fd <btn0>
    126e:	98 17       	cp	r25, r24
    1270:	18 f4       	brcc	.+6      	; 0x1278 <__vector_4+0x28>
	{
		btn0=true;
    1272:	81 e0       	ldi	r24, 0x01	; 1
    1274:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <btn0>
	}
	if(PINA==0b00001000&!btn1 )
    1278:	90 b1       	in	r25, 0x00	; 0
    127a:	81 e0       	ldi	r24, 0x01	; 1
    127c:	98 30       	cpi	r25, 0x08	; 8
    127e:	09 f0       	breq	.+2      	; 0x1282 <__vector_4+0x32>
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	90 91 fc 03 	lds	r25, 0x03FC	; 0x8003fc <btn1>
    1286:	98 17       	cp	r25, r24
    1288:	18 f4       	brcc	.+6      	; 0x1290 <__vector_4+0x40>
	{
		btn1=true;
    128a:	81 e0       	ldi	r24, 0x01	; 1
    128c:	80 93 fc 03 	sts	0x03FC, r24	; 0x8003fc <btn1>
	}
	if(PINA==0b00010000&!btn2 )
    1290:	90 b1       	in	r25, 0x00	; 0
    1292:	81 e0       	ldi	r24, 0x01	; 1
    1294:	90 31       	cpi	r25, 0x10	; 16
    1296:	09 f0       	breq	.+2      	; 0x129a <__vector_4+0x4a>
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	90 91 fb 03 	lds	r25, 0x03FB	; 0x8003fb <btn2>
    129e:	98 17       	cp	r25, r24
    12a0:	18 f4       	brcc	.+6      	; 0x12a8 <__vector_4+0x58>
	{
		btn2=true;
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <btn2>
	}
	if(PINA==0b00100000&!btn3 )
    12a8:	90 b1       	in	r25, 0x00	; 0
    12aa:	81 e0       	ldi	r24, 0x01	; 1
    12ac:	90 32       	cpi	r25, 0x20	; 32
    12ae:	09 f0       	breq	.+2      	; 0x12b2 <__vector_4+0x62>
    12b0:	80 e0       	ldi	r24, 0x00	; 0
    12b2:	90 91 fa 03 	lds	r25, 0x03FA	; 0x8003fa <btn3>
    12b6:	98 17       	cp	r25, r24
    12b8:	18 f4       	brcc	.+6      	; 0x12c0 <__vector_4+0x70>
	{
		btn3=true;
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	80 93 fa 03 	sts	0x03FA, r24	; 0x8003fa <btn3>
	}
	if(PINA==0b00011000&!btn03)
    12c0:	90 b1       	in	r25, 0x00	; 0
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	98 31       	cpi	r25, 0x18	; 24
    12c6:	09 f0       	breq	.+2      	; 0x12ca <__vector_4+0x7a>
    12c8:	80 e0       	ldi	r24, 0x00	; 0
    12ca:	90 91 f9 03 	lds	r25, 0x03F9	; 0x8003f9 <btn03>
    12ce:	98 17       	cp	r25, r24
    12d0:	18 f4       	brcc	.+6      	; 0x12d8 <__vector_4+0x88>
	{
		btn03=true;
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	80 93 f9 03 	sts	0x03F9, r24	; 0x8003f9 <btn03>
	}
	if(PINA==0b00100100&!btn12)
    12d8:	90 b1       	in	r25, 0x00	; 0
    12da:	81 e0       	ldi	r24, 0x01	; 1
    12dc:	94 32       	cpi	r25, 0x24	; 36
    12de:	09 f0       	breq	.+2      	; 0x12e2 <__vector_4+0x92>
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	90 91 f8 03 	lds	r25, 0x03F8	; 0x8003f8 <__data_end>
    12e6:	98 17       	cp	r25, r24
    12e8:	18 f4       	brcc	.+6      	; 0x12f0 <__vector_4+0xa0>
	{
		btn12=true;
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <__data_end>
	}
	sei();
    12f0:	78 94       	sei

}
    12f2:	9f 91       	pop	r25
    12f4:	8f 91       	pop	r24
    12f6:	0f 90       	pop	r0
    12f8:	0f be       	out	0x3f, r0	; 63
    12fa:	0f 90       	pop	r0
    12fc:	1f 90       	pop	r1
    12fe:	18 95       	reti

00001300 <_Z5checkv>:


void check()
{
    1300:	af 92       	push	r10
    1302:	bf 92       	push	r11
    1304:	cf 92       	push	r12
    1306:	df 92       	push	r13
    1308:	ef 92       	push	r14
    130a:	ff 92       	push	r15
    130c:	0f 93       	push	r16
    130e:	1f 93       	push	r17
    1310:	cf 93       	push	r28
    1312:	df 93       	push	r29
	if(btn0 & !btn1 & !btn2 & btn3) btn03=true;
    1314:	40 91 fd 03 	lds	r20, 0x03FD	; 0x8003fd <btn0>
    1318:	80 91 fc 03 	lds	r24, 0x03FC	; 0x8003fc <btn1>
    131c:	91 e0       	ldi	r25, 0x01	; 1
    131e:	38 2f       	mov	r19, r24
    1320:	39 27       	eor	r19, r25
    1322:	20 91 fb 03 	lds	r18, 0x03FB	; 0x8003fb <btn2>
    1326:	52 2f       	mov	r21, r18
    1328:	59 27       	eor	r21, r25
    132a:	f3 2f       	mov	r31, r19
    132c:	f5 23       	and	r31, r21
    132e:	74 2f       	mov	r23, r20
    1330:	7f 23       	and	r23, r31
    1332:	b0 91 fa 03 	lds	r27, 0x03FA	; 0x8003fa <btn3>
    1336:	ab 2f       	mov	r26, r27
    1338:	a7 23       	and	r26, r23
    133a:	61 f0       	breq	.+24     	; 0x1354 <_Z5checkv+0x54>
    133c:	71 e0       	ldi	r23, 0x01	; 1
    133e:	70 93 f9 03 	sts	0x03F9, r23	; 0x8003f9 <btn03>
	if(!btn0 & btn1 & btn2 & !btn3) btn12=true;
    1342:	e4 2f       	mov	r30, r20
    1344:	e7 27       	eor	r30, r23
    1346:	9b 2f       	mov	r25, r27
    1348:	97 27       	eor	r25, r23
    134a:	8e 23       	and	r24, r30
    134c:	82 23       	and	r24, r18
    134e:	b8 17       	cp	r27, r24
    1350:	50 f0       	brcs	.+20     	; 0x1366 <_Z5checkv+0x66>
    1352:	8c c6       	rjmp	.+3352   	; 0x206c <_Z5checkv+0xd6c>
    1354:	91 e0       	ldi	r25, 0x01	; 1
    1356:	e4 2f       	mov	r30, r20
    1358:	e9 27       	eor	r30, r25
    135a:	8e 23       	and	r24, r30
    135c:	9b 27       	eor	r25, r27
    135e:	42 2f       	mov	r20, r18
    1360:	48 23       	and	r20, r24
    1362:	b4 17       	cp	r27, r20
    1364:	40 f4       	brcc	.+16     	; 0x1376 <_Z5checkv+0x76>
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <__data_end>
	
	if(btn0 & !btn1 & !btn2 & !btn3 & !btn12 & !btn03)
    136c:	a0 91 f9 03 	lds	r26, 0x03F9	; 0x8003f9 <btn03>
    1370:	40 e0       	ldi	r20, 0x00	; 0
    1372:	61 e0       	ldi	r22, 0x01	; 1
    1374:	1c c3       	rjmp	.+1592   	; 0x19ae <_Z5checkv+0x6ae>
    1376:	60 91 f8 03 	lds	r22, 0x03F8	; 0x8003f8 <__data_end>
    137a:	41 e0       	ldi	r20, 0x01	; 1
    137c:	46 27       	eor	r20, r22
    137e:	a0 91 f9 03 	lds	r26, 0x03F9	; 0x8003f9 <btn03>
    1382:	c9 2f       	mov	r28, r25
    1384:	c4 23       	and	r28, r20
    1386:	7c 23       	and	r23, r28
    1388:	a7 17       	cp	r26, r23
    138a:	08 f0       	brcs	.+2      	; 0x138e <_Z5checkv+0x8e>
    138c:	5c c0       	rjmp	.+184    	; 0x1446 <_Z5checkv+0x146>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    138e:	08 e0       	ldi	r16, 0x08	; 8
    1390:	10 e0       	ldi	r17, 0x00	; 0
    1392:	21 e0       	ldi	r18, 0x01	; 1
    1394:	30 e0       	ldi	r19, 0x00	; 0
    1396:	40 e0       	ldi	r20, 0x00	; 0
    1398:	50 e0       	ldi	r21, 0x00	; 0
    139a:	60 e0       	ldi	r22, 0x00	; 0
    139c:	70 e0       	ldi	r23, 0x00	; 0
    139e:	8a e1       	ldi	r24, 0x1A	; 26
    13a0:	94 e0       	ldi	r25, 0x04	; 4
    13a2:	c0 d7       	rcall	.+3968   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,zero);
    13a4:	0f 2e       	mov	r0, r31
    13a6:	f9 eb       	ldi	r31, 0xB9	; 185
    13a8:	ef 2e       	mov	r14, r31
    13aa:	f3 e0       	ldi	r31, 0x03	; 3
    13ac:	ff 2e       	mov	r15, r31
    13ae:	f0 2d       	mov	r31, r0
    13b0:	21 e0       	ldi	r18, 0x01	; 1
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	40 e0       	ldi	r20, 0x00	; 0
    13b6:	50 e0       	ldi	r21, 0x00	; 0
    13b8:	60 e0       	ldi	r22, 0x00	; 0
    13ba:	70 e0       	ldi	r23, 0x00	; 0
    13bc:	8a e1       	ldi	r24, 0x1A	; 26
    13be:	94 e0       	ldi	r25, 0x04	; 4
    13c0:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		if (Password_Menu_Status)
    13c4:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <Password_Menu_Status>
    13c8:	88 23       	and	r24, r24
    13ca:	e1 f0       	breq	.+56     	; 0x1404 <_Z5checkv+0x104>
		actions();
	};
	
	void previous()override
	{
		symbol_pointer--;
    13cc:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <passw_menu+0x6>
    13d0:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <passw_menu+0x7>
    13d4:	01 97       	sbiw	r24, 0x01	; 1
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
    13d6:	2a f0       	brmi	.+10     	; 0x13e2 <_Z5checkv+0xe2>
		actions();
	};
	
	void previous()override
	{
		symbol_pointer--;
    13d8:	90 93 0b 04 	sts	0x040B, r25	; 0x80040b <passw_menu+0x7>
    13dc:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <passw_menu+0x6>
    13e0:	06 c0       	rjmp	.+12     	; 0x13ee <_Z5checkv+0xee>
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
    13e2:	8a e0       	ldi	r24, 0x0A	; 10
    13e4:	90 e0       	ldi	r25, 0x00	; 0
    13e6:	90 93 0b 04 	sts	0x040B, r25	; 0x80040b <passw_menu+0x7>
    13ea:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <passw_menu+0x6>
		actions();
    13ee:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <passw_menu>
    13f2:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <passw_menu+0x1>
    13f6:	00 88       	ldd	r0, Z+16	; 0x10
    13f8:	f1 89       	ldd	r31, Z+17	; 0x11
    13fa:	e0 2d       	mov	r30, r0
    13fc:	84 e0       	ldi	r24, 0x04	; 4
    13fe:	94 e0       	ldi	r25, 0x04	; 4
    1400:	09 95       	icall
    1402:	27 c6       	rjmp	.+3150   	; 0x2052 <_Z5checkv+0xd52>
		if (Password_Menu_Status)
		{
			passw_menu.previous();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    1404:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    1408:	88 23       	and	r24, r24
    140a:	09 f4       	brne	.+2      	; 0x140e <_Z5checkv+0x10e>
    140c:	22 c6       	rjmp	.+3140   	; 0x2052 <_Z5checkv+0xd52>
		actions();
	};
	
	void previous()override
	{
		pointer--;
    140e:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <menu+0x4>
    1412:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <menu+0x5>
    1416:	01 97       	sbiw	r24, 0x01	; 1
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
    1418:	2a f0       	brmi	.+10     	; 0x1424 <_Z5checkv+0x124>
		actions();
	};
	
	void previous()override
	{
		pointer--;
    141a:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <menu+0x5>
    141e:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <menu+0x4>
    1422:	06 c0       	rjmp	.+12     	; 0x1430 <_Z5checkv+0x130>
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
    1424:	82 e0       	ldi	r24, 0x02	; 2
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <menu+0x5>
    142c:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <menu+0x4>
		actions();
    1430:	e0 91 fe 03 	lds	r30, 0x03FE	; 0x8003fe <menu>
    1434:	f0 91 ff 03 	lds	r31, 0x03FF	; 0x8003ff <menu+0x1>
    1438:	00 88       	ldd	r0, Z+16	; 0x10
    143a:	f1 89       	ldd	r31, Z+17	; 0x11
    143c:	e0 2d       	mov	r30, r0
    143e:	8e ef       	ldi	r24, 0xFE	; 254
    1440:	93 e0       	ldi	r25, 0x03	; 3
    1442:	09 95       	icall
    1444:	06 c6       	rjmp	.+3084   	; 0x2052 <_Z5checkv+0xd52>
		{
			menu.previous();
			//menu.refresh();
		}
	}
	else if(!btn0 & btn1 & !btn2 & !btn3 & !btn12 & !btn03)
    1446:	89 23       	and	r24, r25
    1448:	85 23       	and	r24, r21
    144a:	84 23       	and	r24, r20
    144c:	a8 17       	cp	r26, r24
    144e:	08 f0       	brcs	.+2      	; 0x1452 <_Z5checkv+0x152>
    1450:	ae c2       	rjmp	.+1372   	; 0x19ae <_Z5checkv+0x6ae>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    1452:	08 e0       	ldi	r16, 0x08	; 8
    1454:	10 e0       	ldi	r17, 0x00	; 0
    1456:	21 e0       	ldi	r18, 0x01	; 1
    1458:	30 e0       	ldi	r19, 0x00	; 0
    145a:	40 e0       	ldi	r20, 0x00	; 0
    145c:	50 e0       	ldi	r21, 0x00	; 0
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	8a e1       	ldi	r24, 0x1A	; 26
    1464:	94 e0       	ldi	r25, 0x04	; 4
    1466:	5e d7       	rcall	.+3772   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,one);
    1468:	0f 2e       	mov	r0, r31
    146a:	f1 eb       	ldi	r31, 0xB1	; 177
    146c:	ef 2e       	mov	r14, r31
    146e:	f3 e0       	ldi	r31, 0x03	; 3
    1470:	ff 2e       	mov	r15, r31
    1472:	f0 2d       	mov	r31, r0
    1474:	21 e0       	ldi	r18, 0x01	; 1
    1476:	30 e0       	ldi	r19, 0x00	; 0
    1478:	40 e0       	ldi	r20, 0x00	; 0
    147a:	50 e0       	ldi	r21, 0x00	; 0
    147c:	60 e0       	ldi	r22, 0x00	; 0
    147e:	70 e0       	ldi	r23, 0x00	; 0
    1480:	8a e1       	ldi	r24, 0x1A	; 26
    1482:	94 e0       	ldi	r25, 0x04	; 4
    1484:	9e d7       	rcall	.+3900   	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		if (Password_Menu_Status)
    1486:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <Password_Menu_Status>
    148a:	88 23       	and	r24, r24
    148c:	09 f4       	brne	.+2      	; 0x1490 <_Z5checkv+0x190>
    148e:	73 c2       	rjmp	.+1254   	; 0x1976 <_Z5checkv+0x676>
		actions();
	};
	
	void choise()override
	{
		switch(symbol_pointer)
    1490:	e0 91 0a 04 	lds	r30, 0x040A	; 0x80040a <passw_menu+0x6>
    1494:	f0 91 0b 04 	lds	r31, 0x040B	; 0x80040b <passw_menu+0x7>
    1498:	eb 30       	cpi	r30, 0x0B	; 11
    149a:	f1 05       	cpc	r31, r1
    149c:	08 f0       	brcs	.+2      	; 0x14a0 <_Z5checkv+0x1a0>
    149e:	47 c2       	rjmp	.+1166   	; 0x192e <_Z5checkv+0x62e>
    14a0:	e4 5a       	subi	r30, 0xA4	; 164
    14a2:	ff 4f       	sbci	r31, 0xFF	; 255
    14a4:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__tablejump2__>
		{
			case 0:
			{
    			 pointer++;
    14a8:	e4 e0       	ldi	r30, 0x04	; 4
    14aa:	f4 e0       	ldi	r31, 0x04	; 4
    14ac:	84 81       	ldd	r24, Z+4	; 0x04
    14ae:	95 81       	ldd	r25, Z+5	; 0x05
    14b0:	01 96       	adiw	r24, 0x01	; 1
    14b2:	95 83       	std	Z+5, r25	; 0x05
    14b4:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    14b6:	18 16       	cp	r1, r24
    14b8:	19 06       	cpc	r1, r25
    14ba:	0c f0       	brlt	.+2      	; 0x14be <_Z5checkv+0x1be>
    14bc:	38 c2       	rjmp	.+1136   	; 0x192e <_Z5checkv+0x62e>
    14be:	0f 2e       	mov	r0, r31
    14c0:	fc e0       	ldi	r31, 0x0C	; 12
    14c2:	cf 2e       	mov	r12, r31
    14c4:	f4 e0       	ldi	r31, 0x04	; 4
    14c6:	df 2e       	mov	r13, r31
    14c8:	f0 2d       	mov	r31, r0
    14ca:	e1 2c       	mov	r14, r1
    14cc:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    14ce:	ef 01       	movw	r28, r30
    14d0:	56 01       	movw	r10, r12
    14d2:	4a 89       	ldd	r20, Y+18	; 0x12
    14d4:	5b 89       	ldd	r21, Y+19	; 0x13
    14d6:	4e 5f       	subi	r20, 0xFE	; 254
    14d8:	5f 4f       	sbci	r21, 0xFF	; 255
    14da:	f6 01       	movw	r30, r12
    14dc:	61 91       	ld	r22, Z+
    14de:	71 91       	ld	r23, Z+
    14e0:	6f 01       	movw	r12, r30
    14e2:	08 e0       	ldi	r16, 0x08	; 8
    14e4:	10 e0       	ldi	r17, 0x00	; 0
    14e6:	21 e0       	ldi	r18, 0x01	; 1
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	8a e1       	ldi	r24, 0x1A	; 26
    14ec:	94 e0       	ldi	r25, 0x04	; 4
    14ee:	1a d7       	rcall	.+3636   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    14f0:	4a 89       	ldd	r20, Y+18	; 0x12
    14f2:	5b 89       	ldd	r21, Y+19	; 0x13
    14f4:	41 50       	subi	r20, 0x01	; 1
    14f6:	51 09       	sbc	r21, r1
    14f8:	f5 01       	movw	r30, r10
    14fa:	60 81       	ld	r22, Z
    14fc:	71 81       	ldd	r23, Z+1	; 0x01
    14fe:	21 e0       	ldi	r18, 0x01	; 1
    1500:	30 e0       	ldi	r19, 0x00	; 0
    1502:	8a e1       	ldi	r24, 0x1A	; 26
    1504:	94 e0       	ldi	r25, 0x04	; 4
    1506:	0e d7       	rcall	.+3612   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		switch(symbol_pointer)
		{
			case 0:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1508:	ff ef       	ldi	r31, 0xFF	; 255
    150a:	ef 1a       	sub	r14, r31
    150c:	ff 0a       	sbc	r15, r31
    150e:	8c 81       	ldd	r24, Y+4	; 0x04
    1510:	9d 81       	ldd	r25, Y+5	; 0x05
    1512:	e8 16       	cp	r14, r24
    1514:	f9 06       	cpc	r15, r25
    1516:	e4 f2       	brlt	.-72     	; 0x14d0 <_Z5checkv+0x1d0>
    1518:	0a c2       	rjmp	.+1044   	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 1:
			{
    			 pointer++;
    151a:	e4 e0       	ldi	r30, 0x04	; 4
    151c:	f4 e0       	ldi	r31, 0x04	; 4
    151e:	84 81       	ldd	r24, Z+4	; 0x04
    1520:	95 81       	ldd	r25, Z+5	; 0x05
    1522:	01 96       	adiw	r24, 0x01	; 1
    1524:	95 83       	std	Z+5, r25	; 0x05
    1526:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    1528:	18 16       	cp	r1, r24
    152a:	19 06       	cpc	r1, r25
    152c:	0c f0       	brlt	.+2      	; 0x1530 <_Z5checkv+0x230>
    152e:	ff c1       	rjmp	.+1022   	; 0x192e <_Z5checkv+0x62e>
    1530:	0f 2e       	mov	r0, r31
    1532:	fc e0       	ldi	r31, 0x0C	; 12
    1534:	cf 2e       	mov	r12, r31
    1536:	f4 e0       	ldi	r31, 0x04	; 4
    1538:	df 2e       	mov	r13, r31
    153a:	f0 2d       	mov	r31, r0
    153c:	e1 2c       	mov	r14, r1
    153e:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1540:	ef 01       	movw	r28, r30
    1542:	56 01       	movw	r10, r12
    1544:	4a 89       	ldd	r20, Y+18	; 0x12
    1546:	5b 89       	ldd	r21, Y+19	; 0x13
    1548:	4e 5f       	subi	r20, 0xFE	; 254
    154a:	5f 4f       	sbci	r21, 0xFF	; 255
    154c:	f6 01       	movw	r30, r12
    154e:	61 91       	ld	r22, Z+
    1550:	71 91       	ld	r23, Z+
    1552:	6f 01       	movw	r12, r30
    1554:	08 e0       	ldi	r16, 0x08	; 8
    1556:	10 e0       	ldi	r17, 0x00	; 0
    1558:	21 e0       	ldi	r18, 0x01	; 1
    155a:	30 e0       	ldi	r19, 0x00	; 0
    155c:	8a e1       	ldi	r24, 0x1A	; 26
    155e:	94 e0       	ldi	r25, 0x04	; 4
    1560:	e1 d6       	rcall	.+3522   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1562:	4a 89       	ldd	r20, Y+18	; 0x12
    1564:	5b 89       	ldd	r21, Y+19	; 0x13
    1566:	41 50       	subi	r20, 0x01	; 1
    1568:	51 09       	sbc	r21, r1
    156a:	f5 01       	movw	r30, r10
    156c:	60 81       	ld	r22, Z
    156e:	71 81       	ldd	r23, Z+1	; 0x01
    1570:	21 e0       	ldi	r18, 0x01	; 1
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	8a e1       	ldi	r24, 0x1A	; 26
    1576:	94 e0       	ldi	r25, 0x04	; 4
    1578:	d5 d6       	rcall	.+3498   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 1:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    157a:	ff ef       	ldi	r31, 0xFF	; 255
    157c:	ef 1a       	sub	r14, r31
    157e:	ff 0a       	sbc	r15, r31
    1580:	8c 81       	ldd	r24, Y+4	; 0x04
    1582:	9d 81       	ldd	r25, Y+5	; 0x05
    1584:	e8 16       	cp	r14, r24
    1586:	f9 06       	cpc	r15, r25
    1588:	e4 f2       	brlt	.-72     	; 0x1542 <_Z5checkv+0x242>
    158a:	d1 c1       	rjmp	.+930    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 2:
			{
	    			 pointer++;
    158c:	e4 e0       	ldi	r30, 0x04	; 4
    158e:	f4 e0       	ldi	r31, 0x04	; 4
    1590:	84 81       	ldd	r24, Z+4	; 0x04
    1592:	95 81       	ldd	r25, Z+5	; 0x05
    1594:	01 96       	adiw	r24, 0x01	; 1
    1596:	95 83       	std	Z+5, r25	; 0x05
    1598:	84 83       	std	Z+4, r24	; 0x04
	    			 for(int i=0;i<pointer;i++)
    159a:	18 16       	cp	r1, r24
    159c:	19 06       	cpc	r1, r25
    159e:	0c f0       	brlt	.+2      	; 0x15a2 <_Z5checkv+0x2a2>
    15a0:	c6 c1       	rjmp	.+908    	; 0x192e <_Z5checkv+0x62e>
    15a2:	0f 2e       	mov	r0, r31
    15a4:	fc e0       	ldi	r31, 0x0C	; 12
    15a6:	cf 2e       	mov	r12, r31
    15a8:	f4 e0       	ldi	r31, 0x04	; 4
    15aa:	df 2e       	mov	r13, r31
    15ac:	f0 2d       	mov	r31, r0
    15ae:	e1 2c       	mov	r14, r1
    15b0:	f1 2c       	mov	r15, r1
	    			 {
		    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    15b2:	ef 01       	movw	r28, r30
    15b4:	56 01       	movw	r10, r12
    15b6:	4a 89       	ldd	r20, Y+18	; 0x12
    15b8:	5b 89       	ldd	r21, Y+19	; 0x13
    15ba:	4e 5f       	subi	r20, 0xFE	; 254
    15bc:	5f 4f       	sbci	r21, 0xFF	; 255
    15be:	f6 01       	movw	r30, r12
    15c0:	61 91       	ld	r22, Z+
    15c2:	71 91       	ld	r23, Z+
    15c4:	6f 01       	movw	r12, r30
    15c6:	08 e0       	ldi	r16, 0x08	; 8
    15c8:	10 e0       	ldi	r17, 0x00	; 0
    15ca:	21 e0       	ldi	r18, 0x01	; 1
    15cc:	30 e0       	ldi	r19, 0x00	; 0
    15ce:	8a e1       	ldi	r24, 0x1A	; 26
    15d0:	94 e0       	ldi	r25, 0x04	; 4
    15d2:	a8 d6       	rcall	.+3408   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    15d4:	4a 89       	ldd	r20, Y+18	; 0x12
    15d6:	5b 89       	ldd	r21, Y+19	; 0x13
    15d8:	41 50       	subi	r20, 0x01	; 1
    15da:	51 09       	sbc	r21, r1
    15dc:	f5 01       	movw	r30, r10
    15de:	60 81       	ld	r22, Z
    15e0:	71 81       	ldd	r23, Z+1	; 0x01
    15e2:	21 e0       	ldi	r18, 0x01	; 1
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	8a e1       	ldi	r24, 0x1A	; 26
    15e8:	94 e0       	ldi	r25, 0x04	; 4
    15ea:	9c d6       	rcall	.+3384   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 2:
			{
	    			 pointer++;
	    			 for(int i=0;i<pointer;i++)
    15ec:	ff ef       	ldi	r31, 0xFF	; 255
    15ee:	ef 1a       	sub	r14, r31
    15f0:	ff 0a       	sbc	r15, r31
    15f2:	8c 81       	ldd	r24, Y+4	; 0x04
    15f4:	9d 81       	ldd	r25, Y+5	; 0x05
    15f6:	e8 16       	cp	r14, r24
    15f8:	f9 06       	cpc	r15, r25
    15fa:	e4 f2       	brlt	.-72     	; 0x15b4 <_Z5checkv+0x2b4>
    15fc:	98 c1       	rjmp	.+816    	; 0x192e <_Z5checkv+0x62e>
	    			 }
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    15fe:	e4 e0       	ldi	r30, 0x04	; 4
    1600:	f4 e0       	ldi	r31, 0x04	; 4
    1602:	84 81       	ldd	r24, Z+4	; 0x04
    1604:	95 81       	ldd	r25, Z+5	; 0x05
    1606:	01 96       	adiw	r24, 0x01	; 1
    1608:	95 83       	std	Z+5, r25	; 0x05
    160a:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    160c:	18 16       	cp	r1, r24
    160e:	19 06       	cpc	r1, r25
    1610:	0c f0       	brlt	.+2      	; 0x1614 <_Z5checkv+0x314>
    1612:	8d c1       	rjmp	.+794    	; 0x192e <_Z5checkv+0x62e>
    1614:	0f 2e       	mov	r0, r31
    1616:	fc e0       	ldi	r31, 0x0C	; 12
    1618:	cf 2e       	mov	r12, r31
    161a:	f4 e0       	ldi	r31, 0x04	; 4
    161c:	df 2e       	mov	r13, r31
    161e:	f0 2d       	mov	r31, r0
    1620:	e1 2c       	mov	r14, r1
    1622:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1624:	ef 01       	movw	r28, r30
    1626:	56 01       	movw	r10, r12
    1628:	4a 89       	ldd	r20, Y+18	; 0x12
    162a:	5b 89       	ldd	r21, Y+19	; 0x13
    162c:	4e 5f       	subi	r20, 0xFE	; 254
    162e:	5f 4f       	sbci	r21, 0xFF	; 255
    1630:	f6 01       	movw	r30, r12
    1632:	61 91       	ld	r22, Z+
    1634:	71 91       	ld	r23, Z+
    1636:	6f 01       	movw	r12, r30
    1638:	08 e0       	ldi	r16, 0x08	; 8
    163a:	10 e0       	ldi	r17, 0x00	; 0
    163c:	21 e0       	ldi	r18, 0x01	; 1
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	8a e1       	ldi	r24, 0x1A	; 26
    1642:	94 e0       	ldi	r25, 0x04	; 4
    1644:	6f d6       	rcall	.+3294   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1646:	4a 89       	ldd	r20, Y+18	; 0x12
    1648:	5b 89       	ldd	r21, Y+19	; 0x13
    164a:	41 50       	subi	r20, 0x01	; 1
    164c:	51 09       	sbc	r21, r1
    164e:	f5 01       	movw	r30, r10
    1650:	60 81       	ld	r22, Z
    1652:	71 81       	ldd	r23, Z+1	; 0x01
    1654:	21 e0       	ldi	r18, 0x01	; 1
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	8a e1       	ldi	r24, 0x1A	; 26
    165a:	94 e0       	ldi	r25, 0x04	; 4
    165c:	63 d6       	rcall	.+3270   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    165e:	ff ef       	ldi	r31, 0xFF	; 255
    1660:	ef 1a       	sub	r14, r31
    1662:	ff 0a       	sbc	r15, r31
    1664:	8c 81       	ldd	r24, Y+4	; 0x04
    1666:	9d 81       	ldd	r25, Y+5	; 0x05
    1668:	e8 16       	cp	r14, r24
    166a:	f9 06       	cpc	r15, r25
    166c:	e4 f2       	brlt	.-72     	; 0x1626 <_Z5checkv+0x326>
    166e:	5f c1       	rjmp	.+702    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 4:
			{
    			 pointer++;
    1670:	e4 e0       	ldi	r30, 0x04	; 4
    1672:	f4 e0       	ldi	r31, 0x04	; 4
    1674:	84 81       	ldd	r24, Z+4	; 0x04
    1676:	95 81       	ldd	r25, Z+5	; 0x05
    1678:	01 96       	adiw	r24, 0x01	; 1
    167a:	95 83       	std	Z+5, r25	; 0x05
    167c:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    167e:	18 16       	cp	r1, r24
    1680:	19 06       	cpc	r1, r25
    1682:	0c f0       	brlt	.+2      	; 0x1686 <_Z5checkv+0x386>
    1684:	54 c1       	rjmp	.+680    	; 0x192e <_Z5checkv+0x62e>
    1686:	0f 2e       	mov	r0, r31
    1688:	fc e0       	ldi	r31, 0x0C	; 12
    168a:	cf 2e       	mov	r12, r31
    168c:	f4 e0       	ldi	r31, 0x04	; 4
    168e:	df 2e       	mov	r13, r31
    1690:	f0 2d       	mov	r31, r0
    1692:	e1 2c       	mov	r14, r1
    1694:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1696:	ef 01       	movw	r28, r30
    1698:	56 01       	movw	r10, r12
    169a:	4a 89       	ldd	r20, Y+18	; 0x12
    169c:	5b 89       	ldd	r21, Y+19	; 0x13
    169e:	4e 5f       	subi	r20, 0xFE	; 254
    16a0:	5f 4f       	sbci	r21, 0xFF	; 255
    16a2:	f6 01       	movw	r30, r12
    16a4:	61 91       	ld	r22, Z+
    16a6:	71 91       	ld	r23, Z+
    16a8:	6f 01       	movw	r12, r30
    16aa:	08 e0       	ldi	r16, 0x08	; 8
    16ac:	10 e0       	ldi	r17, 0x00	; 0
    16ae:	21 e0       	ldi	r18, 0x01	; 1
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	8a e1       	ldi	r24, 0x1A	; 26
    16b4:	94 e0       	ldi	r25, 0x04	; 4
    16b6:	36 d6       	rcall	.+3180   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    16b8:	4a 89       	ldd	r20, Y+18	; 0x12
    16ba:	5b 89       	ldd	r21, Y+19	; 0x13
    16bc:	41 50       	subi	r20, 0x01	; 1
    16be:	51 09       	sbc	r21, r1
    16c0:	f5 01       	movw	r30, r10
    16c2:	60 81       	ld	r22, Z
    16c4:	71 81       	ldd	r23, Z+1	; 0x01
    16c6:	21 e0       	ldi	r18, 0x01	; 1
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	8a e1       	ldi	r24, 0x1A	; 26
    16cc:	94 e0       	ldi	r25, 0x04	; 4
    16ce:	2a d6       	rcall	.+3156   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 4:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    16d0:	ff ef       	ldi	r31, 0xFF	; 255
    16d2:	ef 1a       	sub	r14, r31
    16d4:	ff 0a       	sbc	r15, r31
    16d6:	8c 81       	ldd	r24, Y+4	; 0x04
    16d8:	9d 81       	ldd	r25, Y+5	; 0x05
    16da:	e8 16       	cp	r14, r24
    16dc:	f9 06       	cpc	r15, r25
    16de:	e4 f2       	brlt	.-72     	; 0x1698 <_Z5checkv+0x398>
    16e0:	26 c1       	rjmp	.+588    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 5:
			{
    			 pointer++;
    16e2:	e4 e0       	ldi	r30, 0x04	; 4
    16e4:	f4 e0       	ldi	r31, 0x04	; 4
    16e6:	84 81       	ldd	r24, Z+4	; 0x04
    16e8:	95 81       	ldd	r25, Z+5	; 0x05
    16ea:	01 96       	adiw	r24, 0x01	; 1
    16ec:	95 83       	std	Z+5, r25	; 0x05
    16ee:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    16f0:	18 16       	cp	r1, r24
    16f2:	19 06       	cpc	r1, r25
    16f4:	0c f0       	brlt	.+2      	; 0x16f8 <_Z5checkv+0x3f8>
    16f6:	1b c1       	rjmp	.+566    	; 0x192e <_Z5checkv+0x62e>
    16f8:	0f 2e       	mov	r0, r31
    16fa:	fc e0       	ldi	r31, 0x0C	; 12
    16fc:	cf 2e       	mov	r12, r31
    16fe:	f4 e0       	ldi	r31, 0x04	; 4
    1700:	df 2e       	mov	r13, r31
    1702:	f0 2d       	mov	r31, r0
    1704:	e1 2c       	mov	r14, r1
    1706:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1708:	ef 01       	movw	r28, r30
    170a:	56 01       	movw	r10, r12
    170c:	4a 89       	ldd	r20, Y+18	; 0x12
    170e:	5b 89       	ldd	r21, Y+19	; 0x13
    1710:	4e 5f       	subi	r20, 0xFE	; 254
    1712:	5f 4f       	sbci	r21, 0xFF	; 255
    1714:	f6 01       	movw	r30, r12
    1716:	61 91       	ld	r22, Z+
    1718:	71 91       	ld	r23, Z+
    171a:	6f 01       	movw	r12, r30
    171c:	08 e0       	ldi	r16, 0x08	; 8
    171e:	10 e0       	ldi	r17, 0x00	; 0
    1720:	21 e0       	ldi	r18, 0x01	; 1
    1722:	30 e0       	ldi	r19, 0x00	; 0
    1724:	8a e1       	ldi	r24, 0x1A	; 26
    1726:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1728:	fd d5       	rcall	.+3066   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    172a:	4a 89       	ldd	r20, Y+18	; 0x12
    172c:	5b 89       	ldd	r21, Y+19	; 0x13
    172e:	41 50       	subi	r20, 0x01	; 1
    1730:	51 09       	sbc	r21, r1
    1732:	f5 01       	movw	r30, r10
    1734:	60 81       	ld	r22, Z
    1736:	71 81       	ldd	r23, Z+1	; 0x01
    1738:	21 e0       	ldi	r18, 0x01	; 1
    173a:	30 e0       	ldi	r19, 0x00	; 0
    173c:	8a e1       	ldi	r24, 0x1A	; 26
    173e:	94 e0       	ldi	r25, 0x04	; 4
    1740:	f1 d5       	rcall	.+3042   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 5:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1742:	ff ef       	ldi	r31, 0xFF	; 255
    1744:	ef 1a       	sub	r14, r31
    1746:	ff 0a       	sbc	r15, r31
    1748:	8c 81       	ldd	r24, Y+4	; 0x04
    174a:	9d 81       	ldd	r25, Y+5	; 0x05
    174c:	e8 16       	cp	r14, r24
    174e:	f9 06       	cpc	r15, r25
    1750:	e4 f2       	brlt	.-72     	; 0x170a <_Z5checkv+0x40a>
    1752:	ed c0       	rjmp	.+474    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 6:
			{
    			 pointer++;
    1754:	e4 e0       	ldi	r30, 0x04	; 4
    1756:	f4 e0       	ldi	r31, 0x04	; 4
    1758:	84 81       	ldd	r24, Z+4	; 0x04
    175a:	95 81       	ldd	r25, Z+5	; 0x05
    175c:	01 96       	adiw	r24, 0x01	; 1
    175e:	95 83       	std	Z+5, r25	; 0x05
    1760:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    1762:	18 16       	cp	r1, r24
    1764:	19 06       	cpc	r1, r25
    1766:	0c f0       	brlt	.+2      	; 0x176a <_Z5checkv+0x46a>
    1768:	e2 c0       	rjmp	.+452    	; 0x192e <_Z5checkv+0x62e>
    176a:	0f 2e       	mov	r0, r31
    176c:	fc e0       	ldi	r31, 0x0C	; 12
    176e:	cf 2e       	mov	r12, r31
    1770:	f4 e0       	ldi	r31, 0x04	; 4
    1772:	df 2e       	mov	r13, r31
    1774:	f0 2d       	mov	r31, r0
    1776:	e1 2c       	mov	r14, r1
    1778:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    177a:	ef 01       	movw	r28, r30
    177c:	56 01       	movw	r10, r12
    177e:	4a 89       	ldd	r20, Y+18	; 0x12
    1780:	5b 89       	ldd	r21, Y+19	; 0x13
    1782:	4e 5f       	subi	r20, 0xFE	; 254
    1784:	5f 4f       	sbci	r21, 0xFF	; 255
    1786:	f6 01       	movw	r30, r12
    1788:	61 91       	ld	r22, Z+
    178a:	71 91       	ld	r23, Z+
    178c:	6f 01       	movw	r12, r30
    178e:	08 e0       	ldi	r16, 0x08	; 8
    1790:	10 e0       	ldi	r17, 0x00	; 0
    1792:	21 e0       	ldi	r18, 0x01	; 1
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	8a e1       	ldi	r24, 0x1A	; 26
    1798:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    179a:	c4 d5       	rcall	.+2952   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    179c:	4a 89       	ldd	r20, Y+18	; 0x12
    179e:	5b 89       	ldd	r21, Y+19	; 0x13
    17a0:	41 50       	subi	r20, 0x01	; 1
    17a2:	51 09       	sbc	r21, r1
    17a4:	f5 01       	movw	r30, r10
    17a6:	60 81       	ld	r22, Z
    17a8:	71 81       	ldd	r23, Z+1	; 0x01
    17aa:	21 e0       	ldi	r18, 0x01	; 1
    17ac:	30 e0       	ldi	r19, 0x00	; 0
    17ae:	8a e1       	ldi	r24, 0x1A	; 26
    17b0:	94 e0       	ldi	r25, 0x04	; 4
    17b2:	b8 d5       	rcall	.+2928   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 6:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    17b4:	ff ef       	ldi	r31, 0xFF	; 255
    17b6:	ef 1a       	sub	r14, r31
    17b8:	ff 0a       	sbc	r15, r31
    17ba:	8c 81       	ldd	r24, Y+4	; 0x04
    17bc:	9d 81       	ldd	r25, Y+5	; 0x05
    17be:	e8 16       	cp	r14, r24
    17c0:	f9 06       	cpc	r15, r25
    17c2:	e4 f2       	brlt	.-72     	; 0x177c <_Z5checkv+0x47c>
    17c4:	b4 c0       	rjmp	.+360    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 7:
			{
    			 pointer++;
    17c6:	e4 e0       	ldi	r30, 0x04	; 4
    17c8:	f4 e0       	ldi	r31, 0x04	; 4
    17ca:	84 81       	ldd	r24, Z+4	; 0x04
    17cc:	95 81       	ldd	r25, Z+5	; 0x05
    17ce:	01 96       	adiw	r24, 0x01	; 1
    17d0:	95 83       	std	Z+5, r25	; 0x05
    17d2:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    17d4:	18 16       	cp	r1, r24
    17d6:	19 06       	cpc	r1, r25
    17d8:	0c f0       	brlt	.+2      	; 0x17dc <_Z5checkv+0x4dc>
    17da:	a9 c0       	rjmp	.+338    	; 0x192e <_Z5checkv+0x62e>
    17dc:	0f 2e       	mov	r0, r31
    17de:	fc e0       	ldi	r31, 0x0C	; 12
    17e0:	cf 2e       	mov	r12, r31
    17e2:	f4 e0       	ldi	r31, 0x04	; 4
    17e4:	df 2e       	mov	r13, r31
    17e6:	f0 2d       	mov	r31, r0
    17e8:	e1 2c       	mov	r14, r1
    17ea:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    17ec:	ef 01       	movw	r28, r30
    17ee:	56 01       	movw	r10, r12
    17f0:	4a 89       	ldd	r20, Y+18	; 0x12
    17f2:	5b 89       	ldd	r21, Y+19	; 0x13
    17f4:	4e 5f       	subi	r20, 0xFE	; 254
    17f6:	5f 4f       	sbci	r21, 0xFF	; 255
    17f8:	f6 01       	movw	r30, r12
    17fa:	61 91       	ld	r22, Z+
    17fc:	71 91       	ld	r23, Z+
    17fe:	6f 01       	movw	r12, r30
    1800:	08 e0       	ldi	r16, 0x08	; 8
    1802:	10 e0       	ldi	r17, 0x00	; 0
    1804:	21 e0       	ldi	r18, 0x01	; 1
    1806:	30 e0       	ldi	r19, 0x00	; 0
    1808:	8a e1       	ldi	r24, 0x1A	; 26
    180a:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    180c:	8b d5       	rcall	.+2838   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    180e:	4a 89       	ldd	r20, Y+18	; 0x12
    1810:	5b 89       	ldd	r21, Y+19	; 0x13
    1812:	41 50       	subi	r20, 0x01	; 1
    1814:	51 09       	sbc	r21, r1
    1816:	f5 01       	movw	r30, r10
    1818:	60 81       	ld	r22, Z
    181a:	71 81       	ldd	r23, Z+1	; 0x01
    181c:	21 e0       	ldi	r18, 0x01	; 1
    181e:	30 e0       	ldi	r19, 0x00	; 0
    1820:	8a e1       	ldi	r24, 0x1A	; 26
    1822:	94 e0       	ldi	r25, 0x04	; 4
    1824:	7f d5       	rcall	.+2814   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 7:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1826:	ff ef       	ldi	r31, 0xFF	; 255
    1828:	ef 1a       	sub	r14, r31
    182a:	ff 0a       	sbc	r15, r31
    182c:	8c 81       	ldd	r24, Y+4	; 0x04
    182e:	9d 81       	ldd	r25, Y+5	; 0x05
    1830:	e8 16       	cp	r14, r24
    1832:	f9 06       	cpc	r15, r25
    1834:	e4 f2       	brlt	.-72     	; 0x17ee <_Z5checkv+0x4ee>
    1836:	7b c0       	rjmp	.+246    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 8:
			{
    			 pointer++;
    1838:	e4 e0       	ldi	r30, 0x04	; 4
    183a:	f4 e0       	ldi	r31, 0x04	; 4
    183c:	84 81       	ldd	r24, Z+4	; 0x04
    183e:	95 81       	ldd	r25, Z+5	; 0x05
    1840:	01 96       	adiw	r24, 0x01	; 1
    1842:	95 83       	std	Z+5, r25	; 0x05
    1844:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    1846:	18 16       	cp	r1, r24
    1848:	19 06       	cpc	r1, r25
    184a:	0c f0       	brlt	.+2      	; 0x184e <_Z5checkv+0x54e>
    184c:	70 c0       	rjmp	.+224    	; 0x192e <_Z5checkv+0x62e>
    184e:	0f 2e       	mov	r0, r31
    1850:	fc e0       	ldi	r31, 0x0C	; 12
    1852:	cf 2e       	mov	r12, r31
    1854:	f4 e0       	ldi	r31, 0x04	; 4
    1856:	df 2e       	mov	r13, r31
    1858:	f0 2d       	mov	r31, r0
    185a:	e1 2c       	mov	r14, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    185c:	f1 2c       	mov	r15, r1
    185e:	ef 01       	movw	r28, r30
    1860:	56 01       	movw	r10, r12
    1862:	4a 89       	ldd	r20, Y+18	; 0x12
    1864:	5b 89       	ldd	r21, Y+19	; 0x13
    1866:	4e 5f       	subi	r20, 0xFE	; 254
    1868:	5f 4f       	sbci	r21, 0xFF	; 255
    186a:	f6 01       	movw	r30, r12
    186c:	61 91       	ld	r22, Z+
    186e:	71 91       	ld	r23, Z+
    1870:	6f 01       	movw	r12, r30
    1872:	08 e0       	ldi	r16, 0x08	; 8
    1874:	10 e0       	ldi	r17, 0x00	; 0
    1876:	21 e0       	ldi	r18, 0x01	; 1
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	8a e1       	ldi	r24, 0x1A	; 26
    187c:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    187e:	52 d5       	rcall	.+2724   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1880:	4a 89       	ldd	r20, Y+18	; 0x12
    1882:	5b 89       	ldd	r21, Y+19	; 0x13
    1884:	41 50       	subi	r20, 0x01	; 1
    1886:	51 09       	sbc	r21, r1
    1888:	f5 01       	movw	r30, r10
    188a:	60 81       	ld	r22, Z
    188c:	71 81       	ldd	r23, Z+1	; 0x01
    188e:	21 e0       	ldi	r18, 0x01	; 1
    1890:	30 e0       	ldi	r19, 0x00	; 0
    1892:	8a e1       	ldi	r24, 0x1A	; 26
    1894:	94 e0       	ldi	r25, 0x04	; 4
    1896:	46 d5       	rcall	.+2700   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 8:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1898:	ff ef       	ldi	r31, 0xFF	; 255
    189a:	ef 1a       	sub	r14, r31
    189c:	ff 0a       	sbc	r15, r31
    189e:	8c 81       	ldd	r24, Y+4	; 0x04
    18a0:	9d 81       	ldd	r25, Y+5	; 0x05
    18a2:	e8 16       	cp	r14, r24
    18a4:	f9 06       	cpc	r15, r25
    18a6:	e4 f2       	brlt	.-72     	; 0x1860 <_Z5checkv+0x560>
    18a8:	42 c0       	rjmp	.+132    	; 0x192e <_Z5checkv+0x62e>
    			 }
    			 break;
			}
			case 9:
			{
    			 pointer++;
    18aa:	e4 e0       	ldi	r30, 0x04	; 4
    18ac:	f4 e0       	ldi	r31, 0x04	; 4
    18ae:	84 81       	ldd	r24, Z+4	; 0x04
    18b0:	95 81       	ldd	r25, Z+5	; 0x05
    18b2:	01 96       	adiw	r24, 0x01	; 1
    18b4:	95 83       	std	Z+5, r25	; 0x05
    18b6:	84 83       	std	Z+4, r24	; 0x04
				for(int i=0;i<pointer;i++)
    18b8:	18 16       	cp	r1, r24
    18ba:	19 06       	cpc	r1, r25
    18bc:	c4 f5       	brge	.+112    	; 0x192e <_Z5checkv+0x62e>
    18be:	0f 2e       	mov	r0, r31
    18c0:	fc e0       	ldi	r31, 0x0C	; 12
    18c2:	cf 2e       	mov	r12, r31
    18c4:	f4 e0       	ldi	r31, 0x04	; 4
    18c6:	df 2e       	mov	r13, r31
    18c8:	f0 2d       	mov	r31, r0
    18ca:	e1 2c       	mov	r14, r1
				{
					oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    18cc:	f1 2c       	mov	r15, r1
    18ce:	ef 01       	movw	r28, r30
    18d0:	56 01       	movw	r10, r12
    18d2:	4a 89       	ldd	r20, Y+18	; 0x12
    18d4:	5b 89       	ldd	r21, Y+19	; 0x13
    18d6:	4e 5f       	subi	r20, 0xFE	; 254
    18d8:	5f 4f       	sbci	r21, 0xFF	; 255
    18da:	f6 01       	movw	r30, r12
    18dc:	61 91       	ld	r22, Z+
    18de:	71 91       	ld	r23, Z+
    18e0:	6f 01       	movw	r12, r30
    18e2:	08 e0       	ldi	r16, 0x08	; 8
    18e4:	10 e0       	ldi	r17, 0x00	; 0
    18e6:	21 e0       	ldi	r18, 0x01	; 1
    18e8:	30 e0       	ldi	r19, 0x00	; 0
    18ea:	8a e1       	ldi	r24, 0x1A	; 26
    18ec:	94 e0       	ldi	r25, 0x04	; 4
					oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    18ee:	1a d5       	rcall	.+2612   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    18f0:	4a 89       	ldd	r20, Y+18	; 0x12
    18f2:	5b 89       	ldd	r21, Y+19	; 0x13
    18f4:	41 50       	subi	r20, 0x01	; 1
    18f6:	51 09       	sbc	r21, r1
    18f8:	f5 01       	movw	r30, r10
    18fa:	60 81       	ld	r22, Z
    18fc:	71 81       	ldd	r23, Z+1	; 0x01
    18fe:	21 e0       	ldi	r18, 0x01	; 1
    1900:	30 e0       	ldi	r19, 0x00	; 0
    1902:	8a e1       	ldi	r24, 0x1A	; 26
    1904:	94 e0       	ldi	r25, 0x04	; 4
    1906:	0e d5       	rcall	.+2588   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 9:
			{
    			 pointer++;
				for(int i=0;i<pointer;i++)
    1908:	ff ef       	ldi	r31, 0xFF	; 255
    190a:	ef 1a       	sub	r14, r31
    190c:	ff 0a       	sbc	r15, r31
    190e:	8c 81       	ldd	r24, Y+4	; 0x04
    1910:	9d 81       	ldd	r25, Y+5	; 0x05
    1912:	e8 16       	cp	r14, r24
    1914:	f9 06       	cpc	r15, r25
    1916:	e4 f2       	brlt	.-72     	; 0x18d0 <_Z5checkv+0x5d0>
    1918:	0a c0       	rjmp	.+20     	; 0x192e <_Z5checkv+0x62e>
				}
				break;
			}
			case 10:
			{
				 back();
    191a:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <passw_menu>
    191e:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <passw_menu+0x1>
    1922:	04 84       	ldd	r0, Z+12	; 0x0c
    1924:	f5 85       	ldd	r31, Z+13	; 0x0d
    1926:	e0 2d       	mov	r30, r0
    1928:	84 e0       	ldi	r24, 0x04	; 4
    192a:	94 e0       	ldi	r25, 0x04	; 4
    192c:	09 95       	icall
				break;
			}
		}
		     if(pointer>PASSWORD_MENU_POINER_COUNT) {
    192e:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <passw_menu+0x4>
    1932:	90 91 09 04 	lds	r25, 0x0409	; 0x800409 <passw_menu+0x5>
    1936:	05 97       	sbiw	r24, 0x05	; 5
    1938:	84 f0       	brlt	.+32     	; 0x195a <_Z5checkv+0x65a>
				 
				Main_Menu_Status=true;
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=false;
    1940:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <Password_Menu_Status>
				close();
    1944:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <passw_menu>
    1948:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <passw_menu+0x1>
    194c:	04 80       	ldd	r0, Z+4	; 0x04
    194e:	f5 81       	ldd	r31, Z+5	; 0x05
    1950:	e0 2d       	mov	r30, r0
    1952:	84 e0       	ldi	r24, 0x04	; 4
    1954:	94 e0       	ldi	r25, 0x04	; 4
    1956:	09 95       	icall
    1958:	7c c3       	rjmp	.+1784   	; 0x2052 <_Z5checkv+0xd52>
				 }
			 else
			 {
				 symbol_pointer=0;
    195a:	e4 e0       	ldi	r30, 0x04	; 4
    195c:	f4 e0       	ldi	r31, 0x04	; 4
    195e:	17 82       	std	Z+7, r1	; 0x07
    1960:	16 82       	std	Z+6, r1	; 0x06
				 actions();	 
    1962:	01 90       	ld	r0, Z+
    1964:	f0 81       	ld	r31, Z
    1966:	e0 2d       	mov	r30, r0
    1968:	00 88       	ldd	r0, Z+16	; 0x10
    196a:	f1 89       	ldd	r31, Z+17	; 0x11
    196c:	e0 2d       	mov	r30, r0
    196e:	84 e0       	ldi	r24, 0x04	; 4
    1970:	94 e0       	ldi	r25, 0x04	; 4
    1972:	09 95       	icall
    1974:	6e c3       	rjmp	.+1756   	; 0x2052 <_Z5checkv+0xd52>
		if (Password_Menu_Status)
		{
			passw_menu.choise();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    1976:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    197a:	88 23       	and	r24, r24
    197c:	09 f4       	brne	.+2      	; 0x1980 <_Z5checkv+0x680>
    197e:	69 c3       	rjmp	.+1746   	; 0x2052 <_Z5checkv+0xd52>
		actions();
	};
	
	void choise()override
	{
		switch(pointer)
    1980:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <menu+0x4>
    1984:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <menu+0x5>
    1988:	89 2b       	or	r24, r25
    198a:	09 f0       	breq	.+2      	; 0x198e <_Z5checkv+0x68e>
    198c:	62 c3       	rjmp	.+1732   	; 0x2052 <_Z5checkv+0xd52>
		{
			case 0:
			{
			    Main_Menu_Status=false;
    198e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=true;
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <Password_Menu_Status>
				close();
    1998:	e0 91 fe 03 	lds	r30, 0x03FE	; 0x8003fe <menu>
    199c:	f0 91 ff 03 	lds	r31, 0x03FF	; 0x8003ff <menu+0x1>
    19a0:	04 80       	ldd	r0, Z+4	; 0x04
    19a2:	f5 81       	ldd	r31, Z+5	; 0x05
    19a4:	e0 2d       	mov	r30, r0
    19a6:	8e ef       	ldi	r24, 0xFE	; 254
    19a8:	93 e0       	ldi	r25, 0x03	; 3
    19aa:	09 95       	icall
    19ac:	52 c3       	rjmp	.+1700   	; 0x2052 <_Z5checkv+0xd52>
			menu.choise();
			//menu.refresh();
		}
		
	}
	else if(!btn0 & !btn1 & btn2 & !btn3 & !btn12 & !btn03)
    19ae:	3e 23       	and	r19, r30
    19b0:	89 2f       	mov	r24, r25
    19b2:	84 23       	and	r24, r20
    19b4:	28 23       	and	r18, r24
    19b6:	23 23       	and	r18, r19
    19b8:	a2 17       	cp	r26, r18
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    19ba:	d8 f4       	brcc	.+54     	; 0x19f2 <_Z5checkv+0x6f2>
    19bc:	08 e0       	ldi	r16, 0x08	; 8
    19be:	10 e0       	ldi	r17, 0x00	; 0
    19c0:	21 e0       	ldi	r18, 0x01	; 1
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	40 e0       	ldi	r20, 0x00	; 0
    19c6:	50 e0       	ldi	r21, 0x00	; 0
    19c8:	60 e0       	ldi	r22, 0x00	; 0
    19ca:	70 e0       	ldi	r23, 0x00	; 0
    19cc:	8a e1       	ldi	r24, 0x1A	; 26
    19ce:	94 e0       	ldi	r25, 0x04	; 4
		oled.OLED_Write_To_Bufer(0,0,1,8,two);
    19d0:	a9 d4       	rcall	.+2386   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    19d2:	0f 2e       	mov	r0, r31
    19d4:	f9 ea       	ldi	r31, 0xA9	; 169
    19d6:	ef 2e       	mov	r14, r31
    19d8:	f3 e0       	ldi	r31, 0x03	; 3
    19da:	ff 2e       	mov	r15, r31
    19dc:	f0 2d       	mov	r31, r0
    19de:	21 e0       	ldi	r18, 0x01	; 1
    19e0:	30 e0       	ldi	r19, 0x00	; 0
    19e2:	40 e0       	ldi	r20, 0x00	; 0
    19e4:	50 e0       	ldi	r21, 0x00	; 0
    19e6:	60 e0       	ldi	r22, 0x00	; 0
    19e8:	70 e0       	ldi	r23, 0x00	; 0
    19ea:	8a e1       	ldi	r24, 0x1A	; 26
    19ec:	94 e0       	ldi	r25, 0x04	; 4
    19ee:	e9 d4       	rcall	.+2514   	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		{
			
			
		}
	}
	else if(!btn0 & !btn1 & !btn2 & btn3 & !btn12 & !btn03)
    19f0:	30 c3       	rjmp	.+1632   	; 0x2052 <_Z5checkv+0xd52>
    19f2:	5b 23       	and	r21, r27
    19f4:	54 23       	and	r21, r20
    19f6:	35 23       	and	r19, r21
    19f8:	a3 17       	cp	r26, r19
    19fa:	08 f0       	brcs	.+2      	; 0x19fe <_Z5checkv+0x6fe>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    19fc:	5b c0       	rjmp	.+182    	; 0x1ab4 <_Z5checkv+0x7b4>
    19fe:	08 e0       	ldi	r16, 0x08	; 8
    1a00:	10 e0       	ldi	r17, 0x00	; 0
    1a02:	21 e0       	ldi	r18, 0x01	; 1
    1a04:	30 e0       	ldi	r19, 0x00	; 0
    1a06:	40 e0       	ldi	r20, 0x00	; 0
    1a08:	50 e0       	ldi	r21, 0x00	; 0
    1a0a:	60 e0       	ldi	r22, 0x00	; 0
    1a0c:	70 e0       	ldi	r23, 0x00	; 0
    1a0e:	8a e1       	ldi	r24, 0x1A	; 26
    1a10:	94 e0       	ldi	r25, 0x04	; 4
		oled.OLED_Write_To_Bufer(0,0,1,8,three);
    1a12:	88 d4       	rcall	.+2320   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1a14:	0f 2e       	mov	r0, r31
    1a16:	f1 ea       	ldi	r31, 0xA1	; 161
    1a18:	ef 2e       	mov	r14, r31
    1a1a:	f3 e0       	ldi	r31, 0x03	; 3
    1a1c:	ff 2e       	mov	r15, r31
    1a1e:	f0 2d       	mov	r31, r0
    1a20:	21 e0       	ldi	r18, 0x01	; 1
    1a22:	30 e0       	ldi	r19, 0x00	; 0
    1a24:	40 e0       	ldi	r20, 0x00	; 0
    1a26:	50 e0       	ldi	r21, 0x00	; 0
    1a28:	60 e0       	ldi	r22, 0x00	; 0
    1a2a:	70 e0       	ldi	r23, 0x00	; 0
    1a2c:	8a e1       	ldi	r24, 0x1A	; 26
    1a2e:	94 e0       	ldi	r25, 0x04	; 4
    1a30:	c8 d4       	rcall	.+2448   	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		if (Password_Menu_Status)
    1a32:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <Password_Menu_Status>
    1a36:	88 23       	and	r24, r24
    1a38:	e1 f0       	breq	.+56     	; 0x1a72 <_Z5checkv+0x772>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
    1a3a:	80 91 0a 04 	lds	r24, 0x040A	; 0x80040a <passw_menu+0x6>
    1a3e:	90 91 0b 04 	lds	r25, 0x040B	; 0x80040b <passw_menu+0x7>
    1a42:	01 96       	adiw	r24, 0x01	; 1
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
    1a44:	8b 30       	cpi	r24, 0x0B	; 11
    1a46:	91 05       	cpc	r25, r1
    1a48:	2c f4       	brge	.+10     	; 0x1a54 <_Z5checkv+0x754>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
    1a4a:	90 93 0b 04 	sts	0x040B, r25	; 0x80040b <passw_menu+0x7>
    1a4e:	80 93 0a 04 	sts	0x040A, r24	; 0x80040a <passw_menu+0x6>
    1a52:	04 c0       	rjmp	.+8      	; 0x1a5c <_Z5checkv+0x75c>
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
    1a54:	10 92 0b 04 	sts	0x040B, r1	; 0x80040b <passw_menu+0x7>
    1a58:	10 92 0a 04 	sts	0x040A, r1	; 0x80040a <passw_menu+0x6>
		actions();
    1a5c:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <passw_menu>
    1a60:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <passw_menu+0x1>
    1a64:	00 88       	ldd	r0, Z+16	; 0x10
    1a66:	f1 89       	ldd	r31, Z+17	; 0x11
    1a68:	e0 2d       	mov	r30, r0
    1a6a:	84 e0       	ldi	r24, 0x04	; 4
    1a6c:	94 e0       	ldi	r25, 0x04	; 4
    1a6e:	09 95       	icall
    1a70:	f0 c2       	rjmp	.+1504   	; 0x2052 <_Z5checkv+0xd52>
		if (Password_Menu_Status)
		{
			passw_menu.next();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    1a72:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    1a76:	88 23       	and	r24, r24
    1a78:	09 f4       	brne	.+2      	; 0x1a7c <_Z5checkv+0x77c>
    1a7a:	eb c2       	rjmp	.+1494   	; 0x2052 <_Z5checkv+0xd52>

	};
	
	void next()override
	{
		pointer++;
    1a7c:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <menu+0x4>
    1a80:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <menu+0x5>
    1a84:	01 96       	adiw	r24, 0x01	; 1
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
    1a86:	83 30       	cpi	r24, 0x03	; 3
    1a88:	91 05       	cpc	r25, r1
    1a8a:	2c f4       	brge	.+10     	; 0x1a96 <_Z5checkv+0x796>

	};
	
	void next()override
	{
		pointer++;
    1a8c:	90 93 03 04 	sts	0x0403, r25	; 0x800403 <menu+0x5>
    1a90:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <menu+0x4>
    1a94:	04 c0       	rjmp	.+8      	; 0x1a9e <_Z5checkv+0x79e>
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
    1a96:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <menu+0x5>
    1a9a:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <menu+0x4>
		actions();
    1a9e:	e0 91 fe 03 	lds	r30, 0x03FE	; 0x8003fe <menu>
    1aa2:	f0 91 ff 03 	lds	r31, 0x03FF	; 0x8003ff <menu+0x1>
    1aa6:	00 88       	ldd	r0, Z+16	; 0x10
    1aa8:	f1 89       	ldd	r31, Z+17	; 0x11
    1aaa:	e0 2d       	mov	r30, r0
    1aac:	8e ef       	ldi	r24, 0xFE	; 254
    1aae:	93 e0       	ldi	r25, 0x03	; 3
    1ab0:	09 95       	icall
		{
			menu.next();
			//menu.refresh();
		}
	}
	else if(!btn0  & !btn3 & btn12 & !btn03)
    1ab2:	cf c2       	rjmp	.+1438   	; 0x2052 <_Z5checkv+0xd52>
    1ab4:	96 23       	and	r25, r22
    1ab6:	9e 23       	and	r25, r30
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    1ab8:	a9 17       	cp	r26, r25
    1aba:	d8 f4       	brcc	.+54     	; 0x1af2 <_Z5checkv+0x7f2>
    1abc:	08 e0       	ldi	r16, 0x08	; 8
    1abe:	10 e0       	ldi	r17, 0x00	; 0
    1ac0:	21 e0       	ldi	r18, 0x01	; 1
    1ac2:	30 e0       	ldi	r19, 0x00	; 0
    1ac4:	40 e0       	ldi	r20, 0x00	; 0
    1ac6:	50 e0       	ldi	r21, 0x00	; 0
    1ac8:	60 e0       	ldi	r22, 0x00	; 0
    1aca:	70 e0       	ldi	r23, 0x00	; 0
    1acc:	8a e1       	ldi	r24, 0x1A	; 26
    1ace:	94 e0       	ldi	r25, 0x04	; 4
		oled.OLED_Write_To_Bufer(0,0,1,8,four);
    1ad0:	29 d4       	rcall	.+2130   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1ad2:	0f 2e       	mov	r0, r31
    1ad4:	f9 e9       	ldi	r31, 0x99	; 153
    1ad6:	ef 2e       	mov	r14, r31
    1ad8:	f3 e0       	ldi	r31, 0x03	; 3
    1ada:	ff 2e       	mov	r15, r31
    1adc:	f0 2d       	mov	r31, r0
    1ade:	21 e0       	ldi	r18, 0x01	; 1
    1ae0:	30 e0       	ldi	r19, 0x00	; 0
    1ae2:	40 e0       	ldi	r20, 0x00	; 0
    1ae4:	50 e0       	ldi	r21, 0x00	; 0
    1ae6:	60 e0       	ldi	r22, 0x00	; 0
    1ae8:	70 e0       	ldi	r23, 0x00	; 0
    1aea:	8a e1       	ldi	r24, 0x1A	; 26
    1aec:	94 e0       	ldi	r25, 0x04	; 4
    1aee:	69 d4       	rcall	.+2258   	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		else if (Main_Menu_Status)
		{
			
		}
	}
	else if(!btn1 & !btn2 & !btn12 & btn03)
    1af0:	b0 c2       	rjmp	.+1376   	; 0x2052 <_Z5checkv+0xd52>
    1af2:	fa 23       	and	r31, r26
    1af4:	09 f4       	brne	.+2      	; 0x1af8 <_Z5checkv+0x7f8>
    1af6:	ad c2       	rjmp	.+1370   	; 0x2052 <_Z5checkv+0xd52>
    1af8:	44 23       	and	r20, r20
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    1afa:	09 f4       	brne	.+2      	; 0x1afe <_Z5checkv+0x7fe>
    1afc:	aa c2       	rjmp	.+1364   	; 0x2052 <_Z5checkv+0xd52>
    1afe:	08 e0       	ldi	r16, 0x08	; 8
    1b00:	10 e0       	ldi	r17, 0x00	; 0
    1b02:	21 e0       	ldi	r18, 0x01	; 1
    1b04:	30 e0       	ldi	r19, 0x00	; 0
    1b06:	40 e0       	ldi	r20, 0x00	; 0
    1b08:	50 e0       	ldi	r21, 0x00	; 0
    1b0a:	60 e0       	ldi	r22, 0x00	; 0
    1b0c:	70 e0       	ldi	r23, 0x00	; 0
    1b0e:	8a e1       	ldi	r24, 0x1A	; 26
    1b10:	94 e0       	ldi	r25, 0x04	; 4
		oled.OLED_Write_To_Bufer(0,0,1,8,five);
    1b12:	08 d4       	rcall	.+2064   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1b14:	0f 2e       	mov	r0, r31
    1b16:	f1 e9       	ldi	r31, 0x91	; 145
    1b18:	ef 2e       	mov	r14, r31
    1b1a:	f3 e0       	ldi	r31, 0x03	; 3
    1b1c:	ff 2e       	mov	r15, r31
    1b1e:	f0 2d       	mov	r31, r0
    1b20:	21 e0       	ldi	r18, 0x01	; 1
    1b22:	30 e0       	ldi	r19, 0x00	; 0
    1b24:	40 e0       	ldi	r20, 0x00	; 0
    1b26:	50 e0       	ldi	r21, 0x00	; 0
    1b28:	60 e0       	ldi	r22, 0x00	; 0
    1b2a:	70 e0       	ldi	r23, 0x00	; 0
    1b2c:	8a e1       	ldi	r24, 0x1A	; 26
    1b2e:	94 e0       	ldi	r25, 0x04	; 4
		if (Password_Menu_Status)
    1b30:	48 d4       	rcall	.+2192   	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    1b32:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <Password_Menu_Status>
    1b36:	88 23       	and	r24, r24
    1b38:	09 f4       	brne	.+2      	; 0x1b3c <_Z5checkv+0x83c>
		actions();
	};
	
	void choise()override
	{
		switch(symbol_pointer)
    1b3a:	72 c2       	rjmp	.+1252   	; 0x2020 <_Z5checkv+0xd20>
    1b3c:	e0 91 0a 04 	lds	r30, 0x040A	; 0x80040a <passw_menu+0x6>
    1b40:	f0 91 0b 04 	lds	r31, 0x040B	; 0x80040b <passw_menu+0x7>
    1b44:	eb 30       	cpi	r30, 0x0B	; 11
    1b46:	f1 05       	cpc	r31, r1
    1b48:	08 f0       	brcs	.+2      	; 0x1b4c <_Z5checkv+0x84c>
    1b4a:	46 c2       	rjmp	.+1164   	; 0x1fd8 <_Z5checkv+0xcd8>
    1b4c:	e9 59       	subi	r30, 0x99	; 153
    1b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b50:	00 c5       	rjmp	.+2560   	; 0x2552 <__tablejump2__>
		{
			case 0:
			{
    			 pointer++;
    1b52:	e4 e0       	ldi	r30, 0x04	; 4
    1b54:	f4 e0       	ldi	r31, 0x04	; 4
    1b56:	84 81       	ldd	r24, Z+4	; 0x04
    1b58:	95 81       	ldd	r25, Z+5	; 0x05
    1b5a:	01 96       	adiw	r24, 0x01	; 1
    1b5c:	95 83       	std	Z+5, r25	; 0x05
    			 for(int i=0;i<pointer;i++)
    1b5e:	84 83       	std	Z+4, r24	; 0x04
    1b60:	18 16       	cp	r1, r24
    1b62:	19 06       	cpc	r1, r25
    1b64:	0c f0       	brlt	.+2      	; 0x1b68 <_Z5checkv+0x868>
    1b66:	38 c2       	rjmp	.+1136   	; 0x1fd8 <_Z5checkv+0xcd8>
    1b68:	0f 2e       	mov	r0, r31
    1b6a:	fc e0       	ldi	r31, 0x0C	; 12
    1b6c:	cf 2e       	mov	r12, r31
    1b6e:	f4 e0       	ldi	r31, 0x04	; 4
    1b70:	df 2e       	mov	r13, r31
    1b72:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1b74:	e1 2c       	mov	r14, r1
    1b76:	f1 2c       	mov	r15, r1
    1b78:	ef 01       	movw	r28, r30
    1b7a:	56 01       	movw	r10, r12
    1b7c:	4a 89       	ldd	r20, Y+18	; 0x12
    1b7e:	5b 89       	ldd	r21, Y+19	; 0x13
    1b80:	4e 5f       	subi	r20, 0xFE	; 254
    1b82:	5f 4f       	sbci	r21, 0xFF	; 255
    1b84:	f6 01       	movw	r30, r12
    1b86:	61 91       	ld	r22, Z+
    1b88:	71 91       	ld	r23, Z+
    1b8a:	6f 01       	movw	r12, r30
    1b8c:	08 e0       	ldi	r16, 0x08	; 8
    1b8e:	10 e0       	ldi	r17, 0x00	; 0
    1b90:	21 e0       	ldi	r18, 0x01	; 1
    1b92:	30 e0       	ldi	r19, 0x00	; 0
    1b94:	8a e1       	ldi	r24, 0x1A	; 26
    1b96:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1b98:	c5 d3       	rcall	.+1930   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1b9a:	4a 89       	ldd	r20, Y+18	; 0x12
    1b9c:	5b 89       	ldd	r21, Y+19	; 0x13
    1b9e:	41 50       	subi	r20, 0x01	; 1
    1ba0:	51 09       	sbc	r21, r1
    1ba2:	f5 01       	movw	r30, r10
    1ba4:	60 81       	ld	r22, Z
    1ba6:	71 81       	ldd	r23, Z+1	; 0x01
    1ba8:	21 e0       	ldi	r18, 0x01	; 1
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	8a e1       	ldi	r24, 0x1A	; 26
    1bae:	94 e0       	ldi	r25, 0x04	; 4
    1bb0:	b9 d3       	rcall	.+1906   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		switch(symbol_pointer)
		{
			case 0:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1bb2:	ff ef       	ldi	r31, 0xFF	; 255
    1bb4:	ef 1a       	sub	r14, r31
    1bb6:	ff 0a       	sbc	r15, r31
    1bb8:	8c 81       	ldd	r24, Y+4	; 0x04
    1bba:	9d 81       	ldd	r25, Y+5	; 0x05
    1bbc:	e8 16       	cp	r14, r24
    1bbe:	f9 06       	cpc	r15, r25
    1bc0:	e4 f2       	brlt	.-72     	; 0x1b7a <_Z5checkv+0x87a>
    1bc2:	0a c2       	rjmp	.+1044   	; 0x1fd8 <_Z5checkv+0xcd8>
    			 }
    			 break;
			}
			case 1:
			{
    			 pointer++;
    1bc4:	e4 e0       	ldi	r30, 0x04	; 4
    1bc6:	f4 e0       	ldi	r31, 0x04	; 4
    1bc8:	84 81       	ldd	r24, Z+4	; 0x04
    1bca:	95 81       	ldd	r25, Z+5	; 0x05
    1bcc:	01 96       	adiw	r24, 0x01	; 1
    1bce:	95 83       	std	Z+5, r25	; 0x05
    			 for(int i=0;i<pointer;i++)
    1bd0:	84 83       	std	Z+4, r24	; 0x04
    1bd2:	18 16       	cp	r1, r24
    1bd4:	19 06       	cpc	r1, r25
    1bd6:	0c f0       	brlt	.+2      	; 0x1bda <_Z5checkv+0x8da>
    1bd8:	ff c1       	rjmp	.+1022   	; 0x1fd8 <_Z5checkv+0xcd8>
    1bda:	0f 2e       	mov	r0, r31
    1bdc:	fc e0       	ldi	r31, 0x0C	; 12
    1bde:	cf 2e       	mov	r12, r31
    1be0:	f4 e0       	ldi	r31, 0x04	; 4
    1be2:	df 2e       	mov	r13, r31
    1be4:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1be6:	e1 2c       	mov	r14, r1
    1be8:	f1 2c       	mov	r15, r1
    1bea:	ef 01       	movw	r28, r30
    1bec:	56 01       	movw	r10, r12
    1bee:	4a 89       	ldd	r20, Y+18	; 0x12
    1bf0:	5b 89       	ldd	r21, Y+19	; 0x13
    1bf2:	4e 5f       	subi	r20, 0xFE	; 254
    1bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf6:	f6 01       	movw	r30, r12
    1bf8:	61 91       	ld	r22, Z+
    1bfa:	71 91       	ld	r23, Z+
    1bfc:	6f 01       	movw	r12, r30
    1bfe:	08 e0       	ldi	r16, 0x08	; 8
    1c00:	10 e0       	ldi	r17, 0x00	; 0
    1c02:	21 e0       	ldi	r18, 0x01	; 1
    1c04:	30 e0       	ldi	r19, 0x00	; 0
    1c06:	8a e1       	ldi	r24, 0x1A	; 26
    1c08:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1c0a:	8c d3       	rcall	.+1816   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1c0c:	4a 89       	ldd	r20, Y+18	; 0x12
    1c0e:	5b 89       	ldd	r21, Y+19	; 0x13
    1c10:	41 50       	subi	r20, 0x01	; 1
    1c12:	51 09       	sbc	r21, r1
    1c14:	f5 01       	movw	r30, r10
    1c16:	60 81       	ld	r22, Z
    1c18:	71 81       	ldd	r23, Z+1	; 0x01
    1c1a:	21 e0       	ldi	r18, 0x01	; 1
    1c1c:	30 e0       	ldi	r19, 0x00	; 0
    1c1e:	8a e1       	ldi	r24, 0x1A	; 26
    1c20:	94 e0       	ldi	r25, 0x04	; 4
    1c22:	80 d3       	rcall	.+1792   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 1:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1c24:	ff ef       	ldi	r31, 0xFF	; 255
    1c26:	ef 1a       	sub	r14, r31
    1c28:	ff 0a       	sbc	r15, r31
    1c2a:	8c 81       	ldd	r24, Y+4	; 0x04
    1c2c:	9d 81       	ldd	r25, Y+5	; 0x05
    1c2e:	e8 16       	cp	r14, r24
    1c30:	f9 06       	cpc	r15, r25
    1c32:	e4 f2       	brlt	.-72     	; 0x1bec <_Z5checkv+0x8ec>
    1c34:	d1 c1       	rjmp	.+930    	; 0x1fd8 <_Z5checkv+0xcd8>
    			 }
    			 break;
			}
			case 2:
			{
	    			 pointer++;
    1c36:	e4 e0       	ldi	r30, 0x04	; 4
    1c38:	f4 e0       	ldi	r31, 0x04	; 4
    1c3a:	84 81       	ldd	r24, Z+4	; 0x04
    1c3c:	95 81       	ldd	r25, Z+5	; 0x05
    1c3e:	01 96       	adiw	r24, 0x01	; 1
    1c40:	95 83       	std	Z+5, r25	; 0x05
	    			 for(int i=0;i<pointer;i++)
    1c42:	84 83       	std	Z+4, r24	; 0x04
    1c44:	18 16       	cp	r1, r24
    1c46:	19 06       	cpc	r1, r25
    1c48:	0c f0       	brlt	.+2      	; 0x1c4c <_Z5checkv+0x94c>
    1c4a:	c6 c1       	rjmp	.+908    	; 0x1fd8 <_Z5checkv+0xcd8>
    1c4c:	0f 2e       	mov	r0, r31
    1c4e:	fc e0       	ldi	r31, 0x0C	; 12
    1c50:	cf 2e       	mov	r12, r31
    1c52:	f4 e0       	ldi	r31, 0x04	; 4
    1c54:	df 2e       	mov	r13, r31
    1c56:	f0 2d       	mov	r31, r0
	    			 {
		    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1c58:	e1 2c       	mov	r14, r1
    1c5a:	f1 2c       	mov	r15, r1
    1c5c:	ef 01       	movw	r28, r30
    1c5e:	56 01       	movw	r10, r12
    1c60:	4a 89       	ldd	r20, Y+18	; 0x12
    1c62:	5b 89       	ldd	r21, Y+19	; 0x13
    1c64:	4e 5f       	subi	r20, 0xFE	; 254
    1c66:	5f 4f       	sbci	r21, 0xFF	; 255
    1c68:	f6 01       	movw	r30, r12
    1c6a:	61 91       	ld	r22, Z+
    1c6c:	71 91       	ld	r23, Z+
    1c6e:	6f 01       	movw	r12, r30
    1c70:	08 e0       	ldi	r16, 0x08	; 8
    1c72:	10 e0       	ldi	r17, 0x00	; 0
    1c74:	21 e0       	ldi	r18, 0x01	; 1
    1c76:	30 e0       	ldi	r19, 0x00	; 0
    1c78:	8a e1       	ldi	r24, 0x1A	; 26
    1c7a:	94 e0       	ldi	r25, 0x04	; 4
		    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1c7c:	53 d3       	rcall	.+1702   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1c7e:	4a 89       	ldd	r20, Y+18	; 0x12
    1c80:	5b 89       	ldd	r21, Y+19	; 0x13
    1c82:	41 50       	subi	r20, 0x01	; 1
    1c84:	51 09       	sbc	r21, r1
    1c86:	f5 01       	movw	r30, r10
    1c88:	60 81       	ld	r22, Z
    1c8a:	71 81       	ldd	r23, Z+1	; 0x01
    1c8c:	21 e0       	ldi	r18, 0x01	; 1
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	8a e1       	ldi	r24, 0x1A	; 26
    1c92:	94 e0       	ldi	r25, 0x04	; 4
    1c94:	47 d3       	rcall	.+1678   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 2:
			{
	    			 pointer++;
	    			 for(int i=0;i<pointer;i++)
    1c96:	ff ef       	ldi	r31, 0xFF	; 255
    1c98:	ef 1a       	sub	r14, r31
    1c9a:	ff 0a       	sbc	r15, r31
    1c9c:	8c 81       	ldd	r24, Y+4	; 0x04
    1c9e:	9d 81       	ldd	r25, Y+5	; 0x05
    1ca0:	e8 16       	cp	r14, r24
    1ca2:	f9 06       	cpc	r15, r25
    1ca4:	e4 f2       	brlt	.-72     	; 0x1c5e <_Z5checkv+0x95e>
	    			 }
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    1ca6:	98 c1       	rjmp	.+816    	; 0x1fd8 <_Z5checkv+0xcd8>
    1ca8:	e4 e0       	ldi	r30, 0x04	; 4
    1caa:	f4 e0       	ldi	r31, 0x04	; 4
    1cac:	84 81       	ldd	r24, Z+4	; 0x04
    1cae:	95 81       	ldd	r25, Z+5	; 0x05
    1cb0:	01 96       	adiw	r24, 0x01	; 1
    1cb2:	95 83       	std	Z+5, r25	; 0x05
    			 for(int i=0;i<pointer;i++)
    1cb4:	84 83       	std	Z+4, r24	; 0x04
    1cb6:	18 16       	cp	r1, r24
    1cb8:	19 06       	cpc	r1, r25
    1cba:	0c f0       	brlt	.+2      	; 0x1cbe <_Z5checkv+0x9be>
    1cbc:	8d c1       	rjmp	.+794    	; 0x1fd8 <_Z5checkv+0xcd8>
    1cbe:	0f 2e       	mov	r0, r31
    1cc0:	fc e0       	ldi	r31, 0x0C	; 12
    1cc2:	cf 2e       	mov	r12, r31
    1cc4:	f4 e0       	ldi	r31, 0x04	; 4
    1cc6:	df 2e       	mov	r13, r31
    1cc8:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1cca:	e1 2c       	mov	r14, r1
    1ccc:	f1 2c       	mov	r15, r1
    1cce:	ef 01       	movw	r28, r30
    1cd0:	56 01       	movw	r10, r12
    1cd2:	4a 89       	ldd	r20, Y+18	; 0x12
    1cd4:	5b 89       	ldd	r21, Y+19	; 0x13
    1cd6:	4e 5f       	subi	r20, 0xFE	; 254
    1cd8:	5f 4f       	sbci	r21, 0xFF	; 255
    1cda:	f6 01       	movw	r30, r12
    1cdc:	61 91       	ld	r22, Z+
    1cde:	71 91       	ld	r23, Z+
    1ce0:	6f 01       	movw	r12, r30
    1ce2:	08 e0       	ldi	r16, 0x08	; 8
    1ce4:	10 e0       	ldi	r17, 0x00	; 0
    1ce6:	21 e0       	ldi	r18, 0x01	; 1
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	8a e1       	ldi	r24, 0x1A	; 26
    1cec:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1cee:	1a d3       	rcall	.+1588   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1cf0:	4a 89       	ldd	r20, Y+18	; 0x12
    1cf2:	5b 89       	ldd	r21, Y+19	; 0x13
    1cf4:	41 50       	subi	r20, 0x01	; 1
    1cf6:	51 09       	sbc	r21, r1
    1cf8:	f5 01       	movw	r30, r10
    1cfa:	60 81       	ld	r22, Z
    1cfc:	71 81       	ldd	r23, Z+1	; 0x01
    1cfe:	21 e0       	ldi	r18, 0x01	; 1
    1d00:	30 e0       	ldi	r19, 0x00	; 0
    1d02:	8a e1       	ldi	r24, 0x1A	; 26
    1d04:	94 e0       	ldi	r25, 0x04	; 4
    1d06:	0e d3       	rcall	.+1564   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1d08:	ff ef       	ldi	r31, 0xFF	; 255
    1d0a:	ef 1a       	sub	r14, r31
    1d0c:	ff 0a       	sbc	r15, r31
    1d0e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d10:	9d 81       	ldd	r25, Y+5	; 0x05
    1d12:	e8 16       	cp	r14, r24
    1d14:	f9 06       	cpc	r15, r25
    1d16:	e4 f2       	brlt	.-72     	; 0x1cd0 <_Z5checkv+0x9d0>
    			 }
    			 break;
			}
			case 4:
			{
    			 pointer++;
    1d18:	5f c1       	rjmp	.+702    	; 0x1fd8 <_Z5checkv+0xcd8>
    1d1a:	e4 e0       	ldi	r30, 0x04	; 4
    1d1c:	f4 e0       	ldi	r31, 0x04	; 4
    1d1e:	84 81       	ldd	r24, Z+4	; 0x04
    1d20:	95 81       	ldd	r25, Z+5	; 0x05
    1d22:	01 96       	adiw	r24, 0x01	; 1
    1d24:	95 83       	std	Z+5, r25	; 0x05
    			 for(int i=0;i<pointer;i++)
    1d26:	84 83       	std	Z+4, r24	; 0x04
    1d28:	18 16       	cp	r1, r24
    1d2a:	19 06       	cpc	r1, r25
    1d2c:	0c f0       	brlt	.+2      	; 0x1d30 <_Z5checkv+0xa30>
    1d2e:	54 c1       	rjmp	.+680    	; 0x1fd8 <_Z5checkv+0xcd8>
    1d30:	0f 2e       	mov	r0, r31
    1d32:	fc e0       	ldi	r31, 0x0C	; 12
    1d34:	cf 2e       	mov	r12, r31
    1d36:	f4 e0       	ldi	r31, 0x04	; 4
    1d38:	df 2e       	mov	r13, r31
    1d3a:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1d3c:	e1 2c       	mov	r14, r1
    1d3e:	f1 2c       	mov	r15, r1
    1d40:	ef 01       	movw	r28, r30
    1d42:	56 01       	movw	r10, r12
    1d44:	4a 89       	ldd	r20, Y+18	; 0x12
    1d46:	5b 89       	ldd	r21, Y+19	; 0x13
    1d48:	4e 5f       	subi	r20, 0xFE	; 254
    1d4a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d4c:	f6 01       	movw	r30, r12
    1d4e:	61 91       	ld	r22, Z+
    1d50:	71 91       	ld	r23, Z+
    1d52:	6f 01       	movw	r12, r30
    1d54:	08 e0       	ldi	r16, 0x08	; 8
    1d56:	10 e0       	ldi	r17, 0x00	; 0
    1d58:	21 e0       	ldi	r18, 0x01	; 1
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	8a e1       	ldi	r24, 0x1A	; 26
    1d5e:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1d60:	e1 d2       	rcall	.+1474   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1d62:	4a 89       	ldd	r20, Y+18	; 0x12
    1d64:	5b 89       	ldd	r21, Y+19	; 0x13
    1d66:	41 50       	subi	r20, 0x01	; 1
    1d68:	51 09       	sbc	r21, r1
    1d6a:	f5 01       	movw	r30, r10
    1d6c:	60 81       	ld	r22, Z
    1d6e:	71 81       	ldd	r23, Z+1	; 0x01
    1d70:	21 e0       	ldi	r18, 0x01	; 1
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	8a e1       	ldi	r24, 0x1A	; 26
    1d76:	94 e0       	ldi	r25, 0x04	; 4
    1d78:	d5 d2       	rcall	.+1450   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 4:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1d7a:	ff ef       	ldi	r31, 0xFF	; 255
    1d7c:	ef 1a       	sub	r14, r31
    1d7e:	ff 0a       	sbc	r15, r31
    1d80:	8c 81       	ldd	r24, Y+4	; 0x04
    1d82:	9d 81       	ldd	r25, Y+5	; 0x05
    1d84:	e8 16       	cp	r14, r24
    1d86:	f9 06       	cpc	r15, r25
    1d88:	e4 f2       	brlt	.-72     	; 0x1d42 <_Z5checkv+0xa42>
    			 }
    			 break;
			}
			case 5:
			{
    			 pointer++;
    1d8a:	26 c1       	rjmp	.+588    	; 0x1fd8 <_Z5checkv+0xcd8>
    1d8c:	e4 e0       	ldi	r30, 0x04	; 4
    1d8e:	f4 e0       	ldi	r31, 0x04	; 4
    1d90:	84 81       	ldd	r24, Z+4	; 0x04
    1d92:	95 81       	ldd	r25, Z+5	; 0x05
    1d94:	01 96       	adiw	r24, 0x01	; 1
    			 for(int i=0;i<pointer;i++)
    1d96:	95 83       	std	Z+5, r25	; 0x05
    1d98:	84 83       	std	Z+4, r24	; 0x04
    1d9a:	18 16       	cp	r1, r24
    1d9c:	19 06       	cpc	r1, r25
    1d9e:	0c f0       	brlt	.+2      	; 0x1da2 <_Z5checkv+0xaa2>
    1da0:	1b c1       	rjmp	.+566    	; 0x1fd8 <_Z5checkv+0xcd8>
    1da2:	0f 2e       	mov	r0, r31
    1da4:	fc e0       	ldi	r31, 0x0C	; 12
    1da6:	cf 2e       	mov	r12, r31
    1da8:	f4 e0       	ldi	r31, 0x04	; 4
    1daa:	df 2e       	mov	r13, r31
    1dac:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1dae:	e1 2c       	mov	r14, r1
    1db0:	f1 2c       	mov	r15, r1
    1db2:	ef 01       	movw	r28, r30
    1db4:	56 01       	movw	r10, r12
    1db6:	4a 89       	ldd	r20, Y+18	; 0x12
    1db8:	5b 89       	ldd	r21, Y+19	; 0x13
    1dba:	4e 5f       	subi	r20, 0xFE	; 254
    1dbc:	5f 4f       	sbci	r21, 0xFF	; 255
    1dbe:	f6 01       	movw	r30, r12
    1dc0:	61 91       	ld	r22, Z+
    1dc2:	71 91       	ld	r23, Z+
    1dc4:	6f 01       	movw	r12, r30
    1dc6:	08 e0       	ldi	r16, 0x08	; 8
    1dc8:	10 e0       	ldi	r17, 0x00	; 0
    1dca:	21 e0       	ldi	r18, 0x01	; 1
    1dcc:	30 e0       	ldi	r19, 0x00	; 0
    1dce:	8a e1       	ldi	r24, 0x1A	; 26
    1dd0:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1dd2:	a8 d2       	rcall	.+1360   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1dd4:	4a 89       	ldd	r20, Y+18	; 0x12
    1dd6:	5b 89       	ldd	r21, Y+19	; 0x13
    1dd8:	41 50       	subi	r20, 0x01	; 1
    1dda:	51 09       	sbc	r21, r1
    1ddc:	f5 01       	movw	r30, r10
    1dde:	60 81       	ld	r22, Z
    1de0:	71 81       	ldd	r23, Z+1	; 0x01
    1de2:	21 e0       	ldi	r18, 0x01	; 1
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	8a e1       	ldi	r24, 0x1A	; 26
    1de8:	94 e0       	ldi	r25, 0x04	; 4
    1dea:	9c d2       	rcall	.+1336   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 5:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1dec:	ff ef       	ldi	r31, 0xFF	; 255
    1dee:	ef 1a       	sub	r14, r31
    1df0:	ff 0a       	sbc	r15, r31
    1df2:	8c 81       	ldd	r24, Y+4	; 0x04
    1df4:	9d 81       	ldd	r25, Y+5	; 0x05
    1df6:	e8 16       	cp	r14, r24
    1df8:	f9 06       	cpc	r15, r25
    1dfa:	e4 f2       	brlt	.-72     	; 0x1db4 <_Z5checkv+0xab4>
    			 }
    			 break;
			}
			case 6:
			{
    			 pointer++;
    1dfc:	ed c0       	rjmp	.+474    	; 0x1fd8 <_Z5checkv+0xcd8>
    1dfe:	e4 e0       	ldi	r30, 0x04	; 4
    1e00:	f4 e0       	ldi	r31, 0x04	; 4
    1e02:	84 81       	ldd	r24, Z+4	; 0x04
    1e04:	95 81       	ldd	r25, Z+5	; 0x05
    1e06:	01 96       	adiw	r24, 0x01	; 1
    			 for(int i=0;i<pointer;i++)
    1e08:	95 83       	std	Z+5, r25	; 0x05
    1e0a:	84 83       	std	Z+4, r24	; 0x04
    1e0c:	18 16       	cp	r1, r24
    1e0e:	19 06       	cpc	r1, r25
    1e10:	0c f0       	brlt	.+2      	; 0x1e14 <_Z5checkv+0xb14>
    1e12:	e2 c0       	rjmp	.+452    	; 0x1fd8 <_Z5checkv+0xcd8>
    1e14:	0f 2e       	mov	r0, r31
    1e16:	fc e0       	ldi	r31, 0x0C	; 12
    1e18:	cf 2e       	mov	r12, r31
    1e1a:	f4 e0       	ldi	r31, 0x04	; 4
    1e1c:	df 2e       	mov	r13, r31
    1e1e:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1e20:	e1 2c       	mov	r14, r1
    1e22:	f1 2c       	mov	r15, r1
    1e24:	ef 01       	movw	r28, r30
    1e26:	56 01       	movw	r10, r12
    1e28:	4a 89       	ldd	r20, Y+18	; 0x12
    1e2a:	5b 89       	ldd	r21, Y+19	; 0x13
    1e2c:	4e 5f       	subi	r20, 0xFE	; 254
    1e2e:	5f 4f       	sbci	r21, 0xFF	; 255
    1e30:	f6 01       	movw	r30, r12
    1e32:	61 91       	ld	r22, Z+
    1e34:	71 91       	ld	r23, Z+
    1e36:	6f 01       	movw	r12, r30
    1e38:	08 e0       	ldi	r16, 0x08	; 8
    1e3a:	10 e0       	ldi	r17, 0x00	; 0
    1e3c:	21 e0       	ldi	r18, 0x01	; 1
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	8a e1       	ldi	r24, 0x1A	; 26
    1e42:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1e44:	6f d2       	rcall	.+1246   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1e46:	4a 89       	ldd	r20, Y+18	; 0x12
    1e48:	5b 89       	ldd	r21, Y+19	; 0x13
    1e4a:	41 50       	subi	r20, 0x01	; 1
    1e4c:	51 09       	sbc	r21, r1
    1e4e:	f5 01       	movw	r30, r10
    1e50:	60 81       	ld	r22, Z
    1e52:	71 81       	ldd	r23, Z+1	; 0x01
    1e54:	21 e0       	ldi	r18, 0x01	; 1
    1e56:	30 e0       	ldi	r19, 0x00	; 0
    1e58:	8a e1       	ldi	r24, 0x1A	; 26
    1e5a:	94 e0       	ldi	r25, 0x04	; 4
    			 break;
			}
			case 6:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1e5c:	63 d2       	rcall	.+1222   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1e5e:	ff ef       	ldi	r31, 0xFF	; 255
    1e60:	ef 1a       	sub	r14, r31
    1e62:	ff 0a       	sbc	r15, r31
    1e64:	8c 81       	ldd	r24, Y+4	; 0x04
    1e66:	9d 81       	ldd	r25, Y+5	; 0x05
    1e68:	e8 16       	cp	r14, r24
    1e6a:	f9 06       	cpc	r15, r25
    1e6c:	e4 f2       	brlt	.-72     	; 0x1e26 <_Z5checkv+0xb26>
    			 }
    			 break;
			}
			case 7:
			{
    			 pointer++;
    1e6e:	b4 c0       	rjmp	.+360    	; 0x1fd8 <_Z5checkv+0xcd8>
    1e70:	e4 e0       	ldi	r30, 0x04	; 4
    1e72:	f4 e0       	ldi	r31, 0x04	; 4
    1e74:	84 81       	ldd	r24, Z+4	; 0x04
    1e76:	95 81       	ldd	r25, Z+5	; 0x05
    1e78:	01 96       	adiw	r24, 0x01	; 1
    			 for(int i=0;i<pointer;i++)
    1e7a:	95 83       	std	Z+5, r25	; 0x05
    1e7c:	84 83       	std	Z+4, r24	; 0x04
    1e7e:	18 16       	cp	r1, r24
    1e80:	19 06       	cpc	r1, r25
    1e82:	0c f0       	brlt	.+2      	; 0x1e86 <_Z5checkv+0xb86>
    1e84:	a9 c0       	rjmp	.+338    	; 0x1fd8 <_Z5checkv+0xcd8>
    1e86:	0f 2e       	mov	r0, r31
    1e88:	fc e0       	ldi	r31, 0x0C	; 12
    1e8a:	cf 2e       	mov	r12, r31
    1e8c:	f4 e0       	ldi	r31, 0x04	; 4
    1e8e:	df 2e       	mov	r13, r31
    1e90:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1e92:	e1 2c       	mov	r14, r1
    1e94:	f1 2c       	mov	r15, r1
    1e96:	ef 01       	movw	r28, r30
    1e98:	56 01       	movw	r10, r12
    1e9a:	4a 89       	ldd	r20, Y+18	; 0x12
    1e9c:	5b 89       	ldd	r21, Y+19	; 0x13
    1e9e:	4e 5f       	subi	r20, 0xFE	; 254
    1ea0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ea2:	f6 01       	movw	r30, r12
    1ea4:	61 91       	ld	r22, Z+
    1ea6:	71 91       	ld	r23, Z+
    1ea8:	6f 01       	movw	r12, r30
    1eaa:	08 e0       	ldi	r16, 0x08	; 8
    1eac:	10 e0       	ldi	r17, 0x00	; 0
    1eae:	21 e0       	ldi	r18, 0x01	; 1
    1eb0:	30 e0       	ldi	r19, 0x00	; 0
    1eb2:	8a e1       	ldi	r24, 0x1A	; 26
    1eb4:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1eb6:	36 d2       	rcall	.+1132   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1eb8:	4a 89       	ldd	r20, Y+18	; 0x12
    1eba:	5b 89       	ldd	r21, Y+19	; 0x13
    1ebc:	41 50       	subi	r20, 0x01	; 1
    1ebe:	51 09       	sbc	r21, r1
    1ec0:	f5 01       	movw	r30, r10
    1ec2:	60 81       	ld	r22, Z
    1ec4:	71 81       	ldd	r23, Z+1	; 0x01
    1ec6:	21 e0       	ldi	r18, 0x01	; 1
    1ec8:	30 e0       	ldi	r19, 0x00	; 0
    1eca:	8a e1       	ldi	r24, 0x1A	; 26
    1ecc:	94 e0       	ldi	r25, 0x04	; 4
    			 break;
			}
			case 7:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1ece:	2a d2       	rcall	.+1108   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1ed0:	ff ef       	ldi	r31, 0xFF	; 255
    1ed2:	ef 1a       	sub	r14, r31
    1ed4:	ff 0a       	sbc	r15, r31
    1ed6:	8c 81       	ldd	r24, Y+4	; 0x04
    1ed8:	9d 81       	ldd	r25, Y+5	; 0x05
    1eda:	e8 16       	cp	r14, r24
    1edc:	f9 06       	cpc	r15, r25
    1ede:	e4 f2       	brlt	.-72     	; 0x1e98 <_Z5checkv+0xb98>
    			 }
    			 break;
			}
			case 8:
			{
    			 pointer++;
    1ee0:	7b c0       	rjmp	.+246    	; 0x1fd8 <_Z5checkv+0xcd8>
    1ee2:	e4 e0       	ldi	r30, 0x04	; 4
    1ee4:	f4 e0       	ldi	r31, 0x04	; 4
    1ee6:	84 81       	ldd	r24, Z+4	; 0x04
    1ee8:	95 81       	ldd	r25, Z+5	; 0x05
    1eea:	01 96       	adiw	r24, 0x01	; 1
    			 for(int i=0;i<pointer;i++)
    1eec:	95 83       	std	Z+5, r25	; 0x05
    1eee:	84 83       	std	Z+4, r24	; 0x04
    1ef0:	18 16       	cp	r1, r24
    1ef2:	19 06       	cpc	r1, r25
    1ef4:	0c f0       	brlt	.+2      	; 0x1ef8 <_Z5checkv+0xbf8>
    1ef6:	70 c0       	rjmp	.+224    	; 0x1fd8 <_Z5checkv+0xcd8>
    1ef8:	0f 2e       	mov	r0, r31
    1efa:	fc e0       	ldi	r31, 0x0C	; 12
    1efc:	cf 2e       	mov	r12, r31
    1efe:	f4 e0       	ldi	r31, 0x04	; 4
    1f00:	df 2e       	mov	r13, r31
    1f02:	f0 2d       	mov	r31, r0
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1f04:	e1 2c       	mov	r14, r1
    1f06:	f1 2c       	mov	r15, r1
    1f08:	ef 01       	movw	r28, r30
    1f0a:	56 01       	movw	r10, r12
    1f0c:	4a 89       	ldd	r20, Y+18	; 0x12
    1f0e:	5b 89       	ldd	r21, Y+19	; 0x13
    1f10:	4e 5f       	subi	r20, 0xFE	; 254
    1f12:	5f 4f       	sbci	r21, 0xFF	; 255
    1f14:	f6 01       	movw	r30, r12
    1f16:	61 91       	ld	r22, Z+
    1f18:	71 91       	ld	r23, Z+
    1f1a:	6f 01       	movw	r12, r30
    1f1c:	08 e0       	ldi	r16, 0x08	; 8
    1f1e:	10 e0       	ldi	r17, 0x00	; 0
    1f20:	21 e0       	ldi	r18, 0x01	; 1
    1f22:	30 e0       	ldi	r19, 0x00	; 0
    1f24:	8a e1       	ldi	r24, 0x1A	; 26
    1f26:	94 e0       	ldi	r25, 0x04	; 4
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1f28:	fd d1       	rcall	.+1018   	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1f2a:	4a 89       	ldd	r20, Y+18	; 0x12
    1f2c:	5b 89       	ldd	r21, Y+19	; 0x13
    1f2e:	41 50       	subi	r20, 0x01	; 1
    1f30:	51 09       	sbc	r21, r1
    1f32:	f5 01       	movw	r30, r10
    1f34:	60 81       	ld	r22, Z
    1f36:	71 81       	ldd	r23, Z+1	; 0x01
    1f38:	21 e0       	ldi	r18, 0x01	; 1
    1f3a:	30 e0       	ldi	r19, 0x00	; 0
    1f3c:	8a e1       	ldi	r24, 0x1A	; 26
    1f3e:	94 e0       	ldi	r25, 0x04	; 4
    			 break;
			}
			case 8:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1f40:	f1 d1       	rcall	.+994    	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1f42:	ff ef       	ldi	r31, 0xFF	; 255
    1f44:	ef 1a       	sub	r14, r31
    1f46:	ff 0a       	sbc	r15, r31
    1f48:	8c 81       	ldd	r24, Y+4	; 0x04
    1f4a:	9d 81       	ldd	r25, Y+5	; 0x05
    1f4c:	e8 16       	cp	r14, r24
    1f4e:	f9 06       	cpc	r15, r25
    			 }
    			 break;
			}
			case 9:
			{
    			 pointer++;
    1f50:	e4 f2       	brlt	.-72     	; 0x1f0a <_Z5checkv+0xc0a>
    1f52:	42 c0       	rjmp	.+132    	; 0x1fd8 <_Z5checkv+0xcd8>
    1f54:	e4 e0       	ldi	r30, 0x04	; 4
    1f56:	f4 e0       	ldi	r31, 0x04	; 4
    1f58:	84 81       	ldd	r24, Z+4	; 0x04
    1f5a:	95 81       	ldd	r25, Z+5	; 0x05
    1f5c:	01 96       	adiw	r24, 0x01	; 1
				for(int i=0;i<pointer;i++)
    1f5e:	95 83       	std	Z+5, r25	; 0x05
    1f60:	84 83       	std	Z+4, r24	; 0x04
    1f62:	18 16       	cp	r1, r24
    1f64:	19 06       	cpc	r1, r25
    1f66:	c4 f5       	brge	.+112    	; 0x1fd8 <_Z5checkv+0xcd8>
    1f68:	0f 2e       	mov	r0, r31
    1f6a:	fc e0       	ldi	r31, 0x0C	; 12
    1f6c:	cf 2e       	mov	r12, r31
    1f6e:	f4 e0       	ldi	r31, 0x04	; 4
    1f70:	df 2e       	mov	r13, r31
    1f72:	f0 2d       	mov	r31, r0
				{
					oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1f74:	e1 2c       	mov	r14, r1
    1f76:	f1 2c       	mov	r15, r1
    1f78:	ef 01       	movw	r28, r30
    1f7a:	56 01       	movw	r10, r12
    1f7c:	4a 89       	ldd	r20, Y+18	; 0x12
    1f7e:	5b 89       	ldd	r21, Y+19	; 0x13
    1f80:	4e 5f       	subi	r20, 0xFE	; 254
    1f82:	5f 4f       	sbci	r21, 0xFF	; 255
    1f84:	f6 01       	movw	r30, r12
    1f86:	61 91       	ld	r22, Z+
    1f88:	71 91       	ld	r23, Z+
    1f8a:	6f 01       	movw	r12, r30
    1f8c:	08 e0       	ldi	r16, 0x08	; 8
    1f8e:	10 e0       	ldi	r17, 0x00	; 0
    1f90:	21 e0       	ldi	r18, 0x01	; 1
    1f92:	30 e0       	ldi	r19, 0x00	; 0
    1f94:	8a e1       	ldi	r24, 0x1A	; 26
    1f96:	94 e0       	ldi	r25, 0x04	; 4
					oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1f98:	c5 d1       	rcall	.+906    	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1f9a:	4a 89       	ldd	r20, Y+18	; 0x12
    1f9c:	5b 89       	ldd	r21, Y+19	; 0x13
    1f9e:	41 50       	subi	r20, 0x01	; 1
    1fa0:	51 09       	sbc	r21, r1
    1fa2:	f5 01       	movw	r30, r10
    1fa4:	60 81       	ld	r22, Z
    1fa6:	71 81       	ldd	r23, Z+1	; 0x01
    1fa8:	21 e0       	ldi	r18, 0x01	; 1
    1faa:	30 e0       	ldi	r19, 0x00	; 0
    1fac:	8a e1       	ldi	r24, 0x1A	; 26
    1fae:	94 e0       	ldi	r25, 0x04	; 4
    1fb0:	b9 d1       	rcall	.+882    	; 0x2324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 9:
			{
    			 pointer++;
				for(int i=0;i<pointer;i++)
    1fb2:	ff ef       	ldi	r31, 0xFF	; 255
    1fb4:	ef 1a       	sub	r14, r31
    1fb6:	ff 0a       	sbc	r15, r31
    1fb8:	8c 81       	ldd	r24, Y+4	; 0x04
    1fba:	9d 81       	ldd	r25, Y+5	; 0x05
    1fbc:	e8 16       	cp	r14, r24
    1fbe:	f9 06       	cpc	r15, r25
    1fc0:	e4 f2       	brlt	.-72     	; 0x1f7a <_Z5checkv+0xc7a>
    1fc2:	0a c0       	rjmp	.+20     	; 0x1fd8 <_Z5checkv+0xcd8>
				}
				break;
			}
			case 10:
			{
				 back();
    1fc4:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <passw_menu>
    1fc8:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <passw_menu+0x1>
    1fcc:	04 84       	ldd	r0, Z+12	; 0x0c
    1fce:	f5 85       	ldd	r31, Z+13	; 0x0d
    1fd0:	e0 2d       	mov	r30, r0
    1fd2:	84 e0       	ldi	r24, 0x04	; 4
    1fd4:	94 e0       	ldi	r25, 0x04	; 4
    1fd6:	09 95       	icall
				break;
			}
		}
		     if(pointer>PASSWORD_MENU_POINER_COUNT) {
    1fd8:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <passw_menu+0x4>
    1fdc:	90 91 09 04 	lds	r25, 0x0409	; 0x800409 <passw_menu+0x5>
    1fe0:	05 97       	sbiw	r24, 0x05	; 5
    1fe2:	84 f0       	brlt	.+32     	; 0x2004 <_Z5checkv+0xd04>
				 
				Main_Menu_Status=true;
    1fe4:	81 e0       	ldi	r24, 0x01	; 1
    1fe6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=false;
    1fea:	10 92 19 04 	sts	0x0419, r1	; 0x800419 <Password_Menu_Status>
				close();
    1fee:	e0 91 04 04 	lds	r30, 0x0404	; 0x800404 <passw_menu>
    1ff2:	f0 91 05 04 	lds	r31, 0x0405	; 0x800405 <passw_menu+0x1>
    1ff6:	04 80       	ldd	r0, Z+4	; 0x04
    1ff8:	f5 81       	ldd	r31, Z+5	; 0x05
    1ffa:	e0 2d       	mov	r30, r0
    1ffc:	84 e0       	ldi	r24, 0x04	; 4
    1ffe:	94 e0       	ldi	r25, 0x04	; 4
    2000:	09 95       	icall
    2002:	27 c0       	rjmp	.+78     	; 0x2052 <_Z5checkv+0xd52>
				 }
			 else
			 {
				 symbol_pointer=0;
    2004:	e4 e0       	ldi	r30, 0x04	; 4
    2006:	f4 e0       	ldi	r31, 0x04	; 4
    2008:	17 82       	std	Z+7, r1	; 0x07
    200a:	16 82       	std	Z+6, r1	; 0x06
				 actions();	 
    200c:	01 90       	ld	r0, Z+
    200e:	f0 81       	ld	r31, Z
    2010:	e0 2d       	mov	r30, r0
    2012:	00 88       	ldd	r0, Z+16	; 0x10
    2014:	f1 89       	ldd	r31, Z+17	; 0x11
    2016:	e0 2d       	mov	r30, r0
    2018:	84 e0       	ldi	r24, 0x04	; 4
    201a:	94 e0       	ldi	r25, 0x04	; 4
    201c:	09 95       	icall
    201e:	19 c0       	rjmp	.+50     	; 0x2052 <_Z5checkv+0xd52>
		if (Password_Menu_Status)
		{
			passw_menu.choise();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    2020:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    2024:	88 23       	and	r24, r24
    2026:	a9 f0       	breq	.+42     	; 0x2052 <_Z5checkv+0xd52>
		actions();
	};
	
	void choise()override
	{
		switch(pointer)
    2028:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <menu+0x4>
    202c:	90 91 03 04 	lds	r25, 0x0403	; 0x800403 <menu+0x5>
    2030:	89 2b       	or	r24, r25
    2032:	79 f4       	brne	.+30     	; 0x2052 <_Z5checkv+0xd52>
		{
			case 0:
			{
			    Main_Menu_Status=false;
    2034:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=true;
    2038:	81 e0       	ldi	r24, 0x01	; 1
    203a:	80 93 19 04 	sts	0x0419, r24	; 0x800419 <Password_Menu_Status>
				close();
    203e:	e0 91 fe 03 	lds	r30, 0x03FE	; 0x8003fe <menu>
    2042:	f0 91 ff 03 	lds	r31, 0x03FF	; 0x8003ff <menu+0x1>
    2046:	04 80       	ldd	r0, Z+4	; 0x04
    2048:	f5 81       	ldd	r31, Z+5	; 0x05
    204a:	e0 2d       	mov	r30, r0
    204c:	8e ef       	ldi	r24, 0xFE	; 254
    204e:	93 e0       	ldi	r25, 0x03	; 3
    2050:	09 95       	icall
		{
			menu.choise();
			//menu.refresh();
		}
	}
		btn0=false;
    2052:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <btn0>
		btn1=false;
    2056:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <btn1>
		btn2=false;
    205a:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <btn2>
		btn3=false;
    205e:	10 92 fa 03 	sts	0x03FA, r1	; 0x8003fa <btn3>
		btn03=false;
    2062:	10 92 f9 03 	sts	0x03F9, r1	; 0x8003f9 <btn03>
		btn12=false;
    2066:	10 92 f8 03 	sts	0x03F8, r1	; 0x8003f8 <__data_end>
	
}
    206a:	05 c0       	rjmp	.+10     	; 0x2076 <_Z5checkv+0xd76>
void check()
{
	if(btn0 & !btn1 & !btn2 & btn3) btn03=true;
	if(!btn0 & btn1 & btn2 & !btn3) btn12=true;
	
	if(btn0 & !btn1 & !btn2 & !btn3 & !btn12 & !btn03)
    206c:	60 91 f8 03 	lds	r22, 0x03F8	; 0x8003f8 <__data_end>
    2070:	41 e0       	ldi	r20, 0x01	; 1
    2072:	46 27       	eor	r20, r22
    2074:	9c cc       	rjmp	.-1736   	; 0x19ae <_Z5checkv+0x6ae>
		btn2=false;
		btn3=false;
		btn03=false;
		btn12=false;
	
}
    2076:	df 91       	pop	r29
    2078:	cf 91       	pop	r28
    207a:	1f 91       	pop	r17
    207c:	0f 91       	pop	r16
    207e:	ff 90       	pop	r15
    2080:	ef 90       	pop	r14
    2082:	df 90       	pop	r13
    2084:	cf 90       	pop	r12
    2086:	bf 90       	pop	r11
    2088:	af 90       	pop	r10
    208a:	08 95       	ret

0000208c <main>:

Batary batary;


int main(void){
		oled.OLED_Write_Bufer();
    208c:	8a e1       	ldi	r24, 0x1A	; 26
    208e:	94 e0       	ldi	r25, 0x04	; 4
    2090:	9f d0       	rcall	.+318    	; 0x21d0 <_ZN4OLED16OLED_Write_BuferEv>
		//menu.refresh();

		DDRA = 0x00;
    2092:	11 b8       	out	0x01, r1	; 1
		PORTA=0x00;
    2094:	12 b8       	out	0x02, r1	; 2
		PCMSK0=0b00111100;
    2096:	8c e3       	ldi	r24, 0x3C	; 60
    2098:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
		PCICR|=0b00000001;
    209c:	e8 e6       	ldi	r30, 0x68	; 104
    209e:	f0 e0       	ldi	r31, 0x00	; 0
    20a0:	80 81       	ld	r24, Z
    20a2:	81 60       	ori	r24, 0x01	; 1
    20a4:	80 83       	st	Z, r24
		sei();
    20a6:	78 94       	sei
    };
	
    void refresh() override
	{
		//oled.OLED_Bufer_Clear();
		Default();
    20a8:	0f 2e       	mov	r0, r31
    20aa:	fe ef       	ldi	r31, 0xFE	; 254
    20ac:	cf 2e       	mov	r12, r31
    20ae:	f3 e0       	ldi	r31, 0x03	; 3
    20b0:	df 2e       	mov	r13, r31
    20b2:	f0 2d       	mov	r31, r0
	};
	
	void refresh() override
	{
				//oled.OLED_Bufer_Clear();
				Default();
    20b4:	c4 e0       	ldi	r28, 0x04	; 4
		PCMSK0=0b00111100;
		PCICR|=0b00000001;
		sei();
	while(1)
	{
		check();
    20b6:	d4 e0       	ldi	r29, 0x04	; 4
    20b8:	23 d9       	rcall	.-3514   	; 0x1300 <_Z5checkv>
		if (Password_Menu_Status)
    20ba:	80 91 19 04 	lds	r24, 0x0419	; 0x800419 <Password_Menu_Status>
    20be:	88 23       	and	r24, r24
    20c0:	79 f0       	breq	.+30     	; 0x20e0 <main+0x54>
	};
	
	void refresh() override
	{
				//oled.OLED_Bufer_Clear();
				Default();
    20c2:	e8 81       	ld	r30, Y
    20c4:	f9 81       	ldd	r31, Y+1	; 0x01
    20c6:	01 90       	ld	r0, Z+
    20c8:	f0 81       	ld	r31, Z
    20ca:	e0 2d       	mov	r30, r0
    20cc:	ce 01       	movw	r24, r28
    20ce:	09 95       	icall
				actions();
    20d0:	e8 81       	ld	r30, Y
    20d2:	f9 81       	ldd	r31, Y+1	; 0x01
    20d4:	00 88       	ldd	r0, Z+16	; 0x10
    20d6:	f1 89       	ldd	r31, Z+17	; 0x11
    20d8:	e0 2d       	mov	r30, r0
    20da:	ce 01       	movw	r24, r28
    20dc:	09 95       	icall
    20de:	14 c0       	rjmp	.+40     	; 0x2108 <main+0x7c>
		check();
		if (Password_Menu_Status)
		{
			passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    20e0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    20e4:	88 23       	and	r24, r24
    20e6:	81 f0       	breq	.+32     	; 0x2108 <main+0x7c>
    };
	
    void refresh() override
	{
		//oled.OLED_Bufer_Clear();
		Default();
    20e8:	d6 01       	movw	r26, r12
    20ea:	ed 91       	ld	r30, X+
    20ec:	fc 91       	ld	r31, X
    20ee:	01 90       	ld	r0, Z+
    20f0:	f0 81       	ld	r31, Z
    20f2:	e0 2d       	mov	r30, r0
    20f4:	c6 01       	movw	r24, r12
    20f6:	09 95       	icall
		actions();
    20f8:	d6 01       	movw	r26, r12
    20fa:	ed 91       	ld	r30, X+
    20fc:	fc 91       	ld	r31, X
    20fe:	00 88       	ldd	r0, Z+16	; 0x10
    2100:	f1 89       	ldd	r31, Z+17	; 0x11
    2102:	e0 2d       	mov	r30, r0
    2104:	c6 01       	movw	r24, r12
    2106:	09 95       	icall
		else if (Main_Menu_Status)
		{
			menu.refresh();
		}
		//batary.refresh();
		oled.OLED_Write_To_Bufer(80,0,2,8,Net0);
    2108:	0f 2e       	mov	r0, r31
    210a:	f1 e0       	ldi	r31, 0x01	; 1
    210c:	ef 2e       	mov	r14, r31
    210e:	f1 e0       	ldi	r31, 0x01	; 1
    2110:	ff 2e       	mov	r15, r31
    2112:	f0 2d       	mov	r31, r0
    2114:	08 e0       	ldi	r16, 0x08	; 8
    2116:	10 e0       	ldi	r17, 0x00	; 0
    2118:	22 e0       	ldi	r18, 0x02	; 2
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	40 e0       	ldi	r20, 0x00	; 0
    211e:	50 e0       	ldi	r21, 0x00	; 0
    2120:	60 e5       	ldi	r22, 0x50	; 80
    2122:	70 e0       	ldi	r23, 0x00	; 0
    2124:	8a e1       	ldi	r24, 0x1A	; 26
    2126:	94 e0       	ldi	r25, 0x04	; 4
    2128:	4c d1       	rcall	.+664    	; 0x23c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_Bufer();
    212a:	8a e1       	ldi	r24, 0x1A	; 26
    212c:	94 e0       	ldi	r25, 0x04	; 4
    212e:	50 d0       	rcall	.+160    	; 0x21d0 <_ZN4OLED16OLED_Write_BuferEv>
    2130:	c3 cf       	rjmp	.-122    	; 0x20b8 <main+0x2c>

00002132 <_GLOBAL__sub_I_zero>:
		DDRA = 0x00;
		PORTA=0x00;
		PCMSK0=0b00111100;
		PCICR|=0b00000001;
		sei();
	while(1)
    2132:	cf 93       	push	r28
		}
		//batary.refresh();
		oled.OLED_Write_To_Bufer(80,0,2,8,Net0);
		oled.OLED_Write_Bufer();
	}
}
    2134:	df 93       	push	r29
#include "Defines.h"
#include "Images.h"
#include "TWI.h"
#include "OLED.h"

TWI wire;
    2136:	8b e1       	ldi	r24, 0x1B	; 27
    2138:	98 e0       	ldi	r25, 0x08	; 8
    213a:	f0 d1       	rcall	.+992    	; 0x251c <_ZN3TWIC1Ev>
OLED oled(wire);
    213c:	60 e0       	ldi	r22, 0x00	; 0
    213e:	8a e1       	ldi	r24, 0x1A	; 26
    2140:	94 e0       	ldi	r25, 0x04	; 4
    2142:	66 d0       	rcall	.+204    	; 0x2210 <_ZN4OLEDC1E3TWI>
	int symbol_pointer=0;
	int x[5]={PASSWORD_MENU_IMG_X_0,PASSWORD_MENU_IMG_X_1,PASSWORD_MENU_IMG_X_2,PASSWORD_MENU_IMG_X_3,PASSWORD_MENU_IMG_X_4};
	int y=PASSWORD_MENU_IMG_Y;
	public:
	Password_Menu()
	{
    2144:	c4 e0       	ldi	r28, 0x04	; 4
    2146:	d4 e0       	ldi	r29, 0x04	; 4
    2148:	85 ee       	ldi	r24, 0xE5	; 229
    214a:	93 e0       	ldi	r25, 0x03	; 3
    214c:	99 83       	std	Y+1, r25	; 0x01
    214e:	88 83       	st	Y, r24
    2150:	1d 82       	std	Y+5, r1	; 0x05
    2152:	1c 82       	std	Y+4, r1	; 0x04
    2154:	1f 82       	std	Y+7, r1	; 0x07
    2156:	1e 82       	std	Y+6, r1	; 0x06
    2158:	8a e0       	ldi	r24, 0x0A	; 10
    215a:	e1 ec       	ldi	r30, 0xC1	; 193
    215c:	f3 e0       	ldi	r31, 0x03	; 3
    215e:	ac e0       	ldi	r26, 0x0C	; 12
    2160:	b4 e0       	ldi	r27, 0x04	; 4
    2162:	01 90       	ld	r0, Z+
    2164:	0d 92       	st	X+, r0
    2166:	8a 95       	dec	r24
    2168:	e1 f7       	brne	.-8      	; 0x2162 <_GLOBAL__sub_I_zero+0x30>
    216a:	82 e0       	ldi	r24, 0x02	; 2
    216c:	90 e0       	ldi	r25, 0x00	; 0
    216e:	9b 8b       	std	Y+19, r25	; 0x13
    2170:	8a 8b       	std	Y+18, r24	; 0x12
{
	protected:
	int pointer=0;
	public:
	Main_Menu()
	{
    2172:	ee ef       	ldi	r30, 0xFE	; 254
    2174:	f3 e0       	ldi	r31, 0x03	; 3
    2176:	8f ec       	ldi	r24, 0xCF	; 207
    2178:	93 e0       	ldi	r25, 0x03	; 3
    217a:	91 83       	std	Z+1, r25	; 0x01
    217c:	80 83       	st	Z, r24
    217e:	15 82       	std	Z+5, r1	; 0x05
    2180:	14 82       	std	Z+4, r1	; 0x04
private:
int curlvl;
public:
Batary()
{
	DDRB=0x00;
    2182:	14 b8       	out	0x04, r1	; 4
	PORTB=0xFF;	
    2184:	8f ef       	ldi	r24, 0xFF	; 255
    2186:	85 b9       	out	0x05, r24	; 5
		}
		//batary.refresh();
		oled.OLED_Write_To_Bufer(80,0,2,8,Net0);
		oled.OLED_Write_Bufer();
	}
}
    2188:	df 91       	pop	r29
    218a:	cf 91       	pop	r28
    218c:	08 95       	ret

0000218e <_ZN4OLED12OLED_CommandEi>:
	}
	

	void OLED::OLED_Command(int command)
	{
		TWDR=0x80;
    218e:	80 e8       	ldi	r24, 0x80	; 128
    2190:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    2194:	84 e8       	ldi	r24, 0x84	; 132
    2196:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    219a:	ec eb       	ldi	r30, 0xBC	; 188
    219c:	f0 e0       	ldi	r31, 0x00	; 0
    219e:	80 81       	ld	r24, Z
    21a0:	88 23       	and	r24, r24
    21a2:	ec f7       	brge	.-6      	; 0x219e <_ZN4OLED12OLED_CommandEi+0x10>

		TWDR=command;
    21a4:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    21a8:	84 e8       	ldi	r24, 0x84	; 132
    21aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    21ae:	ec eb       	ldi	r30, 0xBC	; 188
    21b0:	f0 e0       	ldi	r31, 0x00	; 0
    21b2:	80 81       	ld	r24, Z
    21b4:	88 23       	and	r24, r24
    21b6:	ec f7       	brge	.-6      	; 0x21b2 <_ZN4OLED12OLED_CommandEi+0x24>
	}
    21b8:	08 95       	ret

000021ba <_ZN4OLED9OLED_DataEi>:


	void OLED::OLED_Data(int data)
	{
		TWDR=data;
    21ba:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    21be:	84 e8       	ldi	r24, 0x84	; 132
    21c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    21c4:	ec eb       	ldi	r30, 0xBC	; 188
    21c6:	f0 e0       	ldi	r31, 0x00	; 0
    21c8:	80 81       	ld	r24, Z
    21ca:	88 23       	and	r24, r24
    21cc:	ec f7       	brge	.-6      	; 0x21c8 <_ZN4OLED9OLED_DataEi+0xe>
	}
    21ce:	08 95       	ret

000021d0 <_ZN4OLED16OLED_Write_BuferEv>:


	void OLED::OLED_Write_Bufer()
	{
    21d0:	ef 92       	push	r14
    21d2:	ff 92       	push	r15
    21d4:	0f 93       	push	r16
    21d6:	1f 93       	push	r17
    21d8:	cf 93       	push	r28
    21da:	df 93       	push	r29
    21dc:	8c 01       	movw	r16, r24
    21de:	ec 01       	movw	r28, r24
    21e0:	7c 01       	movw	r14, r24
    21e2:	8c ef       	ldi	r24, 0xFC	; 252
    21e4:	f8 1a       	sub	r15, r24
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
		{
			OLED_Data(oled_bufer[i]);
    21e6:	69 91       	ld	r22, Y+
    21e8:	70 e0       	ldi	r23, 0x00	; 0
    21ea:	c8 01       	movw	r24, r16
    21ec:	e6 df       	rcall	.-52     	; 0x21ba <_ZN4OLED9OLED_DataEi>
	}


	void OLED::OLED_Write_Bufer()
	{
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
    21ee:	ce 15       	cp	r28, r14
    21f0:	df 05       	cpc	r29, r15
    21f2:	c9 f7       	brne	.-14     	; 0x21e6 <_ZN4OLED16OLED_Write_BuferEv+0x16>
		{
			OLED_Data(oled_bufer[i]);
		}
	}
    21f4:	df 91       	pop	r29
    21f6:	cf 91       	pop	r28
    21f8:	1f 91       	pop	r17
    21fa:	0f 91       	pop	r16
    21fc:	ff 90       	pop	r15
    21fe:	ef 90       	pop	r14
    2200:	08 95       	ret

00002202 <_ZN4OLED16OLED_Bufer_ClearEv>:

	void OLED::OLED_Bufer_Clear()
	{
    2202:	fc 01       	movw	r30, r24
    2204:	9c 5f       	subi	r25, 0xFC	; 252
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
		{
			oled_bufer[i]=0b00000000;
    2206:	11 92       	st	Z+, r1
		}
	}

	void OLED::OLED_Bufer_Clear()
	{
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
    2208:	e8 17       	cp	r30, r24
    220a:	f9 07       	cpc	r31, r25
    220c:	e1 f7       	brne	.-8      	; 0x2206 <_ZN4OLED16OLED_Bufer_ClearEv+0x4>
		{
			oled_bufer[i]=0b00000000;
		}
	}
    220e:	08 95       	ret

00002210 <_ZN4OLEDC1E3TWI>:
#include "OLED.h"

	OLED::OLED(TWI _wire)
    2210:	0f 93       	push	r16
    2212:	1f 93       	push	r17
    2214:	cf 93       	push	r28
    2216:	df 93       	push	r29
    2218:	ec 01       	movw	r28, r24
    221a:	8c 01       	movw	r16, r24
    221c:	1c 5f       	subi	r17, 0xFC	; 252
    221e:	c8 01       	movw	r24, r16
    2220:	7d d1       	rcall	.+762    	; 0x251c <_ZN3TWIC1Ev>
	{
		wire=_wire;
		wire.twi_Init();
    2222:	c8 01       	movw	r24, r16
    2224:	7c d1       	rcall	.+760    	; 0x251e <_ZN3TWI8twi_InitEv>
		wire.twi_Start();
    2226:	c8 01       	movw	r24, r16
    2228:	8b d1       	rcall	.+790    	; 0x2540 <_ZN3TWI9twi_StartEv>
		wire.twi_SendAdress();
    222a:	c8 01       	movw	r24, r16
    222c:	7d d1       	rcall	.+762    	; 0x2528 <_ZN3TWI14twi_SendAdressEv>
		OLED_Command(0xA8);
    222e:	68 ea       	ldi	r22, 0xA8	; 168
    2230:	70 e0       	ldi	r23, 0x00	; 0
    2232:	ce 01       	movw	r24, r28
    2234:	ac df       	rcall	.-168    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x3F);
    2236:	6f e3       	ldi	r22, 0x3F	; 63
    2238:	70 e0       	ldi	r23, 0x00	; 0
    223a:	ce 01       	movw	r24, r28
    223c:	a8 df       	rcall	.-176    	; 0x218e <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0xD3);
    223e:	63 ed       	ldi	r22, 0xD3	; 211
    2240:	70 e0       	ldi	r23, 0x00	; 0
    2242:	ce 01       	movw	r24, r28
    2244:	a4 df       	rcall	.-184    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x00);
    2246:	60 e0       	ldi	r22, 0x00	; 0
    2248:	70 e0       	ldi	r23, 0x00	; 0
    224a:	ce 01       	movw	r24, r28
    224c:	a0 df       	rcall	.-192    	; 0x218e <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0x40);
    224e:	60 e4       	ldi	r22, 0x40	; 64
    2250:	70 e0       	ldi	r23, 0x00	; 0
    2252:	ce 01       	movw	r24, r28
    2254:	9c df       	rcall	.-200    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xA1);
    2256:	61 ea       	ldi	r22, 0xA1	; 161
    2258:	70 e0       	ldi	r23, 0x00	; 0
    225a:	ce 01       	movw	r24, r28
    225c:	98 df       	rcall	.-208    	; 0x218e <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0xC8);
    225e:	68 ec       	ldi	r22, 0xC8	; 200
    2260:	70 e0       	ldi	r23, 0x00	; 0
    2262:	ce 01       	movw	r24, r28
    2264:	94 df       	rcall	.-216    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xDA);
    2266:	6a ed       	ldi	r22, 0xDA	; 218
    2268:	70 e0       	ldi	r23, 0x00	; 0
    226a:	ce 01       	movw	r24, r28
    226c:	90 df       	rcall	.-224    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x12);
    226e:	62 e1       	ldi	r22, 0x12	; 18
    2270:	70 e0       	ldi	r23, 0x00	; 0
    2272:	ce 01       	movw	r24, r28
    2274:	8c df       	rcall	.-232    	; 0x218e <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0x81);
    2276:	61 e8       	ldi	r22, 0x81	; 129
    2278:	70 e0       	ldi	r23, 0x00	; 0
    227a:	ce 01       	movw	r24, r28
    227c:	88 df       	rcall	.-240    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xFF);
    227e:	6f ef       	ldi	r22, 0xFF	; 255
    2280:	70 e0       	ldi	r23, 0x00	; 0
    2282:	ce 01       	movw	r24, r28
    2284:	84 df       	rcall	.-248    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xA4);
    2286:	64 ea       	ldi	r22, 0xA4	; 164
    2288:	70 e0       	ldi	r23, 0x00	; 0
    228a:	ce 01       	movw	r24, r28
    228c:	80 df       	rcall	.-256    	; 0x218e <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0xA6);
    228e:	66 ea       	ldi	r22, 0xA6	; 166
    2290:	70 e0       	ldi	r23, 0x00	; 0
    2292:	ce 01       	movw	r24, r28
    2294:	7c df       	rcall	.-264    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xD5);
    2296:	65 ed       	ldi	r22, 0xD5	; 213
    2298:	70 e0       	ldi	r23, 0x00	; 0
    229a:	ce 01       	movw	r24, r28
    229c:	78 df       	rcall	.-272    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x80);
    229e:	60 e8       	ldi	r22, 0x80	; 128
    22a0:	70 e0       	ldi	r23, 0x00	; 0
    22a2:	ce 01       	movw	r24, r28
    22a4:	74 df       	rcall	.-280    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x8D);
    22a6:	6d e8       	ldi	r22, 0x8D	; 141
    22a8:	70 e0       	ldi	r23, 0x00	; 0
    22aa:	ce 01       	movw	r24, r28
    22ac:	70 df       	rcall	.-288    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x14);
    22ae:	64 e1       	ldi	r22, 0x14	; 20
    22b0:	70 e0       	ldi	r23, 0x00	; 0
    22b2:	ce 01       	movw	r24, r28
    22b4:	6c df       	rcall	.-296    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xAF);
    22b6:	6f ea       	ldi	r22, 0xAF	; 175
    22b8:	70 e0       	ldi	r23, 0x00	; 0
    22ba:	ce 01       	movw	r24, r28
    22bc:	68 df       	rcall	.-304    	; 0x218e <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0x20);
    22be:	60 e2       	ldi	r22, 0x20	; 32
    22c0:	70 e0       	ldi	r23, 0x00	; 0
    22c2:	ce 01       	movw	r24, r28
    22c4:	64 df       	rcall	.-312    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x00);
    22c6:	60 e0       	ldi	r22, 0x00	; 0
    22c8:	70 e0       	ldi	r23, 0x00	; 0
    22ca:	ce 01       	movw	r24, r28
    22cc:	60 df       	rcall	.-320    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x21);
    22ce:	61 e2       	ldi	r22, 0x21	; 33
    22d0:	70 e0       	ldi	r23, 0x00	; 0
    22d2:	ce 01       	movw	r24, r28
    22d4:	5c df       	rcall	.-328    	; 0x218e <_ZN4OLED12OLED_CommandEi>
    22d6:	60 e0       	ldi	r22, 0x00	; 0
		OLED_Command(0);
    22d8:	70 e0       	ldi	r23, 0x00	; 0
    22da:	ce 01       	movw	r24, r28
    22dc:	58 df       	rcall	.-336    	; 0x218e <_ZN4OLED12OLED_CommandEi>
    22de:	6f e7       	ldi	r22, 0x7F	; 127
		OLED_Command(127);
    22e0:	70 e0       	ldi	r23, 0x00	; 0
    22e2:	ce 01       	movw	r24, r28
    22e4:	54 df       	rcall	.-344    	; 0x218e <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x22);
    22e6:	62 e2       	ldi	r22, 0x22	; 34
    22e8:	70 e0       	ldi	r23, 0x00	; 0
    22ea:	ce 01       	movw	r24, r28
    22ec:	50 df       	rcall	.-352    	; 0x218e <_ZN4OLED12OLED_CommandEi>
    22ee:	60 e0       	ldi	r22, 0x00	; 0
		OLED_Command(0);
    22f0:	70 e0       	ldi	r23, 0x00	; 0
    22f2:	ce 01       	movw	r24, r28
    22f4:	4c df       	rcall	.-360    	; 0x218e <_ZN4OLED12OLED_CommandEi>
    22f6:	67 e0       	ldi	r22, 0x07	; 7
    22f8:	70 e0       	ldi	r23, 0x00	; 0
		OLED_Command(7);
    22fa:	ce 01       	movw	r24, r28
    22fc:	48 df       	rcall	.-368    	; 0x218e <_ZN4OLED12OLED_CommandEi>
    22fe:	80 e4       	ldi	r24, 0x40	; 64
    2300:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWDR=0x40;
    2304:	84 e8       	ldi	r24, 0x84	; 132
    2306:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		TWCR=(1<<TWINT)|(1<<TWEN);
    230a:	ce 01       	movw	r24, r28
    230c:	7a df       	rcall	.-268    	; 0x2202 <_ZN4OLED16OLED_Bufer_ClearEv>
    230e:	60 e0       	ldi	r22, 0x00	; 0
		OLED_Bufer_Clear();
    2310:	70 e0       	ldi	r23, 0x00	; 0
    2312:	ce 01       	movw	r24, r28
    2314:	52 df       	rcall	.-348    	; 0x21ba <_ZN4OLED9OLED_DataEi>
		OLED_Data(0b00000000);
    2316:	ce 01       	movw	r24, r28
    2318:	5b df       	rcall	.-330    	; 0x21d0 <_ZN4OLED16OLED_Write_BuferEv>
    231a:	df 91       	pop	r29
    231c:	cf 91       	pop	r28
    231e:	1f 91       	pop	r17
		OLED_Write_Bufer();
    2320:	0f 91       	pop	r16
    2322:	08 95       	ret

00002324 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>:
    2324:	cf 92       	push	r12
	}
    2326:	df 92       	push	r13
    2328:	ef 92       	push	r14
    232a:	ff 92       	push	r15
    232c:	0f 93       	push	r16
    232e:	1f 93       	push	r17
		}
	}


	void OLED::OLED_Clear_Bufer_part(int x,int y,int width,int height)
	{
    2330:	cf 93       	push	r28
    2332:	df 93       	push	r29
    2334:	ec 01       	movw	r28, r24
    2336:	7b 01       	movw	r14, r22
    2338:	6a 01       	movw	r12, r20
    233a:	b9 01       	movw	r22, r18
		for(int j=0;j<height;j++)
    233c:	10 16       	cp	r1, r16
    233e:	11 06       	cpc	r1, r17
    2340:	bc f5       	brge	.+110    	; 0x23b0 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x8c>
    2342:	20 e0       	ldi	r18, 0x00	; 0
    2344:	30 e0       	ldi	r19, 0x00	; 0
    2346:	ab 01       	movw	r20, r22
    2348:	44 0f       	add	r20, r20
    234a:	55 1f       	adc	r21, r21
    234c:	44 0f       	add	r20, r20
    234e:	55 1f       	adc	r21, r21
    2350:	44 0f       	add	r20, r20
    2352:	55 1f       	adc	r21, r21
    2354:	4e 0d       	add	r20, r14
    2356:	5f 1d       	adc	r21, r15
		{
			
			for(int i=0;i<width;i++)
    2358:	16 16       	cp	r1, r22
    235a:	17 06       	cpc	r1, r23
    235c:	24 f5       	brge	.+72     	; 0x23a6 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x82>
    235e:	c9 01       	movw	r24, r18
    2360:	33 23       	and	r19, r19
    2362:	0c f4       	brge	.+2      	; 0x2366 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x42>
    2364:	07 96       	adiw	r24, 0x07	; 7
    2366:	95 95       	asr	r25
    2368:	87 95       	ror	r24
    236a:	95 95       	asr	r25
    236c:	87 95       	ror	r24
    236e:	95 95       	asr	r25
    2370:	87 95       	ror	r24
    2372:	8c 0d       	add	r24, r12
    2374:	9d 1d       	adc	r25, r13
    2376:	96 95       	lsr	r25
    2378:	98 2f       	mov	r25, r24
    237a:	88 27       	eor	r24, r24
    237c:	97 95       	ror	r25
    237e:	87 95       	ror	r24
    2380:	fc 01       	movw	r30, r24
    2382:	ee 0d       	add	r30, r14
    2384:	ff 1d       	adc	r31, r15
    2386:	ec 0f       	add	r30, r28
    2388:	fd 1f       	adc	r31, r29
    238a:	84 0f       	add	r24, r20
    238c:	95 1f       	adc	r25, r21
    238e:	8c 0f       	add	r24, r28
    2390:	9d 1f       	adc	r25, r29
    2392:	df 01       	movw	r26, r30
    2394:	18 96       	adiw	r26, 0x08	; 8
			{
				for(int k=0;k<8;k++)
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]=0b00000000;
    2396:	11 92       	st	Z+, r1
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
			{
				for(int k=0;k<8;k++)
    2398:	ea 17       	cp	r30, r26
    239a:	fb 07       	cpc	r31, r27
    239c:	e1 f7       	brne	.-8      	; 0x2396 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x72>
    239e:	fd 01       	movw	r30, r26
	void OLED::OLED_Clear_Bufer_part(int x,int y,int width,int height)
	{
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
    23a0:	8a 17       	cp	r24, r26
    23a2:	9b 07       	cpc	r25, r27
    23a4:	b1 f7       	brne	.-20     	; 0x2392 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x6e>
	}


	void OLED::OLED_Clear_Bufer_part(int x,int y,int width,int height)
	{
		for(int j=0;j<height;j++)
    23a6:	2f 5f       	subi	r18, 0xFF	; 255
    23a8:	3f 4f       	sbci	r19, 0xFF	; 255
    23aa:	02 17       	cp	r16, r18
    23ac:	13 07       	cpc	r17, r19
    23ae:	a1 f6       	brne	.-88     	; 0x2358 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x34>
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]=0b00000000;
				}
			}
		}
	}
    23b0:	df 91       	pop	r29
    23b2:	cf 91       	pop	r28
    23b4:	1f 91       	pop	r17
    23b6:	0f 91       	pop	r16
    23b8:	ff 90       	pop	r15
    23ba:	ef 90       	pop	r14
    23bc:	df 90       	pop	r13
    23be:	cf 90       	pop	r12
    23c0:	08 95       	ret

000023c2 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>:

	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
    23c2:	2f 92       	push	r2
    23c4:	3f 92       	push	r3
    23c6:	4f 92       	push	r4
    23c8:	5f 92       	push	r5
    23ca:	6f 92       	push	r6
    23cc:	7f 92       	push	r7
    23ce:	8f 92       	push	r8
    23d0:	9f 92       	push	r9
    23d2:	af 92       	push	r10
    23d4:	bf 92       	push	r11
    23d6:	cf 92       	push	r12
    23d8:	df 92       	push	r13
    23da:	ef 92       	push	r14
    23dc:	ff 92       	push	r15
    23de:	0f 93       	push	r16
    23e0:	1f 93       	push	r17
    23e2:	cf 93       	push	r28
    23e4:	df 93       	push	r29
    23e6:	00 d0       	rcall	.+0      	; 0x23e8 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x26>
    23e8:	00 d0       	rcall	.+0      	; 0x23ea <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x28>
    23ea:	00 d0       	rcall	.+0      	; 0x23ec <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x2a>
    23ec:	cd b7       	in	r28, 0x3d	; 61
    23ee:	de b7       	in	r29, 0x3e	; 62
    23f0:	9e 83       	std	Y+6, r25	; 0x06
    23f2:	8d 83       	std	Y+5, r24	; 0x05
    23f4:	3a 01       	movw	r6, r20
    23f6:	29 01       	movw	r4, r18
    23f8:	18 01       	movw	r2, r16
		for(int j=0;j<height;j++)
    23fa:	10 16       	cp	r1, r16
    23fc:	11 06       	cpc	r1, r17
    23fe:	0c f0       	brlt	.+2      	; 0x2402 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x40>
    2400:	74 c0       	rjmp	.+232    	; 0x24ea <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x128>
    2402:	3c 83       	std	Y+4, r19	; 0x04
    2404:	2b 83       	std	Y+3, r18	; 0x03
    2406:	8e 2c       	mov	r8, r14
    2408:	9f 2c       	mov	r9, r15
    240a:	c1 2c       	mov	r12, r1
    240c:	d1 2c       	mov	r13, r1
			
			for(int i=0;i<width;i++)
			{
				for(int k=0;k<8;k++)
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]|=((img[j*width+i]<<k)&0b10000000)>>(7-j%8);
    240e:	0f 2e       	mov	r0, r31
    2410:	f7 e0       	ldi	r31, 0x07	; 7
    2412:	af 2e       	mov	r10, r31
    2414:	b1 2c       	mov	r11, r1
    2416:	f0 2d       	mov	r31, r0
    2418:	c9 01       	movw	r24, r18
    241a:	88 0f       	add	r24, r24
    241c:	99 1f       	adc	r25, r25
    241e:	88 0f       	add	r24, r24
    2420:	99 1f       	adc	r25, r25
    2422:	88 0f       	add	r24, r24
    2424:	99 1f       	adc	r25, r25
    2426:	9b 01       	movw	r18, r22
    2428:	28 0f       	add	r18, r24
    242a:	39 1f       	adc	r19, r25
    242c:	3a 83       	std	Y+2, r19	; 0x02
    242e:	29 83       	std	Y+1, r18	; 0x01
	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
    2430:	14 14       	cp	r1, r4
    2432:	15 04       	cpc	r1, r5
    2434:	0c f0       	brlt	.+2      	; 0x2438 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x76>
    2436:	4e c0       	rjmp	.+156    	; 0x24d4 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x112>
			{
				for(int k=0;k<8;k++)
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]|=((img[j*width+i]<<k)&0b10000000)>>(7-j%8);
    2438:	c6 01       	movw	r24, r12
    243a:	87 70       	andi	r24, 0x07	; 7
    243c:	90 78       	andi	r25, 0x80	; 128
    243e:	99 23       	and	r25, r25
    2440:	24 f4       	brge	.+8      	; 0x244a <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x88>
    2442:	01 97       	sbiw	r24, 0x01	; 1
    2444:	88 6f       	ori	r24, 0xF8	; 248
    2446:	9f 6f       	ori	r25, 0xFF	; 255
    2448:	01 96       	adiw	r24, 0x01	; 1
    244a:	85 01       	movw	r16, r10
    244c:	08 1b       	sub	r16, r24
    244e:	19 0b       	sbc	r17, r25
    2450:	76 01       	movw	r14, r12
    2452:	dd 20       	and	r13, r13
    2454:	1c f4       	brge	.+6      	; 0x245c <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x9a>
    2456:	97 e0       	ldi	r25, 0x07	; 7
    2458:	e9 0e       	add	r14, r25
    245a:	f1 1c       	adc	r15, r1
    245c:	f5 94       	asr	r15
    245e:	e7 94       	ror	r14
    2460:	f5 94       	asr	r15
    2462:	e7 94       	ror	r14
    2464:	f5 94       	asr	r15
    2466:	e7 94       	ror	r14
    2468:	e6 0c       	add	r14, r6
    246a:	f7 1c       	adc	r15, r7
    246c:	f6 94       	lsr	r15
    246e:	fe 2c       	mov	r15, r14
    2470:	ee 24       	eor	r14, r14
    2472:	f7 94       	ror	r15
    2474:	e7 94       	ror	r14
    2476:	ab 01       	movw	r20, r22
    2478:	4e 0d       	add	r20, r14
    247a:	5f 1d       	adc	r21, r15
    247c:	2d 81       	ldd	r18, Y+5	; 0x05
    247e:	3e 81       	ldd	r19, Y+6	; 0x06
    2480:	42 0f       	add	r20, r18
    2482:	53 1f       	adc	r21, r19
    2484:	89 81       	ldd	r24, Y+1	; 0x01
    2486:	9a 81       	ldd	r25, Y+2	; 0x02
    2488:	e8 0e       	add	r14, r24
    248a:	f9 1e       	adc	r15, r25
    248c:	e2 0e       	add	r14, r18
    248e:	f3 1e       	adc	r15, r19
    2490:	d4 01       	movw	r26, r8
    2492:	fa 01       	movw	r30, r20
    2494:	20 e0       	ldi	r18, 0x00	; 0
    2496:	30 e0       	ldi	r19, 0x00	; 0
    2498:	8c 91       	ld	r24, X
    249a:	90 e0       	ldi	r25, 0x00	; 0
    249c:	02 2e       	mov	r0, r18
    249e:	02 c0       	rjmp	.+4      	; 0x24a4 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xe2>
    24a0:	88 0f       	add	r24, r24
    24a2:	99 1f       	adc	r25, r25
    24a4:	0a 94       	dec	r0
    24a6:	e2 f7       	brpl	.-8      	; 0x24a0 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xde>
    24a8:	80 78       	andi	r24, 0x80	; 128
    24aa:	99 27       	eor	r25, r25
    24ac:	00 2e       	mov	r0, r16
    24ae:	02 c0       	rjmp	.+4      	; 0x24b4 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xf2>
    24b0:	95 95       	asr	r25
    24b2:	87 95       	ror	r24
    24b4:	0a 94       	dec	r0
    24b6:	e2 f7       	brpl	.-8      	; 0x24b0 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xee>
    24b8:	90 81       	ld	r25, Z
    24ba:	89 2b       	or	r24, r25
    24bc:	81 93       	st	Z+, r24
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
			{
				for(int k=0;k<8;k++)
    24be:	2f 5f       	subi	r18, 0xFF	; 255
    24c0:	3f 4f       	sbci	r19, 0xFF	; 255
    24c2:	28 30       	cpi	r18, 0x08	; 8
    24c4:	31 05       	cpc	r19, r1
    24c6:	41 f7       	brne	.-48     	; 0x2498 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xd6>
    24c8:	48 5f       	subi	r20, 0xF8	; 248
    24ca:	5f 4f       	sbci	r21, 0xFF	; 255
    24cc:	11 96       	adiw	r26, 0x01	; 1
	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
    24ce:	4e 15       	cp	r20, r14
    24d0:	5f 05       	cpc	r21, r15
    24d2:	f9 f6       	brne	.-66     	; 0x2492 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xd0>
		}
	}

	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
		for(int j=0;j<height;j++)
    24d4:	3f ef       	ldi	r19, 0xFF	; 255
    24d6:	c3 1a       	sub	r12, r19
    24d8:	d3 0a       	sbc	r13, r19
    24da:	8b 81       	ldd	r24, Y+3	; 0x03
    24dc:	9c 81       	ldd	r25, Y+4	; 0x04
    24de:	88 0e       	add	r8, r24
    24e0:	99 1e       	adc	r9, r25
    24e2:	2c 14       	cp	r2, r12
    24e4:	3d 04       	cpc	r3, r13
    24e6:	09 f0       	breq	.+2      	; 0x24ea <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x128>
    24e8:	a3 cf       	rjmp	.-186    	; 0x2430 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x6e>
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]|=((img[j*width+i]<<k)&0b10000000)>>(7-j%8);
				}
			}
		}
	}
    24ea:	26 96       	adiw	r28, 0x06	; 6
    24ec:	0f b6       	in	r0, 0x3f	; 63
    24ee:	f8 94       	cli
    24f0:	de bf       	out	0x3e, r29	; 62
    24f2:	0f be       	out	0x3f, r0	; 63
    24f4:	cd bf       	out	0x3d, r28	; 61
    24f6:	df 91       	pop	r29
    24f8:	cf 91       	pop	r28
    24fa:	1f 91       	pop	r17
    24fc:	0f 91       	pop	r16
    24fe:	ff 90       	pop	r15
    2500:	ef 90       	pop	r14
    2502:	df 90       	pop	r13
    2504:	cf 90       	pop	r12
    2506:	bf 90       	pop	r11
    2508:	af 90       	pop	r10
    250a:	9f 90       	pop	r9
    250c:	8f 90       	pop	r8
    250e:	7f 90       	pop	r7
    2510:	6f 90       	pop	r6
    2512:	5f 90       	pop	r5
    2514:	4f 90       	pop	r4
    2516:	3f 90       	pop	r3
    2518:	2f 90       	pop	r2
    251a:	08 95       	ret

0000251c <_ZN3TWIC1Ev>:
#include "TWI.h"


	TWI::TWI(){}
    251c:	08 95       	ret

0000251e <_ZN3TWI8twi_InitEv>:

	void TWI::twi_Init(void)
	{
		TWBR=(((CPU_F)/(SCL_F)-16)/2);
    251e:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
		TWSR=0;
    2522:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2526:	08 95       	ret

00002528 <_ZN3TWI14twi_SendAdressEv>:
	}

	void TWI::twi_SendAdress(void)
	{
		TWDR=(Dev_Adr<<1)|0;
    2528:	88 e7       	ldi	r24, 0x78	; 120
    252a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    252e:	84 e8       	ldi	r24, 0x84	; 132
    2530:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    2534:	ec eb       	ldi	r30, 0xBC	; 188
    2536:	f0 e0       	ldi	r31, 0x00	; 0
    2538:	80 81       	ld	r24, Z
    253a:	88 23       	and	r24, r24
    253c:	ec f7       	brge	.-6      	; 0x2538 <_ZN3TWI14twi_SendAdressEv+0x10>
	}
    253e:	08 95       	ret

00002540 <_ZN3TWI9twi_StartEv>:

	void TWI::twi_Start(void)
	{
		TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
    2540:	84 ea       	ldi	r24, 0xA4	; 164
    2542:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    2546:	ec eb       	ldi	r30, 0xBC	; 188
    2548:	f0 e0       	ldi	r31, 0x00	; 0
    254a:	80 81       	ld	r24, Z
    254c:	88 23       	and	r24, r24
    254e:	ec f7       	brge	.-6      	; 0x254a <_ZN3TWI9twi_StartEv+0xa>
	}
    2550:	08 95       	ret

00002552 <__tablejump2__>:
    2552:	ee 0f       	add	r30, r30
    2554:	ff 1f       	adc	r31, r31
    2556:	00 24       	eor	r0, r0
    2558:	00 1c       	adc	r0, r0
    255a:	0b be       	out	0x3b, r0	; 59
    255c:	07 90       	elpm	r0, Z+
    255e:	f6 91       	elpm	r31, Z
    2560:	e0 2d       	mov	r30, r0
    2562:	09 94       	ijmp

00002564 <_exit>:
    2564:	f8 94       	cli

00002566 <__stop_program>:
    2566:	ff cf       	rjmp	.-2      	; 0x2566 <__stop_program>
