
SmartLock.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000045e  00800100  00002bd8  00002c6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002bd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000437  0080055e  0080055e  000030ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000030ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000030fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  0000313c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005761  00000000  00000000  000032ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eb9  00000000  00000000  00008a4d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000013fa  00000000  00000000  00009906  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000564  00000000  00000000  0000ad00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c5e  00000000  00000000  0000b264  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000017ff  00000000  00000000  0000bec2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e0  00000000  00000000  0000d6c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	67 c0       	rjmp	.+206    	; 0xd0 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	0c 94 4e 0d 	jmp	0x1a9c	; 0x1a9c <__vector_4>
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	5f c0       	rjmp	.+190    	; 0x124 <__bad_interrupt>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c4 01       	movw	r24, r8
      8e:	fa 01       	movw	r30, r20
      90:	30 02       	muls	r19, r16
      92:	66 02       	muls	r22, r22
      94:	9c 02       	muls	r25, r28
      96:	d2 02       	muls	r29, r18
      98:	08 03       	fmul	r16, r16
      9a:	3e 03       	fmul	r19, r22
      9c:	74 03       	mulsu	r23, r20
      9e:	aa 03       	fmulsu	r18, r18
      a0:	df 03       	fmulsu	r21, r23
      a2:	31 08       	sbc	r3, r1
      a4:	8e 08       	sbc	r8, r14
      a6:	eb 08       	sbc	r14, r11
      a8:	48 09       	sbc	r20, r8
      aa:	a5 09       	sbc	r26, r5
      ac:	02 0a       	sbc	r0, r18
      ae:	5f 0a       	sbc	r5, r31
      b0:	bc 0a       	sbc	r11, r28
      b2:	19 0b       	sbc	r17, r25
      b4:	76 0b       	sbc	r23, r22
      b6:	d3 0b       	sbc	r29, r19
      b8:	94 0e       	add	r9, r20
      ba:	cd 0e       	add	r12, r29
      bc:	06 0f       	add	r16, r22
      be:	3f 0f       	add	r19, r31
      c0:	78 0f       	add	r23, r24
      c2:	b1 0f       	add	r27, r17
      c4:	ea 0f       	add	r30, r26
      c6:	23 10       	cpse	r2, r3
      c8:	5c 10       	cpse	r5, r12
      ca:	95 10       	cpse	r9, r5
      cc:	cd 10       	cpse	r12, r13

000000ce <__ctors_start>:
      ce:	a6 13       	cpse	r26, r22

000000d0 <__ctors_end>:
      d0:	11 24       	eor	r1, r1
      d2:	1f be       	out	0x3f, r1	; 63
      d4:	cf ef       	ldi	r28, 0xFF	; 255
      d6:	d0 e4       	ldi	r29, 0x40	; 64
      d8:	de bf       	out	0x3e, r29	; 62
      da:	cd bf       	out	0x3d, r28	; 61

000000dc <__do_copy_data>:
      dc:	15 e0       	ldi	r17, 0x05	; 5
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b1 e0       	ldi	r27, 0x01	; 1
      e2:	e8 ed       	ldi	r30, 0xD8	; 216
      e4:	fb e2       	ldi	r31, 0x2B	; 43
      e6:	00 e0       	ldi	r16, 0x00	; 0
      e8:	0b bf       	out	0x3b, r16	; 59
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
      ec:	07 90       	elpm	r0, Z+
      ee:	0d 92       	st	X+, r0
      f0:	ae 35       	cpi	r26, 0x5E	; 94
      f2:	b1 07       	cpc	r27, r17
      f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
      f6:	29 e0       	ldi	r18, 0x09	; 9
      f8:	ae e5       	ldi	r26, 0x5E	; 94
      fa:	b5 e0       	ldi	r27, 0x05	; 5
      fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
      fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
     100:	a5 39       	cpi	r26, 0x95	; 149
     102:	b2 07       	cpc	r27, r18
     104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>

00000106 <__do_global_ctors>:
     106:	10 e0       	ldi	r17, 0x00	; 0
     108:	c8 e6       	ldi	r28, 0x68	; 104
     10a:	d0 e0       	ldi	r29, 0x00	; 0
     10c:	04 c0       	rjmp	.+8      	; 0x116 <__do_global_ctors+0x10>
     10e:	21 97       	sbiw	r28, 0x01	; 1
     110:	fe 01       	movw	r30, r28
     112:	0e 94 e1 15 	call	0x2bc2	; 0x2bc2 <__tablejump2__>
     116:	c7 36       	cpi	r28, 0x67	; 103
     118:	d1 07       	cpc	r29, r17
     11a:	c9 f7       	brne	.-14     	; 0x10e <__do_global_ctors+0x8>
     11c:	0e 94 b3 12 	call	0x2566	; 0x2566 <main>
     120:	0c 94 ea 15 	jmp	0x2bd4	; 0x2bd4 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <_ZN9Main_Menu7refreshEv>:
    {
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X-20,MAIN_MENU_IMG_Y+1,1,16,lt);
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X+56,MAIN_MENU_IMG_Y+1,1,16,rt);
    };
	
    void refresh() override
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	ec 01       	movw	r28, r24
	{
		//oled.OLED_Bufer_Clear();
		Default();
     12c:	e8 81       	ld	r30, Y
     12e:	f9 81       	ldd	r31, Y+1	; 0x01
     130:	01 90       	ld	r0, Z+
     132:	f0 81       	ld	r31, Z
     134:	e0 2d       	mov	r30, r0
     136:	09 95       	icall
		actions();
     138:	e8 81       	ld	r30, Y
     13a:	f9 81       	ldd	r31, Y+1	; 0x01
     13c:	00 88       	ldd	r0, Z+16	; 0x10
     13e:	f1 89       	ldd	r31, Z+17	; 0x11
     140:	e0 2d       	mov	r30, r0
     142:	ce 01       	movw	r24, r28
     144:	09 95       	icall
	};
     146:	df 91       	pop	r29
     148:	cf 91       	pop	r28
     14a:	08 95       	ret

0000014c <_ZN9Main_Menu4nextEv>:

	};
	
	void next()override
	{
		pointer++;
     14c:	dc 01       	movw	r26, r24
     14e:	14 96       	adiw	r26, 0x04	; 4
     150:	2d 91       	ld	r18, X+
     152:	3c 91       	ld	r19, X
     154:	15 97       	sbiw	r26, 0x05	; 5
     156:	2f 5f       	subi	r18, 0xFF	; 255
     158:	3f 4f       	sbci	r19, 0xFF	; 255
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
     15a:	23 30       	cpi	r18, 0x03	; 3
     15c:	31 05       	cpc	r19, r1
     15e:	2c f4       	brge	.+10     	; 0x16a <_ZN9Main_Menu4nextEv+0x1e>

	};
	
	void next()override
	{
		pointer++;
     160:	15 96       	adiw	r26, 0x05	; 5
     162:	3c 93       	st	X, r19
     164:	2e 93       	st	-X, r18
     166:	14 97       	sbiw	r26, 0x04	; 4
     168:	03 c0       	rjmp	.+6      	; 0x170 <_ZN9Main_Menu4nextEv+0x24>
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
     16a:	fc 01       	movw	r30, r24
     16c:	15 82       	std	Z+5, r1	; 0x05
     16e:	14 82       	std	Z+4, r1	; 0x04
		actions();
     170:	dc 01       	movw	r26, r24
     172:	ed 91       	ld	r30, X+
     174:	fc 91       	ld	r31, X
     176:	00 88       	ldd	r0, Z+16	; 0x10
     178:	f1 89       	ldd	r31, Z+17	; 0x11
     17a:	e0 2d       	mov	r30, r0
     17c:	09 95       	icall
     17e:	08 95       	ret

00000180 <_ZN9Main_Menu8previousEv>:
	};
	
	void previous()override
	{
		pointer--;
     180:	dc 01       	movw	r26, r24
     182:	14 96       	adiw	r26, 0x04	; 4
     184:	2d 91       	ld	r18, X+
     186:	3c 91       	ld	r19, X
     188:	15 97       	sbiw	r26, 0x05	; 5
     18a:	21 50       	subi	r18, 0x01	; 1
     18c:	31 09       	sbc	r19, r1
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
     18e:	2a f0       	brmi	.+10     	; 0x19a <_ZN9Main_Menu8previousEv+0x1a>
		actions();
	};
	
	void previous()override
	{
		pointer--;
     190:	15 96       	adiw	r26, 0x05	; 5
     192:	3c 93       	st	X, r19
     194:	2e 93       	st	-X, r18
     196:	14 97       	sbiw	r26, 0x04	; 4
     198:	05 c0       	rjmp	.+10     	; 0x1a4 <_ZN9Main_Menu8previousEv+0x24>
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
     19a:	22 e0       	ldi	r18, 0x02	; 2
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	fc 01       	movw	r30, r24
     1a0:	35 83       	std	Z+5, r19	; 0x05
     1a2:	24 83       	std	Z+4, r18	; 0x04
		actions();
     1a4:	dc 01       	movw	r26, r24
     1a6:	ed 91       	ld	r30, X+
     1a8:	fc 91       	ld	r31, X
     1aa:	00 88       	ldd	r0, Z+16	; 0x10
     1ac:	f1 89       	ldd	r31, Z+17	; 0x11
     1ae:	e0 2d       	mov	r30, r0
     1b0:	09 95       	icall
     1b2:	08 95       	ret

000001b4 <_ZN9Main_Menu6choiseEv>:
	};
	
	void choise()override
	{
		switch(pointer)
     1b4:	dc 01       	movw	r26, r24
     1b6:	14 96       	adiw	r26, 0x04	; 4
     1b8:	2d 91       	ld	r18, X+
     1ba:	3c 91       	ld	r19, X
     1bc:	15 97       	sbiw	r26, 0x05	; 5
     1be:	21 15       	cp	r18, r1
     1c0:	31 05       	cpc	r19, r1
     1c2:	21 f0       	breq	.+8      	; 0x1cc <_ZN9Main_Menu6choiseEv+0x18>
     1c4:	21 30       	cpi	r18, 0x01	; 1
     1c6:	31 05       	cpc	r19, r1
     1c8:	71 f0       	breq	.+28     	; 0x1e6 <_ZN9Main_Menu6choiseEv+0x32>
     1ca:	08 95       	ret
		{
			case 0:
			{
			    Main_Menu_Status=false;
     1cc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=true;
     1d0:	21 e0       	ldi	r18, 0x01	; 1
     1d2:	20 93 92 05 	sts	0x0592, r18	; 0x800592 <Password_Menu_Status>
				close();
     1d6:	dc 01       	movw	r26, r24
     1d8:	ed 91       	ld	r30, X+
     1da:	fc 91       	ld	r31, X
     1dc:	04 80       	ldd	r0, Z+4	; 0x04
     1de:	f5 81       	ldd	r31, Z+5	; 0x05
     1e0:	e0 2d       	mov	r30, r0
     1e2:	09 95       	icall
				break;
     1e4:	08 95       	ret
			}
			case 1:
			{
				Main_Menu_Status=false;
     1e6:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
				Settings_Menu_Status=true;
     1ea:	21 e0       	ldi	r18, 0x01	; 1
     1ec:	20 93 91 05 	sts	0x0591, r18	; 0x800591 <Settings_Menu_Status>
				close();
     1f0:	dc 01       	movw	r26, r24
     1f2:	ed 91       	ld	r30, X+
     1f4:	fc 91       	ld	r31, X
     1f6:	04 80       	ldd	r0, Z+4	; 0x04
     1f8:	f5 81       	ldd	r31, Z+5	; 0x05
     1fa:	e0 2d       	mov	r30, r0
     1fc:	09 95       	icall
     1fe:	08 95       	ret

00000200 <_ZN9Main_Menu4backEv>:
				break;
			}
		}
	};
	
	void back()override
     200:	08 95       	ret

00000202 <_ZN9Main_Menu7animateEv>:
	{
		
		
	};
	
	void animate()override
     202:	08 95       	ret

00000204 <_ZN13Password_Menu7refreshEv>:
		oled.OLED_Write_To_Bufer(x[2],y+1,1,8,line);
		oled.OLED_Write_To_Bufer(x[3],y+1,1,8,line);
		oled.OLED_Write_To_Bufer(x[4],y+1,1,8,line);
	};
	
	void refresh() override
     204:	cf 93       	push	r28
     206:	df 93       	push	r29
     208:	ec 01       	movw	r28, r24
	{
				//oled.OLED_Bufer_Clear();
				Default();
     20a:	e8 81       	ld	r30, Y
     20c:	f9 81       	ldd	r31, Y+1	; 0x01
     20e:	01 90       	ld	r0, Z+
     210:	f0 81       	ld	r31, Z
     212:	e0 2d       	mov	r30, r0
     214:	09 95       	icall
				actions();
     216:	e8 81       	ld	r30, Y
     218:	f9 81       	ldd	r31, Y+1	; 0x01
     21a:	00 88       	ldd	r0, Z+16	; 0x10
     21c:	f1 89       	ldd	r31, Z+17	; 0x11
     21e:	e0 2d       	mov	r30, r0
     220:	ce 01       	movw	r24, r28
     222:	09 95       	icall
	};
     224:	df 91       	pop	r29
     226:	cf 91       	pop	r28
     228:	08 95       	ret

0000022a <_ZN13Password_Menu4nextEv>:
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
     22a:	dc 01       	movw	r26, r24
     22c:	16 96       	adiw	r26, 0x06	; 6
     22e:	2d 91       	ld	r18, X+
     230:	3c 91       	ld	r19, X
     232:	17 97       	sbiw	r26, 0x07	; 7
     234:	2f 5f       	subi	r18, 0xFF	; 255
     236:	3f 4f       	sbci	r19, 0xFF	; 255
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
     238:	2b 30       	cpi	r18, 0x0B	; 11
     23a:	31 05       	cpc	r19, r1
     23c:	2c f4       	brge	.+10     	; 0x248 <_ZN13Password_Menu4nextEv+0x1e>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
     23e:	17 96       	adiw	r26, 0x07	; 7
     240:	3c 93       	st	X, r19
     242:	2e 93       	st	-X, r18
     244:	16 97       	sbiw	r26, 0x06	; 6
     246:	03 c0       	rjmp	.+6      	; 0x24e <_ZN13Password_Menu4nextEv+0x24>
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
     248:	fc 01       	movw	r30, r24
     24a:	17 82       	std	Z+7, r1	; 0x07
     24c:	16 82       	std	Z+6, r1	; 0x06
		actions();
     24e:	dc 01       	movw	r26, r24
     250:	ed 91       	ld	r30, X+
     252:	fc 91       	ld	r31, X
     254:	00 88       	ldd	r0, Z+16	; 0x10
     256:	f1 89       	ldd	r31, Z+17	; 0x11
     258:	e0 2d       	mov	r30, r0
     25a:	09 95       	icall
     25c:	08 95       	ret

0000025e <_ZN13Password_Menu8previousEv>:
	};
	
	void previous()override
	{
		symbol_pointer--;
     25e:	dc 01       	movw	r26, r24
     260:	16 96       	adiw	r26, 0x06	; 6
     262:	2d 91       	ld	r18, X+
     264:	3c 91       	ld	r19, X
     266:	17 97       	sbiw	r26, 0x07	; 7
     268:	21 50       	subi	r18, 0x01	; 1
     26a:	31 09       	sbc	r19, r1
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
     26c:	2a f0       	brmi	.+10     	; 0x278 <_ZN13Password_Menu8previousEv+0x1a>
		actions();
	};
	
	void previous()override
	{
		symbol_pointer--;
     26e:	17 96       	adiw	r26, 0x07	; 7
     270:	3c 93       	st	X, r19
     272:	2e 93       	st	-X, r18
     274:	16 97       	sbiw	r26, 0x06	; 6
     276:	05 c0       	rjmp	.+10     	; 0x282 <_ZN13Password_Menu8previousEv+0x24>
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
     278:	2a e0       	ldi	r18, 0x0A	; 10
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	fc 01       	movw	r30, r24
     27e:	37 83       	std	Z+7, r19	; 0x07
     280:	26 83       	std	Z+6, r18	; 0x06
		actions();
     282:	dc 01       	movw	r26, r24
     284:	ed 91       	ld	r30, X+
     286:	fc 91       	ld	r31, X
     288:	00 88       	ldd	r0, Z+16	; 0x10
     28a:	f1 89       	ldd	r31, Z+17	; 0x11
     28c:	e0 2d       	mov	r30, r0
     28e:	09 95       	icall
     290:	08 95       	ret

00000292 <_ZN13Password_Menu7animateEv>:
				 pointer=0;
		}
		else actions();	
	};
	
	void animate()override
     292:	08 95       	ret

00000294 <_ZN13Settings_Menu7refreshEv>:
	{
		oled.OLED_Write_To_Bufer(56,y+2,2,8,downwd);
		oled.OLED_Write_To_Bufer(56,y-2,2,8,upwd);
	};
	
	void refresh() override
     294:	cf 93       	push	r28
     296:	df 93       	push	r29
     298:	ec 01       	movw	r28, r24
	{
		//oled.OLED_Bufer_Clear();
		Default();
     29a:	e8 81       	ld	r30, Y
     29c:	f9 81       	ldd	r31, Y+1	; 0x01
     29e:	01 90       	ld	r0, Z+
     2a0:	f0 81       	ld	r31, Z
     2a2:	e0 2d       	mov	r30, r0
     2a4:	09 95       	icall
		actions();
     2a6:	e8 81       	ld	r30, Y
     2a8:	f9 81       	ldd	r31, Y+1	; 0x01
     2aa:	00 88       	ldd	r0, Z+16	; 0x10
     2ac:	f1 89       	ldd	r31, Z+17	; 0x11
     2ae:	e0 2d       	mov	r30, r0
     2b0:	ce 01       	movw	r24, r28
     2b2:	09 95       	icall
	};
     2b4:	df 91       	pop	r29
     2b6:	cf 91       	pop	r28
     2b8:	08 95       	ret

000002ba <_ZN13Settings_Menu4nextEv>:
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		pointer++;
     2ba:	dc 01       	movw	r26, r24
     2bc:	14 96       	adiw	r26, 0x04	; 4
     2be:	2d 91       	ld	r18, X+
     2c0:	3c 91       	ld	r19, X
     2c2:	15 97       	sbiw	r26, 0x05	; 5
     2c4:	2f 5f       	subi	r18, 0xFF	; 255
     2c6:	3f 4f       	sbci	r19, 0xFF	; 255
		if(pointer>SETTINGS_MENU_POINER_COUNT) pointer=0;
     2c8:	25 30       	cpi	r18, 0x05	; 5
     2ca:	31 05       	cpc	r19, r1
     2cc:	2c f4       	brge	.+10     	; 0x2d8 <_ZN13Settings_Menu4nextEv+0x1e>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		pointer++;
     2ce:	15 96       	adiw	r26, 0x05	; 5
     2d0:	3c 93       	st	X, r19
     2d2:	2e 93       	st	-X, r18
     2d4:	14 97       	sbiw	r26, 0x04	; 4
     2d6:	03 c0       	rjmp	.+6      	; 0x2de <_ZN13Settings_Menu4nextEv+0x24>
		if(pointer>SETTINGS_MENU_POINER_COUNT) pointer=0;
     2d8:	fc 01       	movw	r30, r24
     2da:	15 82       	std	Z+5, r1	; 0x05
     2dc:	14 82       	std	Z+4, r1	; 0x04
		actions();
     2de:	dc 01       	movw	r26, r24
     2e0:	ed 91       	ld	r30, X+
     2e2:	fc 91       	ld	r31, X
     2e4:	00 88       	ldd	r0, Z+16	; 0x10
     2e6:	f1 89       	ldd	r31, Z+17	; 0x11
     2e8:	e0 2d       	mov	r30, r0
     2ea:	09 95       	icall
     2ec:	08 95       	ret

000002ee <_ZN13Settings_Menu8previousEv>:
	};
	
	void previous()override
	{
		pointer--;
     2ee:	dc 01       	movw	r26, r24
     2f0:	14 96       	adiw	r26, 0x04	; 4
     2f2:	2d 91       	ld	r18, X+
     2f4:	3c 91       	ld	r19, X
     2f6:	15 97       	sbiw	r26, 0x05	; 5
     2f8:	21 50       	subi	r18, 0x01	; 1
     2fa:	31 09       	sbc	r19, r1
		if(pointer<0) pointer=SETTINGS_MENU_POINER_COUNT;
     2fc:	2a f0       	brmi	.+10     	; 0x308 <_ZN13Settings_Menu8previousEv+0x1a>
		actions();
	};
	
	void previous()override
	{
		pointer--;
     2fe:	15 96       	adiw	r26, 0x05	; 5
     300:	3c 93       	st	X, r19
     302:	2e 93       	st	-X, r18
     304:	14 97       	sbiw	r26, 0x04	; 4
     306:	05 c0       	rjmp	.+10     	; 0x312 <_ZN13Settings_Menu8previousEv+0x24>
		if(pointer<0) pointer=SETTINGS_MENU_POINER_COUNT;
     308:	24 e0       	ldi	r18, 0x04	; 4
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	fc 01       	movw	r30, r24
     30e:	35 83       	std	Z+5, r19	; 0x05
     310:	24 83       	std	Z+4, r18	; 0x04
		actions();		
     312:	dc 01       	movw	r26, r24
     314:	ed 91       	ld	r30, X+
     316:	fc 91       	ld	r31, X
     318:	00 88       	ldd	r0, Z+16	; 0x10
     31a:	f1 89       	ldd	r31, Z+17	; 0x11
     31c:	e0 2d       	mov	r30, r0
     31e:	09 95       	icall
     320:	08 95       	ret

00000322 <_ZN13Settings_Menu6choiseEv>:
	};
	
	void choise()override
	{
		switch(pointer)
     322:	dc 01       	movw	r26, r24
     324:	14 96       	adiw	r26, 0x04	; 4
     326:	2d 91       	ld	r18, X+
     328:	3c 91       	ld	r19, X
     32a:	15 97       	sbiw	r26, 0x05	; 5
     32c:	23 30       	cpi	r18, 0x03	; 3
     32e:	31 05       	cpc	r19, r1
     330:	31 f4       	brne	.+12     	; 0x33e <_ZN13Settings_Menu6choiseEv+0x1c>
				
				break;
			}
			case 3:
			{
				back();
     332:	ed 91       	ld	r30, X+
     334:	fc 91       	ld	r31, X
     336:	04 84       	ldd	r0, Z+12	; 0x0c
     338:	f5 85       	ldd	r31, Z+13	; 0x0d
     33a:	e0 2d       	mov	r30, r0
     33c:	09 95       	icall
     33e:	08 95       	ret

00000340 <_ZN13Settings_Menu4backEv>:
				break;
			}
		}
	};
	
	void back()override
     340:	cf 93       	push	r28
     342:	df 93       	push	r29
     344:	ec 01       	movw	r28, r24
	{
		close();
     346:	e8 81       	ld	r30, Y
     348:	f9 81       	ldd	r31, Y+1	; 0x01
     34a:	04 80       	ldd	r0, Z+4	; 0x04
     34c:	f5 81       	ldd	r31, Z+5	; 0x05
     34e:	e0 2d       	mov	r30, r0
     350:	09 95       	icall
	    pointer=0;
     352:	1d 82       	std	Y+5, r1	; 0x05
     354:	1c 82       	std	Y+4, r1	; 0x04
	};
     356:	df 91       	pop	r29
     358:	cf 91       	pop	r28
     35a:	08 95       	ret

0000035c <_ZN13Settings_Menu7animateEv>:
	
	void animate()override
     35c:	08 95       	ret

0000035e <_ZN13Password_Menu6choiseEv>:
		symbol_pointer--;
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
		actions();
	};
	
	void choise()override
     35e:	af 92       	push	r10
     360:	bf 92       	push	r11
     362:	cf 92       	push	r12
     364:	df 92       	push	r13
     366:	ef 92       	push	r14
     368:	ff 92       	push	r15
     36a:	0f 93       	push	r16
     36c:	1f 93       	push	r17
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	ec 01       	movw	r28, r24
	{
		switch(symbol_pointer)
     374:	ee 81       	ldd	r30, Y+6	; 0x06
     376:	ff 81       	ldd	r31, Y+7	; 0x07
     378:	eb 30       	cpi	r30, 0x0B	; 11
     37a:	f1 05       	cpc	r31, r1
     37c:	08 f0       	brcs	.+2      	; 0x380 <_ZN13Password_Menu6choiseEv+0x22>
     37e:	25 c2       	rjmp	.+1098   	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     380:	ea 5b       	subi	r30, 0xBA	; 186
     382:	ff 4f       	sbci	r31, 0xFF	; 255
     384:	0c 94 e1 15 	jmp	0x2bc2	; 0x2bc2 <__tablejump2__>
		{
			case 0:
			{
    			 pointer++;
     388:	8c 81       	ldd	r24, Y+4	; 0x04
     38a:	9d 81       	ldd	r25, Y+5	; 0x05
     38c:	01 96       	adiw	r24, 0x01	; 1
     38e:	9d 83       	std	Y+5, r25	; 0x05
     390:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     392:	18 16       	cp	r1, r24
     394:	19 06       	cpc	r1, r25
     396:	0c f0       	brlt	.+2      	; 0x39a <_ZN13Password_Menu6choiseEv+0x3c>
     398:	18 c2       	rjmp	.+1072   	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     39a:	6e 01       	movw	r12, r28
     39c:	88 e0       	ldi	r24, 0x08	; 8
     39e:	c8 0e       	add	r12, r24
     3a0:	d1 1c       	adc	r13, r1
     3a2:	e1 2c       	mov	r14, r1
     3a4:	f1 2c       	mov	r15, r1
     3a6:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     3a8:	4a 89       	ldd	r20, Y+18	; 0x12
     3aa:	5b 89       	ldd	r21, Y+19	; 0x13
     3ac:	4e 5f       	subi	r20, 0xFE	; 254
     3ae:	5f 4f       	sbci	r21, 0xFF	; 255
     3b0:	f6 01       	movw	r30, r12
     3b2:	61 91       	ld	r22, Z+
     3b4:	71 91       	ld	r23, Z+
     3b6:	6f 01       	movw	r12, r30
     3b8:	08 e0       	ldi	r16, 0x08	; 8
     3ba:	10 e0       	ldi	r17, 0x00	; 0
     3bc:	21 e0       	ldi	r18, 0x01	; 1
     3be:	30 e0       	ldi	r19, 0x00	; 0
     3c0:	83 e9       	ldi	r24, 0x93	; 147
     3c2:	95 e0       	ldi	r25, 0x05	; 5
     3c4:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     3c8:	4a 89       	ldd	r20, Y+18	; 0x12
     3ca:	5b 89       	ldd	r21, Y+19	; 0x13
     3cc:	41 50       	subi	r20, 0x01	; 1
     3ce:	51 09       	sbc	r21, r1
     3d0:	f5 01       	movw	r30, r10
     3d2:	60 81       	ld	r22, Z
     3d4:	71 81       	ldd	r23, Z+1	; 0x01
     3d6:	21 e0       	ldi	r18, 0x01	; 1
     3d8:	30 e0       	ldi	r19, 0x00	; 0
     3da:	83 e9       	ldi	r24, 0x93	; 147
     3dc:	95 e0       	ldi	r25, 0x05	; 5
     3de:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		switch(symbol_pointer)
		{
			case 0:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     3e2:	ff ef       	ldi	r31, 0xFF	; 255
     3e4:	ef 1a       	sub	r14, r31
     3e6:	ff 0a       	sbc	r15, r31
     3e8:	8c 81       	ldd	r24, Y+4	; 0x04
     3ea:	9d 81       	ldd	r25, Y+5	; 0x05
     3ec:	e8 16       	cp	r14, r24
     3ee:	f9 06       	cpc	r15, r25
     3f0:	d4 f2       	brlt	.-76     	; 0x3a6 <_ZN13Password_Menu6choiseEv+0x48>
     3f2:	eb c1       	rjmp	.+982    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 1:
			{
    			 pointer++;
     3f4:	8c 81       	ldd	r24, Y+4	; 0x04
     3f6:	9d 81       	ldd	r25, Y+5	; 0x05
     3f8:	01 96       	adiw	r24, 0x01	; 1
     3fa:	9d 83       	std	Y+5, r25	; 0x05
     3fc:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     3fe:	18 16       	cp	r1, r24
     400:	19 06       	cpc	r1, r25
     402:	0c f0       	brlt	.+2      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     404:	e2 c1       	rjmp	.+964    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     406:	6e 01       	movw	r12, r28
     408:	88 e0       	ldi	r24, 0x08	; 8
     40a:	c8 0e       	add	r12, r24
     40c:	d1 1c       	adc	r13, r1
     40e:	e1 2c       	mov	r14, r1
     410:	f1 2c       	mov	r15, r1
     412:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     414:	4a 89       	ldd	r20, Y+18	; 0x12
     416:	5b 89       	ldd	r21, Y+19	; 0x13
     418:	4e 5f       	subi	r20, 0xFE	; 254
     41a:	5f 4f       	sbci	r21, 0xFF	; 255
     41c:	f6 01       	movw	r30, r12
     41e:	61 91       	ld	r22, Z+
     420:	71 91       	ld	r23, Z+
     422:	6f 01       	movw	r12, r30
     424:	08 e0       	ldi	r16, 0x08	; 8
     426:	10 e0       	ldi	r17, 0x00	; 0
     428:	21 e0       	ldi	r18, 0x01	; 1
     42a:	30 e0       	ldi	r19, 0x00	; 0
     42c:	83 e9       	ldi	r24, 0x93	; 147
     42e:	95 e0       	ldi	r25, 0x05	; 5
     430:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     434:	4a 89       	ldd	r20, Y+18	; 0x12
     436:	5b 89       	ldd	r21, Y+19	; 0x13
     438:	41 50       	subi	r20, 0x01	; 1
     43a:	51 09       	sbc	r21, r1
     43c:	f5 01       	movw	r30, r10
     43e:	60 81       	ld	r22, Z
     440:	71 81       	ldd	r23, Z+1	; 0x01
     442:	21 e0       	ldi	r18, 0x01	; 1
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	83 e9       	ldi	r24, 0x93	; 147
     448:	95 e0       	ldi	r25, 0x05	; 5
     44a:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 1:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     44e:	ff ef       	ldi	r31, 0xFF	; 255
     450:	ef 1a       	sub	r14, r31
     452:	ff 0a       	sbc	r15, r31
     454:	8c 81       	ldd	r24, Y+4	; 0x04
     456:	9d 81       	ldd	r25, Y+5	; 0x05
     458:	e8 16       	cp	r14, r24
     45a:	f9 06       	cpc	r15, r25
     45c:	d4 f2       	brlt	.-76     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     45e:	b5 c1       	rjmp	.+874    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 2:
			{
	    			 pointer++;
     460:	8c 81       	ldd	r24, Y+4	; 0x04
     462:	9d 81       	ldd	r25, Y+5	; 0x05
     464:	01 96       	adiw	r24, 0x01	; 1
     466:	9d 83       	std	Y+5, r25	; 0x05
     468:	8c 83       	std	Y+4, r24	; 0x04
	    			 for(int i=0;i<pointer;i++)
     46a:	18 16       	cp	r1, r24
     46c:	19 06       	cpc	r1, r25
     46e:	0c f0       	brlt	.+2      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     470:	ac c1       	rjmp	.+856    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     472:	6e 01       	movw	r12, r28
     474:	88 e0       	ldi	r24, 0x08	; 8
     476:	c8 0e       	add	r12, r24
     478:	d1 1c       	adc	r13, r1
     47a:	e1 2c       	mov	r14, r1
     47c:	f1 2c       	mov	r15, r1
     47e:	56 01       	movw	r10, r12
	    			 {
		    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     480:	4a 89       	ldd	r20, Y+18	; 0x12
     482:	5b 89       	ldd	r21, Y+19	; 0x13
     484:	4e 5f       	subi	r20, 0xFE	; 254
     486:	5f 4f       	sbci	r21, 0xFF	; 255
     488:	f6 01       	movw	r30, r12
     48a:	61 91       	ld	r22, Z+
     48c:	71 91       	ld	r23, Z+
     48e:	6f 01       	movw	r12, r30
     490:	08 e0       	ldi	r16, 0x08	; 8
     492:	10 e0       	ldi	r17, 0x00	; 0
     494:	21 e0       	ldi	r18, 0x01	; 1
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	83 e9       	ldi	r24, 0x93	; 147
     49a:	95 e0       	ldi	r25, 0x05	; 5
     49c:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     4a0:	4a 89       	ldd	r20, Y+18	; 0x12
     4a2:	5b 89       	ldd	r21, Y+19	; 0x13
     4a4:	41 50       	subi	r20, 0x01	; 1
     4a6:	51 09       	sbc	r21, r1
     4a8:	f5 01       	movw	r30, r10
     4aa:	60 81       	ld	r22, Z
     4ac:	71 81       	ldd	r23, Z+1	; 0x01
     4ae:	21 e0       	ldi	r18, 0x01	; 1
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	83 e9       	ldi	r24, 0x93	; 147
     4b4:	95 e0       	ldi	r25, 0x05	; 5
     4b6:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 2:
			{
	    			 pointer++;
	    			 for(int i=0;i<pointer;i++)
     4ba:	ff ef       	ldi	r31, 0xFF	; 255
     4bc:	ef 1a       	sub	r14, r31
     4be:	ff 0a       	sbc	r15, r31
     4c0:	8c 81       	ldd	r24, Y+4	; 0x04
     4c2:	9d 81       	ldd	r25, Y+5	; 0x05
     4c4:	e8 16       	cp	r14, r24
     4c6:	f9 06       	cpc	r15, r25
     4c8:	d4 f2       	brlt	.-76     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     4ca:	7f c1       	rjmp	.+766    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
	    			 }
	    			 break;
			}
			case 3:
			{
    			 pointer++;
     4cc:	8c 81       	ldd	r24, Y+4	; 0x04
     4ce:	9d 81       	ldd	r25, Y+5	; 0x05
     4d0:	01 96       	adiw	r24, 0x01	; 1
     4d2:	9d 83       	std	Y+5, r25	; 0x05
     4d4:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     4d6:	18 16       	cp	r1, r24
     4d8:	19 06       	cpc	r1, r25
     4da:	0c f0       	brlt	.+2      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     4dc:	76 c1       	rjmp	.+748    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     4de:	6e 01       	movw	r12, r28
     4e0:	88 e0       	ldi	r24, 0x08	; 8
     4e2:	c8 0e       	add	r12, r24
     4e4:	d1 1c       	adc	r13, r1
     4e6:	e1 2c       	mov	r14, r1
     4e8:	f1 2c       	mov	r15, r1
     4ea:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     4ec:	4a 89       	ldd	r20, Y+18	; 0x12
     4ee:	5b 89       	ldd	r21, Y+19	; 0x13
     4f0:	4e 5f       	subi	r20, 0xFE	; 254
     4f2:	5f 4f       	sbci	r21, 0xFF	; 255
     4f4:	f6 01       	movw	r30, r12
     4f6:	61 91       	ld	r22, Z+
     4f8:	71 91       	ld	r23, Z+
     4fa:	6f 01       	movw	r12, r30
     4fc:	08 e0       	ldi	r16, 0x08	; 8
     4fe:	10 e0       	ldi	r17, 0x00	; 0
     500:	21 e0       	ldi	r18, 0x01	; 1
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	83 e9       	ldi	r24, 0x93	; 147
     506:	95 e0       	ldi	r25, 0x05	; 5
     508:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     50c:	4a 89       	ldd	r20, Y+18	; 0x12
     50e:	5b 89       	ldd	r21, Y+19	; 0x13
     510:	41 50       	subi	r20, 0x01	; 1
     512:	51 09       	sbc	r21, r1
     514:	f5 01       	movw	r30, r10
     516:	60 81       	ld	r22, Z
     518:	71 81       	ldd	r23, Z+1	; 0x01
     51a:	21 e0       	ldi	r18, 0x01	; 1
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	83 e9       	ldi	r24, 0x93	; 147
     520:	95 e0       	ldi	r25, 0x05	; 5
     522:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     526:	ff ef       	ldi	r31, 0xFF	; 255
     528:	ef 1a       	sub	r14, r31
     52a:	ff 0a       	sbc	r15, r31
     52c:	8c 81       	ldd	r24, Y+4	; 0x04
     52e:	9d 81       	ldd	r25, Y+5	; 0x05
     530:	e8 16       	cp	r14, r24
     532:	f9 06       	cpc	r15, r25
     534:	d4 f2       	brlt	.-76     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
     536:	49 c1       	rjmp	.+658    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 4:
			{
    			 pointer++;
     538:	8c 81       	ldd	r24, Y+4	; 0x04
     53a:	9d 81       	ldd	r25, Y+5	; 0x05
     53c:	01 96       	adiw	r24, 0x01	; 1
     53e:	9d 83       	std	Y+5, r25	; 0x05
     540:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     542:	18 16       	cp	r1, r24
     544:	19 06       	cpc	r1, r25
     546:	0c f0       	brlt	.+2      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
     548:	40 c1       	rjmp	.+640    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     54a:	6e 01       	movw	r12, r28
     54c:	88 e0       	ldi	r24, 0x08	; 8
     54e:	c8 0e       	add	r12, r24
     550:	d1 1c       	adc	r13, r1
     552:	e1 2c       	mov	r14, r1
     554:	f1 2c       	mov	r15, r1
     556:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     558:	4a 89       	ldd	r20, Y+18	; 0x12
     55a:	5b 89       	ldd	r21, Y+19	; 0x13
     55c:	4e 5f       	subi	r20, 0xFE	; 254
     55e:	5f 4f       	sbci	r21, 0xFF	; 255
     560:	f6 01       	movw	r30, r12
     562:	61 91       	ld	r22, Z+
     564:	71 91       	ld	r23, Z+
     566:	6f 01       	movw	r12, r30
     568:	08 e0       	ldi	r16, 0x08	; 8
     56a:	10 e0       	ldi	r17, 0x00	; 0
     56c:	21 e0       	ldi	r18, 0x01	; 1
     56e:	30 e0       	ldi	r19, 0x00	; 0
     570:	83 e9       	ldi	r24, 0x93	; 147
     572:	95 e0       	ldi	r25, 0x05	; 5
     574:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     578:	4a 89       	ldd	r20, Y+18	; 0x12
     57a:	5b 89       	ldd	r21, Y+19	; 0x13
     57c:	41 50       	subi	r20, 0x01	; 1
     57e:	51 09       	sbc	r21, r1
     580:	f5 01       	movw	r30, r10
     582:	60 81       	ld	r22, Z
     584:	71 81       	ldd	r23, Z+1	; 0x01
     586:	21 e0       	ldi	r18, 0x01	; 1
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	83 e9       	ldi	r24, 0x93	; 147
     58c:	95 e0       	ldi	r25, 0x05	; 5
     58e:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 4:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     592:	ff ef       	ldi	r31, 0xFF	; 255
     594:	ef 1a       	sub	r14, r31
     596:	ff 0a       	sbc	r15, r31
     598:	8c 81       	ldd	r24, Y+4	; 0x04
     59a:	9d 81       	ldd	r25, Y+5	; 0x05
     59c:	e8 16       	cp	r14, r24
     59e:	f9 06       	cpc	r15, r25
     5a0:	d4 f2       	brlt	.-76     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
     5a2:	13 c1       	rjmp	.+550    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 5:
			{
    			 pointer++;
     5a4:	8c 81       	ldd	r24, Y+4	; 0x04
     5a6:	9d 81       	ldd	r25, Y+5	; 0x05
     5a8:	01 96       	adiw	r24, 0x01	; 1
     5aa:	9d 83       	std	Y+5, r25	; 0x05
     5ac:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     5ae:	18 16       	cp	r1, r24
     5b0:	19 06       	cpc	r1, r25
     5b2:	0c f0       	brlt	.+2      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
     5b4:	0a c1       	rjmp	.+532    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     5b6:	6e 01       	movw	r12, r28
     5b8:	88 e0       	ldi	r24, 0x08	; 8
     5ba:	c8 0e       	add	r12, r24
     5bc:	d1 1c       	adc	r13, r1
     5be:	e1 2c       	mov	r14, r1
     5c0:	f1 2c       	mov	r15, r1
     5c2:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     5c4:	4a 89       	ldd	r20, Y+18	; 0x12
     5c6:	5b 89       	ldd	r21, Y+19	; 0x13
     5c8:	4e 5f       	subi	r20, 0xFE	; 254
     5ca:	5f 4f       	sbci	r21, 0xFF	; 255
     5cc:	f6 01       	movw	r30, r12
     5ce:	61 91       	ld	r22, Z+
     5d0:	71 91       	ld	r23, Z+
     5d2:	6f 01       	movw	r12, r30
     5d4:	08 e0       	ldi	r16, 0x08	; 8
     5d6:	10 e0       	ldi	r17, 0x00	; 0
     5d8:	21 e0       	ldi	r18, 0x01	; 1
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	83 e9       	ldi	r24, 0x93	; 147
     5de:	95 e0       	ldi	r25, 0x05	; 5
     5e0:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     5e4:	4a 89       	ldd	r20, Y+18	; 0x12
     5e6:	5b 89       	ldd	r21, Y+19	; 0x13
     5e8:	41 50       	subi	r20, 0x01	; 1
     5ea:	51 09       	sbc	r21, r1
     5ec:	f5 01       	movw	r30, r10
     5ee:	60 81       	ld	r22, Z
     5f0:	71 81       	ldd	r23, Z+1	; 0x01
     5f2:	21 e0       	ldi	r18, 0x01	; 1
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	83 e9       	ldi	r24, 0x93	; 147
     5f8:	95 e0       	ldi	r25, 0x05	; 5
     5fa:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 5:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     5fe:	ff ef       	ldi	r31, 0xFF	; 255
     600:	ef 1a       	sub	r14, r31
     602:	ff 0a       	sbc	r15, r31
     604:	8c 81       	ldd	r24, Y+4	; 0x04
     606:	9d 81       	ldd	r25, Y+5	; 0x05
     608:	e8 16       	cp	r14, r24
     60a:	f9 06       	cpc	r15, r25
     60c:	d4 f2       	brlt	.-76     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
     60e:	dd c0       	rjmp	.+442    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 6:
			{
    			 pointer++;
     610:	8c 81       	ldd	r24, Y+4	; 0x04
     612:	9d 81       	ldd	r25, Y+5	; 0x05
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	9d 83       	std	Y+5, r25	; 0x05
     618:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     61a:	18 16       	cp	r1, r24
     61c:	19 06       	cpc	r1, r25
     61e:	0c f0       	brlt	.+2      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
     620:	d4 c0       	rjmp	.+424    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     622:	6e 01       	movw	r12, r28
     624:	88 e0       	ldi	r24, 0x08	; 8
     626:	c8 0e       	add	r12, r24
     628:	d1 1c       	adc	r13, r1
     62a:	e1 2c       	mov	r14, r1
     62c:	f1 2c       	mov	r15, r1
     62e:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     630:	4a 89       	ldd	r20, Y+18	; 0x12
     632:	5b 89       	ldd	r21, Y+19	; 0x13
     634:	4e 5f       	subi	r20, 0xFE	; 254
     636:	5f 4f       	sbci	r21, 0xFF	; 255
     638:	f6 01       	movw	r30, r12
     63a:	61 91       	ld	r22, Z+
     63c:	71 91       	ld	r23, Z+
     63e:	6f 01       	movw	r12, r30
     640:	08 e0       	ldi	r16, 0x08	; 8
     642:	10 e0       	ldi	r17, 0x00	; 0
     644:	21 e0       	ldi	r18, 0x01	; 1
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	83 e9       	ldi	r24, 0x93	; 147
     64a:	95 e0       	ldi	r25, 0x05	; 5
     64c:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     650:	4a 89       	ldd	r20, Y+18	; 0x12
     652:	5b 89       	ldd	r21, Y+19	; 0x13
     654:	41 50       	subi	r20, 0x01	; 1
     656:	51 09       	sbc	r21, r1
     658:	f5 01       	movw	r30, r10
     65a:	60 81       	ld	r22, Z
     65c:	71 81       	ldd	r23, Z+1	; 0x01
     65e:	21 e0       	ldi	r18, 0x01	; 1
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	83 e9       	ldi	r24, 0x93	; 147
     664:	95 e0       	ldi	r25, 0x05	; 5
     666:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 6:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     66a:	ff ef       	ldi	r31, 0xFF	; 255
     66c:	ef 1a       	sub	r14, r31
     66e:	ff 0a       	sbc	r15, r31
     670:	8c 81       	ldd	r24, Y+4	; 0x04
     672:	9d 81       	ldd	r25, Y+5	; 0x05
     674:	e8 16       	cp	r14, r24
     676:	f9 06       	cpc	r15, r25
     678:	d4 f2       	brlt	.-76     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
     67a:	a7 c0       	rjmp	.+334    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 7:
			{
    			 pointer++;
     67c:	8c 81       	ldd	r24, Y+4	; 0x04
     67e:	9d 81       	ldd	r25, Y+5	; 0x05
     680:	01 96       	adiw	r24, 0x01	; 1
     682:	9d 83       	std	Y+5, r25	; 0x05
     684:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     686:	18 16       	cp	r1, r24
     688:	19 06       	cpc	r1, r25
     68a:	0c f0       	brlt	.+2      	; 0x68e <__LOCK_REGION_LENGTH__+0x28e>
     68c:	9e c0       	rjmp	.+316    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     68e:	6e 01       	movw	r12, r28
     690:	88 e0       	ldi	r24, 0x08	; 8
     692:	c8 0e       	add	r12, r24
     694:	d1 1c       	adc	r13, r1
     696:	e1 2c       	mov	r14, r1
     698:	f1 2c       	mov	r15, r1
     69a:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     69c:	4a 89       	ldd	r20, Y+18	; 0x12
     69e:	5b 89       	ldd	r21, Y+19	; 0x13
     6a0:	4e 5f       	subi	r20, 0xFE	; 254
     6a2:	5f 4f       	sbci	r21, 0xFF	; 255
     6a4:	f6 01       	movw	r30, r12
     6a6:	61 91       	ld	r22, Z+
     6a8:	71 91       	ld	r23, Z+
     6aa:	6f 01       	movw	r12, r30
     6ac:	08 e0       	ldi	r16, 0x08	; 8
     6ae:	10 e0       	ldi	r17, 0x00	; 0
     6b0:	21 e0       	ldi	r18, 0x01	; 1
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	83 e9       	ldi	r24, 0x93	; 147
     6b6:	95 e0       	ldi	r25, 0x05	; 5
     6b8:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     6bc:	4a 89       	ldd	r20, Y+18	; 0x12
     6be:	5b 89       	ldd	r21, Y+19	; 0x13
     6c0:	41 50       	subi	r20, 0x01	; 1
     6c2:	51 09       	sbc	r21, r1
     6c4:	f5 01       	movw	r30, r10
     6c6:	60 81       	ld	r22, Z
     6c8:	71 81       	ldd	r23, Z+1	; 0x01
     6ca:	21 e0       	ldi	r18, 0x01	; 1
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	83 e9       	ldi	r24, 0x93	; 147
     6d0:	95 e0       	ldi	r25, 0x05	; 5
     6d2:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 7:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     6d6:	ff ef       	ldi	r31, 0xFF	; 255
     6d8:	ef 1a       	sub	r14, r31
     6da:	ff 0a       	sbc	r15, r31
     6dc:	8c 81       	ldd	r24, Y+4	; 0x04
     6de:	9d 81       	ldd	r25, Y+5	; 0x05
     6e0:	e8 16       	cp	r14, r24
     6e2:	f9 06       	cpc	r15, r25
     6e4:	d4 f2       	brlt	.-76     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
     6e6:	71 c0       	rjmp	.+226    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 8:
			{
    			 pointer++;
     6e8:	8c 81       	ldd	r24, Y+4	; 0x04
     6ea:	9d 81       	ldd	r25, Y+5	; 0x05
     6ec:	01 96       	adiw	r24, 0x01	; 1
     6ee:	9d 83       	std	Y+5, r25	; 0x05
     6f0:	8c 83       	std	Y+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
     6f2:	18 16       	cp	r1, r24
     6f4:	19 06       	cpc	r1, r25
     6f6:	0c f0       	brlt	.+2      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
     6f8:	68 c0       	rjmp	.+208    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     6fa:	6e 01       	movw	r12, r28
     6fc:	88 e0       	ldi	r24, 0x08	; 8
     6fe:	c8 0e       	add	r12, r24
     700:	d1 1c       	adc	r13, r1
     702:	e1 2c       	mov	r14, r1
     704:	f1 2c       	mov	r15, r1
     706:	56 01       	movw	r10, r12
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     708:	4a 89       	ldd	r20, Y+18	; 0x12
     70a:	5b 89       	ldd	r21, Y+19	; 0x13
     70c:	4e 5f       	subi	r20, 0xFE	; 254
     70e:	5f 4f       	sbci	r21, 0xFF	; 255
     710:	f6 01       	movw	r30, r12
     712:	61 91       	ld	r22, Z+
     714:	71 91       	ld	r23, Z+
     716:	6f 01       	movw	r12, r30
     718:	08 e0       	ldi	r16, 0x08	; 8
     71a:	10 e0       	ldi	r17, 0x00	; 0
     71c:	21 e0       	ldi	r18, 0x01	; 1
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	83 e9       	ldi	r24, 0x93	; 147
     722:	95 e0       	ldi	r25, 0x05	; 5
     724:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     728:	4a 89       	ldd	r20, Y+18	; 0x12
     72a:	5b 89       	ldd	r21, Y+19	; 0x13
     72c:	41 50       	subi	r20, 0x01	; 1
     72e:	51 09       	sbc	r21, r1
     730:	f5 01       	movw	r30, r10
     732:	60 81       	ld	r22, Z
     734:	71 81       	ldd	r23, Z+1	; 0x01
     736:	21 e0       	ldi	r18, 0x01	; 1
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	83 e9       	ldi	r24, 0x93	; 147
     73c:	95 e0       	ldi	r25, 0x05	; 5
     73e:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 8:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
     742:	ff ef       	ldi	r31, 0xFF	; 255
     744:	ef 1a       	sub	r14, r31
     746:	ff 0a       	sbc	r15, r31
     748:	8c 81       	ldd	r24, Y+4	; 0x04
     74a:	9d 81       	ldd	r25, Y+5	; 0x05
     74c:	e8 16       	cp	r14, r24
     74e:	f9 06       	cpc	r15, r25
     750:	d4 f2       	brlt	.-76     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
     752:	3b c0       	rjmp	.+118    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
    			 }
    			 break;
			}
			case 9:
			{
    			 pointer++;
     754:	8c 81       	ldd	r24, Y+4	; 0x04
     756:	9d 81       	ldd	r25, Y+5	; 0x05
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	9d 83       	std	Y+5, r25	; 0x05
     75c:	8c 83       	std	Y+4, r24	; 0x04
				for(int i=0;i<pointer;i++)
     75e:	18 16       	cp	r1, r24
     760:	19 06       	cpc	r1, r25
     762:	9c f5       	brge	.+102    	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
     764:	6e 01       	movw	r12, r28
     766:	88 e0       	ldi	r24, 0x08	; 8
     768:	c8 0e       	add	r12, r24
     76a:	d1 1c       	adc	r13, r1
     76c:	e1 2c       	mov	r14, r1
     76e:	f1 2c       	mov	r15, r1
     770:	56 01       	movw	r10, r12
				{
					oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
     772:	4a 89       	ldd	r20, Y+18	; 0x12
     774:	5b 89       	ldd	r21, Y+19	; 0x13
     776:	4e 5f       	subi	r20, 0xFE	; 254
     778:	5f 4f       	sbci	r21, 0xFF	; 255
     77a:	f6 01       	movw	r30, r12
     77c:	61 91       	ld	r22, Z+
     77e:	71 91       	ld	r23, Z+
     780:	6f 01       	movw	r12, r30
     782:	08 e0       	ldi	r16, 0x08	; 8
     784:	10 e0       	ldi	r17, 0x00	; 0
     786:	21 e0       	ldi	r18, 0x01	; 1
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	83 e9       	ldi	r24, 0x93	; 147
     78c:	95 e0       	ldi	r25, 0x05	; 5
     78e:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
     792:	4a 89       	ldd	r20, Y+18	; 0x12
     794:	5b 89       	ldd	r21, Y+19	; 0x13
     796:	41 50       	subi	r20, 0x01	; 1
     798:	51 09       	sbc	r21, r1
     79a:	f5 01       	movw	r30, r10
     79c:	60 81       	ld	r22, Z
     79e:	71 81       	ldd	r23, Z+1	; 0x01
     7a0:	21 e0       	ldi	r18, 0x01	; 1
     7a2:	30 e0       	ldi	r19, 0x00	; 0
     7a4:	83 e9       	ldi	r24, 0x93	; 147
     7a6:	95 e0       	ldi	r25, 0x05	; 5
     7a8:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 9:
			{
    			 pointer++;
				for(int i=0;i<pointer;i++)
     7ac:	ff ef       	ldi	r31, 0xFF	; 255
     7ae:	ef 1a       	sub	r14, r31
     7b0:	ff 0a       	sbc	r15, r31
     7b2:	8c 81       	ldd	r24, Y+4	; 0x04
     7b4:	9d 81       	ldd	r25, Y+5	; 0x05
     7b6:	e8 16       	cp	r14, r24
     7b8:	f9 06       	cpc	r15, r25
     7ba:	d4 f2       	brlt	.-76     	; 0x770 <__LOCK_REGION_LENGTH__+0x370>
     7bc:	06 c0       	rjmp	.+12     	; 0x7ca <__LOCK_REGION_LENGTH__+0x3ca>
				}
				break;
			}
			case 10:
			{
				 back();
     7be:	e8 81       	ld	r30, Y
     7c0:	f9 81       	ldd	r31, Y+1	; 0x01
     7c2:	04 84       	ldd	r0, Z+12	; 0x0c
     7c4:	f5 85       	ldd	r31, Z+13	; 0x0d
     7c6:	e0 2d       	mov	r30, r0
     7c8:	09 95       	icall
				break;
			}
		}
		     if(pointer>PASSWORD_MENU_POINER_COUNT) {
     7ca:	8c 81       	ldd	r24, Y+4	; 0x04
     7cc:	9d 81       	ldd	r25, Y+5	; 0x05
     7ce:	05 97       	sbiw	r24, 0x05	; 5
     7d0:	6c f0       	brlt	.+26     	; 0x7ec <__LOCK_REGION_LENGTH__+0x3ec>
				 
				Main_Menu_Status=true;
     7d2:	81 e0       	ldi	r24, 0x01	; 1
     7d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
				Password_Menu_Status=false;
     7d8:	10 92 92 05 	sts	0x0592, r1	; 0x800592 <Password_Menu_Status>
				close();
     7dc:	e8 81       	ld	r30, Y
     7de:	f9 81       	ldd	r31, Y+1	; 0x01
     7e0:	04 80       	ldd	r0, Z+4	; 0x04
     7e2:	f5 81       	ldd	r31, Z+5	; 0x05
     7e4:	e0 2d       	mov	r30, r0
     7e6:	ce 01       	movw	r24, r28
     7e8:	09 95       	icall
     7ea:	09 c0       	rjmp	.+18     	; 0x7fe <__LOCK_REGION_LENGTH__+0x3fe>
				 }
			 else
			 {
				 symbol_pointer=0;
     7ec:	1f 82       	std	Y+7, r1	; 0x07
     7ee:	1e 82       	std	Y+6, r1	; 0x06
				 actions();	 
     7f0:	e8 81       	ld	r30, Y
     7f2:	f9 81       	ldd	r31, Y+1	; 0x01
     7f4:	00 88       	ldd	r0, Z+16	; 0x10
     7f6:	f1 89       	ldd	r31, Z+17	; 0x11
     7f8:	e0 2d       	mov	r30, r0
     7fa:	ce 01       	movw	r24, r28
     7fc:	09 95       	icall
			 }
		
		
	};
     7fe:	df 91       	pop	r29
     800:	cf 91       	pop	r28
     802:	1f 91       	pop	r17
     804:	0f 91       	pop	r16
     806:	ff 90       	pop	r15
     808:	ef 90       	pop	r14
     80a:	df 90       	pop	r13
     80c:	cf 90       	pop	r12
     80e:	bf 90       	pop	r11
     810:	af 90       	pop	r10
     812:	08 95       	ret

00000814 <_ZN13Password_Menu4backEv>:
	
	void back()override
     814:	0f 93       	push	r16
     816:	1f 93       	push	r17
     818:	cf 93       	push	r28
     81a:	df 93       	push	r29
     81c:	ec 01       	movw	r28, r24
	{
		oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
     81e:	4a 89       	ldd	r20, Y+18	; 0x12
     820:	5b 89       	ldd	r21, Y+19	; 0x13
     822:	ec 81       	ldd	r30, Y+4	; 0x04
     824:	fd 81       	ldd	r31, Y+5	; 0x05
     826:	34 96       	adiw	r30, 0x04	; 4
     828:	ee 0f       	add	r30, r30
     82a:	ff 1f       	adc	r31, r31
     82c:	e8 0f       	add	r30, r24
     82e:	f9 1f       	adc	r31, r25
     830:	60 81       	ld	r22, Z
     832:	71 81       	ldd	r23, Z+1	; 0x01
     834:	08 e0       	ldi	r16, 0x08	; 8
     836:	10 e0       	ldi	r17, 0x00	; 0
     838:	21 e0       	ldi	r18, 0x01	; 1
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	83 e9       	ldi	r24, 0x93	; 147
     83e:	95 e0       	ldi	r25, 0x05	; 5
     840:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Clear_Bufer_part(x[pointer],y+2,1,8);
     844:	4a 89       	ldd	r20, Y+18	; 0x12
     846:	5b 89       	ldd	r21, Y+19	; 0x13
     848:	4e 5f       	subi	r20, 0xFE	; 254
     84a:	5f 4f       	sbci	r21, 0xFF	; 255
     84c:	ec 81       	ldd	r30, Y+4	; 0x04
     84e:	fd 81       	ldd	r31, Y+5	; 0x05
     850:	34 96       	adiw	r30, 0x04	; 4
     852:	ee 0f       	add	r30, r30
     854:	ff 1f       	adc	r31, r31
     856:	ec 0f       	add	r30, r28
     858:	fd 1f       	adc	r31, r29
     85a:	60 81       	ld	r22, Z
     85c:	71 81       	ldd	r23, Z+1	; 0x01
     85e:	21 e0       	ldi	r18, 0x01	; 1
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	83 e9       	ldi	r24, 0x93	; 147
     864:	95 e0       	ldi	r25, 0x05	; 5
     866:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Clear_Bufer_part(x[pointer],y-1,1,8);
     86a:	4a 89       	ldd	r20, Y+18	; 0x12
     86c:	5b 89       	ldd	r21, Y+19	; 0x13
     86e:	41 50       	subi	r20, 0x01	; 1
     870:	51 09       	sbc	r21, r1
     872:	ec 81       	ldd	r30, Y+4	; 0x04
     874:	fd 81       	ldd	r31, Y+5	; 0x05
     876:	34 96       	adiw	r30, 0x04	; 4
     878:	ee 0f       	add	r30, r30
     87a:	ff 1f       	adc	r31, r31
     87c:	ec 0f       	add	r30, r28
     87e:	fd 1f       	adc	r31, r29
     880:	60 81       	ld	r22, Z
     882:	71 81       	ldd	r23, Z+1	; 0x01
     884:	21 e0       	ldi	r18, 0x01	; 1
     886:	30 e0       	ldi	r19, 0x00	; 0
     888:	83 e9       	ldi	r24, 0x93	; 147
     88a:	95 e0       	ldi	r25, 0x05	; 5
     88c:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		pointer--;
     890:	8c 81       	ldd	r24, Y+4	; 0x04
     892:	9d 81       	ldd	r25, Y+5	; 0x05
     894:	01 97       	sbiw	r24, 0x01	; 1
     896:	9d 83       	std	Y+5, r25	; 0x05
     898:	8c 83       	std	Y+4, r24	; 0x04
		if(pointer<0) 
     89a:	99 23       	and	r25, r25
     89c:	7c f4       	brge	.+30     	; 0x8bc <_ZN13Password_Menu4backEv+0xa8>
		{
			Password_Menu_Status=false;
     89e:	10 92 92 05 	sts	0x0592, r1	; 0x800592 <Password_Menu_Status>
		    Main_Menu_Status=true;
     8a2:	81 e0       	ldi	r24, 0x01	; 1
     8a4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
				 close();
     8a8:	e8 81       	ld	r30, Y
     8aa:	f9 81       	ldd	r31, Y+1	; 0x01
     8ac:	04 80       	ldd	r0, Z+4	; 0x04
     8ae:	f5 81       	ldd	r31, Z+5	; 0x05
     8b0:	e0 2d       	mov	r30, r0
     8b2:	ce 01       	movw	r24, r28
     8b4:	09 95       	icall
				 pointer=0;
     8b6:	1d 82       	std	Y+5, r1	; 0x05
     8b8:	1c 82       	std	Y+4, r1	; 0x04
     8ba:	07 c0       	rjmp	.+14     	; 0x8ca <_ZN13Password_Menu4backEv+0xb6>
		}
		else actions();	
     8bc:	e8 81       	ld	r30, Y
     8be:	f9 81       	ldd	r31, Y+1	; 0x01
     8c0:	00 88       	ldd	r0, Z+16	; 0x10
     8c2:	f1 89       	ldd	r31, Z+17	; 0x11
     8c4:	e0 2d       	mov	r30, r0
     8c6:	ce 01       	movw	r24, r28
     8c8:	09 95       	icall
	};
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	1f 91       	pop	r17
     8d0:	0f 91       	pop	r16
     8d2:	08 95       	ret

000008d4 <_ZN13Settings_Menu7actionsEv>:
	{
		
		
	};
	
	void actions()override
     8d4:	ef 92       	push	r14
     8d6:	ff 92       	push	r15
     8d8:	0f 93       	push	r16
     8da:	1f 93       	push	r17
     8dc:	cf 93       	push	r28
     8de:	df 93       	push	r29
     8e0:	ec 01       	movw	r28, r24
	{
		if(Settings_Menu_Status){
     8e2:	90 91 91 05 	lds	r25, 0x0591	; 0x800591 <Settings_Menu_Status>
     8e6:	99 23       	and	r25, r25
     8e8:	09 f4       	brne	.+2      	; 0x8ec <_ZN13Settings_Menu7actionsEv+0x18>
     8ea:	6a c3       	rjmp	.+1748   	; 0xfc0 <_ZN13Settings_Menu7actionsEv+0x6ec>
			switch(pointer)
     8ec:	8c 81       	ldd	r24, Y+4	; 0x04
     8ee:	9d 81       	ldd	r25, Y+5	; 0x05
     8f0:	81 30       	cpi	r24, 0x01	; 1
     8f2:	91 05       	cpc	r25, r1
     8f4:	09 f4       	brne	.+2      	; 0x8f8 <_ZN13Settings_Menu7actionsEv+0x24>
     8f6:	56 c1       	rjmp	.+684    	; 0xba4 <_ZN13Settings_Menu7actionsEv+0x2d0>
     8f8:	1c f4       	brge	.+6      	; 0x900 <_ZN13Settings_Menu7actionsEv+0x2c>
     8fa:	89 2b       	or	r24, r25
     8fc:	49 f0       	breq	.+18     	; 0x910 <_ZN13Settings_Menu7actionsEv+0x3c>
     8fe:	60 c3       	rjmp	.+1728   	; 0xfc0 <_ZN13Settings_Menu7actionsEv+0x6ec>
     900:	82 30       	cpi	r24, 0x02	; 2
     902:	91 05       	cpc	r25, r1
     904:	09 f4       	brne	.+2      	; 0x908 <_ZN13Settings_Menu7actionsEv+0x34>
     906:	6c c2       	rjmp	.+1240   	; 0xde0 <_ZN13Settings_Menu7actionsEv+0x50c>
     908:	03 97       	sbiw	r24, 0x03	; 3
     90a:	09 f4       	brne	.+2      	; 0x90e <_ZN13Settings_Menu7actionsEv+0x3a>
     90c:	36 c3       	rjmp	.+1644   	; 0xf7a <_ZN13Settings_Menu7actionsEv+0x6a6>
     90e:	58 c3       	rjmp	.+1712   	; 0xfc0 <_ZN13Settings_Menu7actionsEv+0x6ec>
			{
				case 0:
				{
					oled.OLED_Clear_Bufer_part(0,y,16,8);
     910:	4e 85       	ldd	r20, Y+14	; 0x0e
     912:	5f 85       	ldd	r21, Y+15	; 0x0f
     914:	08 e0       	ldi	r16, 0x08	; 8
     916:	10 e0       	ldi	r17, 0x00	; 0
     918:	20 e1       	ldi	r18, 0x10	; 16
     91a:	30 e0       	ldi	r19, 0x00	; 0
     91c:	60 e0       	ldi	r22, 0x00	; 0
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	83 e9       	ldi	r24, 0x93	; 147
     922:	95 e0       	ldi	r25, 0x05	; 5
     924:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Write_To_Bufer(x[pointer]+0,y,1,8,S);
     928:	4e 85       	ldd	r20, Y+14	; 0x0e
     92a:	5f 85       	ldd	r21, Y+15	; 0x0f
     92c:	ec 81       	ldd	r30, Y+4	; 0x04
     92e:	fd 81       	ldd	r31, Y+5	; 0x05
     930:	33 96       	adiw	r30, 0x03	; 3
     932:	ee 0f       	add	r30, r30
     934:	ff 1f       	adc	r31, r31
     936:	ec 0f       	add	r30, r28
     938:	fd 1f       	adc	r31, r29
     93a:	60 81       	ld	r22, Z
     93c:	71 81       	ldd	r23, Z+1	; 0x01
     93e:	0f 2e       	mov	r0, r31
     940:	f9 e2       	ldi	r31, 0x29	; 41
     942:	ef 2e       	mov	r14, r31
     944:	f1 e0       	ldi	r31, 0x01	; 1
     946:	ff 2e       	mov	r15, r31
     948:	f0 2d       	mov	r31, r0
     94a:	21 e0       	ldi	r18, 0x01	; 1
     94c:	30 e0       	ldi	r19, 0x00	; 0
     94e:	83 e9       	ldi	r24, 0x93	; 147
     950:	95 e0       	ldi	r25, 0x05	; 5
     952:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+8,y,1,8,E);
     956:	4e 85       	ldd	r20, Y+14	; 0x0e
     958:	5f 85       	ldd	r21, Y+15	; 0x0f
     95a:	ec 81       	ldd	r30, Y+4	; 0x04
     95c:	fd 81       	ldd	r31, Y+5	; 0x05
     95e:	33 96       	adiw	r30, 0x03	; 3
     960:	ee 0f       	add	r30, r30
     962:	ff 1f       	adc	r31, r31
     964:	ec 0f       	add	r30, r28
     966:	fd 1f       	adc	r31, r29
     968:	60 81       	ld	r22, Z
     96a:	71 81       	ldd	r23, Z+1	; 0x01
     96c:	68 5f       	subi	r22, 0xF8	; 248
     96e:	7f 4f       	sbci	r23, 0xFF	; 255
     970:	0f 2e       	mov	r0, r31
     972:	f1 e6       	ldi	r31, 0x61	; 97
     974:	ef 2e       	mov	r14, r31
     976:	f1 e0       	ldi	r31, 0x01	; 1
     978:	ff 2e       	mov	r15, r31
     97a:	f0 2d       	mov	r31, r0
     97c:	21 e0       	ldi	r18, 0x01	; 1
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	83 e9       	ldi	r24, 0x93	; 147
     982:	95 e0       	ldi	r25, 0x05	; 5
     984:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+16,y,1,8,T);
     988:	4e 85       	ldd	r20, Y+14	; 0x0e
     98a:	5f 85       	ldd	r21, Y+15	; 0x0f
     98c:	ec 81       	ldd	r30, Y+4	; 0x04
     98e:	fd 81       	ldd	r31, Y+5	; 0x05
     990:	33 96       	adiw	r30, 0x03	; 3
     992:	ee 0f       	add	r30, r30
     994:	ff 1f       	adc	r31, r31
     996:	ec 0f       	add	r30, r28
     998:	fd 1f       	adc	r31, r29
     99a:	60 81       	ld	r22, Z
     99c:	71 81       	ldd	r23, Z+1	; 0x01
     99e:	60 5f       	subi	r22, 0xF0	; 240
     9a0:	7f 4f       	sbci	r23, 0xFF	; 255
     9a2:	0f 2e       	mov	r0, r31
     9a4:	f1 e2       	ldi	r31, 0x21	; 33
     9a6:	ef 2e       	mov	r14, r31
     9a8:	f1 e0       	ldi	r31, 0x01	; 1
     9aa:	ff 2e       	mov	r15, r31
     9ac:	f0 2d       	mov	r31, r0
     9ae:	21 e0       	ldi	r18, 0x01	; 1
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	83 e9       	ldi	r24, 0x93	; 147
     9b4:	95 e0       	ldi	r25, 0x05	; 5
     9b6:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+32,y,1,8,B);
     9ba:	4e 85       	ldd	r20, Y+14	; 0x0e
     9bc:	5f 85       	ldd	r21, Y+15	; 0x0f
     9be:	ec 81       	ldd	r30, Y+4	; 0x04
     9c0:	fd 81       	ldd	r31, Y+5	; 0x05
     9c2:	33 96       	adiw	r30, 0x03	; 3
     9c4:	ee 0f       	add	r30, r30
     9c6:	ff 1f       	adc	r31, r31
     9c8:	ec 0f       	add	r30, r28
     9ca:	fd 1f       	adc	r31, r29
     9cc:	60 81       	ld	r22, Z
     9ce:	71 81       	ldd	r23, Z+1	; 0x01
     9d0:	60 5e       	subi	r22, 0xE0	; 224
     9d2:	7f 4f       	sbci	r23, 0xFF	; 255
     9d4:	0f 2e       	mov	r0, r31
     9d6:	f9 e7       	ldi	r31, 0x79	; 121
     9d8:	ef 2e       	mov	r14, r31
     9da:	f1 e0       	ldi	r31, 0x01	; 1
     9dc:	ff 2e       	mov	r15, r31
     9de:	f0 2d       	mov	r31, r0
     9e0:	21 e0       	ldi	r18, 0x01	; 1
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	83 e9       	ldi	r24, 0x93	; 147
     9e6:	95 e0       	ldi	r25, 0x05	; 5
     9e8:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+40,y,1,8,R);
     9ec:	4e 85       	ldd	r20, Y+14	; 0x0e
     9ee:	5f 85       	ldd	r21, Y+15	; 0x0f
     9f0:	ec 81       	ldd	r30, Y+4	; 0x04
     9f2:	fd 81       	ldd	r31, Y+5	; 0x05
     9f4:	33 96       	adiw	r30, 0x03	; 3
     9f6:	ee 0f       	add	r30, r30
     9f8:	ff 1f       	adc	r31, r31
     9fa:	ec 0f       	add	r30, r28
     9fc:	fd 1f       	adc	r31, r29
     9fe:	60 81       	ld	r22, Z
     a00:	71 81       	ldd	r23, Z+1	; 0x01
     a02:	68 5d       	subi	r22, 0xD8	; 216
     a04:	7f 4f       	sbci	r23, 0xFF	; 255
     a06:	0f 2e       	mov	r0, r31
     a08:	f1 e3       	ldi	r31, 0x31	; 49
     a0a:	ef 2e       	mov	r14, r31
     a0c:	f1 e0       	ldi	r31, 0x01	; 1
     a0e:	ff 2e       	mov	r15, r31
     a10:	f0 2d       	mov	r31, r0
     a12:	21 e0       	ldi	r18, 0x01	; 1
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	83 e9       	ldi	r24, 0x93	; 147
     a18:	95 e0       	ldi	r25, 0x05	; 5
     a1a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+48,y,1,8,I);
     a1e:	4e 85       	ldd	r20, Y+14	; 0x0e
     a20:	5f 85       	ldd	r21, Y+15	; 0x0f
     a22:	ec 81       	ldd	r30, Y+4	; 0x04
     a24:	fd 81       	ldd	r31, Y+5	; 0x05
     a26:	33 96       	adiw	r30, 0x03	; 3
     a28:	ee 0f       	add	r30, r30
     a2a:	ff 1f       	adc	r31, r31
     a2c:	ec 0f       	add	r30, r28
     a2e:	fd 1f       	adc	r31, r29
     a30:	60 81       	ld	r22, Z
     a32:	71 81       	ldd	r23, Z+1	; 0x01
     a34:	60 5d       	subi	r22, 0xD0	; 208
     a36:	7f 4f       	sbci	r23, 0xFF	; 255
     a38:	0f 2e       	mov	r0, r31
     a3a:	f9 e4       	ldi	r31, 0x49	; 73
     a3c:	ef 2e       	mov	r14, r31
     a3e:	f1 e0       	ldi	r31, 0x01	; 1
     a40:	ff 2e       	mov	r15, r31
     a42:	f0 2d       	mov	r31, r0
     a44:	21 e0       	ldi	r18, 0x01	; 1
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	83 e9       	ldi	r24, 0x93	; 147
     a4a:	95 e0       	ldi	r25, 0x05	; 5
     a4c:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+56,y,1,8,G);
     a50:	4e 85       	ldd	r20, Y+14	; 0x0e
     a52:	5f 85       	ldd	r21, Y+15	; 0x0f
     a54:	ec 81       	ldd	r30, Y+4	; 0x04
     a56:	fd 81       	ldd	r31, Y+5	; 0x05
     a58:	33 96       	adiw	r30, 0x03	; 3
     a5a:	ee 0f       	add	r30, r30
     a5c:	ff 1f       	adc	r31, r31
     a5e:	ec 0f       	add	r30, r28
     a60:	fd 1f       	adc	r31, r29
     a62:	60 81       	ld	r22, Z
     a64:	71 81       	ldd	r23, Z+1	; 0x01
     a66:	68 5c       	subi	r22, 0xC8	; 200
     a68:	7f 4f       	sbci	r23, 0xFF	; 255
     a6a:	0f 2e       	mov	r0, r31
     a6c:	f9 e5       	ldi	r31, 0x59	; 89
     a6e:	ef 2e       	mov	r14, r31
     a70:	f1 e0       	ldi	r31, 0x01	; 1
     a72:	ff 2e       	mov	r15, r31
     a74:	f0 2d       	mov	r31, r0
     a76:	21 e0       	ldi	r18, 0x01	; 1
     a78:	30 e0       	ldi	r19, 0x00	; 0
     a7a:	83 e9       	ldi	r24, 0x93	; 147
     a7c:	95 e0       	ldi	r25, 0x05	; 5
     a7e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+64,y,1,8,H);
     a82:	4e 85       	ldd	r20, Y+14	; 0x0e
     a84:	5f 85       	ldd	r21, Y+15	; 0x0f
     a86:	ec 81       	ldd	r30, Y+4	; 0x04
     a88:	fd 81       	ldd	r31, Y+5	; 0x05
     a8a:	33 96       	adiw	r30, 0x03	; 3
     a8c:	ee 0f       	add	r30, r30
     a8e:	ff 1f       	adc	r31, r31
     a90:	ec 0f       	add	r30, r28
     a92:	fd 1f       	adc	r31, r29
     a94:	60 81       	ld	r22, Z
     a96:	71 81       	ldd	r23, Z+1	; 0x01
     a98:	60 5c       	subi	r22, 0xC0	; 192
     a9a:	7f 4f       	sbci	r23, 0xFF	; 255
     a9c:	0f 2e       	mov	r0, r31
     a9e:	f1 e5       	ldi	r31, 0x51	; 81
     aa0:	ef 2e       	mov	r14, r31
     aa2:	f1 e0       	ldi	r31, 0x01	; 1
     aa4:	ff 2e       	mov	r15, r31
     aa6:	f0 2d       	mov	r31, r0
     aa8:	21 e0       	ldi	r18, 0x01	; 1
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	83 e9       	ldi	r24, 0x93	; 147
     aae:	95 e0       	ldi	r25, 0x05	; 5
     ab0:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+72,y,1,8,T);
     ab4:	4e 85       	ldd	r20, Y+14	; 0x0e
     ab6:	5f 85       	ldd	r21, Y+15	; 0x0f
     ab8:	ec 81       	ldd	r30, Y+4	; 0x04
     aba:	fd 81       	ldd	r31, Y+5	; 0x05
     abc:	33 96       	adiw	r30, 0x03	; 3
     abe:	ee 0f       	add	r30, r30
     ac0:	ff 1f       	adc	r31, r31
     ac2:	ec 0f       	add	r30, r28
     ac4:	fd 1f       	adc	r31, r29
     ac6:	60 81       	ld	r22, Z
     ac8:	71 81       	ldd	r23, Z+1	; 0x01
     aca:	68 5b       	subi	r22, 0xB8	; 184
     acc:	7f 4f       	sbci	r23, 0xFF	; 255
     ace:	0f 2e       	mov	r0, r31
     ad0:	f1 e2       	ldi	r31, 0x21	; 33
     ad2:	ef 2e       	mov	r14, r31
     ad4:	f1 e0       	ldi	r31, 0x01	; 1
     ad6:	ff 2e       	mov	r15, r31
     ad8:	f0 2d       	mov	r31, r0
     ada:	21 e0       	ldi	r18, 0x01	; 1
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	83 e9       	ldi	r24, 0x93	; 147
     ae0:	95 e0       	ldi	r25, 0x05	; 5
     ae2:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+80,y,1,8,N);
     ae6:	4e 85       	ldd	r20, Y+14	; 0x0e
     ae8:	5f 85       	ldd	r21, Y+15	; 0x0f
     aea:	ec 81       	ldd	r30, Y+4	; 0x04
     aec:	fd 81       	ldd	r31, Y+5	; 0x05
     aee:	33 96       	adiw	r30, 0x03	; 3
     af0:	ee 0f       	add	r30, r30
     af2:	ff 1f       	adc	r31, r31
     af4:	ec 0f       	add	r30, r28
     af6:	fd 1f       	adc	r31, r29
     af8:	60 81       	ld	r22, Z
     afa:	71 81       	ldd	r23, Z+1	; 0x01
     afc:	60 5b       	subi	r22, 0xB0	; 176
     afe:	7f 4f       	sbci	r23, 0xFF	; 255
     b00:	0f 2e       	mov	r0, r31
     b02:	f1 e4       	ldi	r31, 0x41	; 65
     b04:	ef 2e       	mov	r14, r31
     b06:	f1 e0       	ldi	r31, 0x01	; 1
     b08:	ff 2e       	mov	r15, r31
     b0a:	f0 2d       	mov	r31, r0
     b0c:	21 e0       	ldi	r18, 0x01	; 1
     b0e:	30 e0       	ldi	r19, 0x00	; 0
     b10:	83 e9       	ldi	r24, 0x93	; 147
     b12:	95 e0       	ldi	r25, 0x05	; 5
     b14:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+88,y,1,8,E);
     b18:	4e 85       	ldd	r20, Y+14	; 0x0e
     b1a:	5f 85       	ldd	r21, Y+15	; 0x0f
     b1c:	ec 81       	ldd	r30, Y+4	; 0x04
     b1e:	fd 81       	ldd	r31, Y+5	; 0x05
     b20:	33 96       	adiw	r30, 0x03	; 3
     b22:	ee 0f       	add	r30, r30
     b24:	ff 1f       	adc	r31, r31
     b26:	ec 0f       	add	r30, r28
     b28:	fd 1f       	adc	r31, r29
     b2a:	60 81       	ld	r22, Z
     b2c:	71 81       	ldd	r23, Z+1	; 0x01
     b2e:	68 5a       	subi	r22, 0xA8	; 168
     b30:	7f 4f       	sbci	r23, 0xFF	; 255
     b32:	0f 2e       	mov	r0, r31
     b34:	f1 e6       	ldi	r31, 0x61	; 97
     b36:	ef 2e       	mov	r14, r31
     b38:	f1 e0       	ldi	r31, 0x01	; 1
     b3a:	ff 2e       	mov	r15, r31
     b3c:	f0 2d       	mov	r31, r0
     b3e:	21 e0       	ldi	r18, 0x01	; 1
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	83 e9       	ldi	r24, 0x93	; 147
     b44:	95 e0       	ldi	r25, 0x05	; 5
     b46:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+96,y,1,8,S);
     b4a:	4e 85       	ldd	r20, Y+14	; 0x0e
     b4c:	5f 85       	ldd	r21, Y+15	; 0x0f
     b4e:	ec 81       	ldd	r30, Y+4	; 0x04
     b50:	fd 81       	ldd	r31, Y+5	; 0x05
     b52:	33 96       	adiw	r30, 0x03	; 3
     b54:	ee 0f       	add	r30, r30
     b56:	ff 1f       	adc	r31, r31
     b58:	ec 0f       	add	r30, r28
     b5a:	fd 1f       	adc	r31, r29
     b5c:	60 81       	ld	r22, Z
     b5e:	71 81       	ldd	r23, Z+1	; 0x01
     b60:	60 5a       	subi	r22, 0xA0	; 160
     b62:	7f 4f       	sbci	r23, 0xFF	; 255
     b64:	0f 2e       	mov	r0, r31
     b66:	f9 e2       	ldi	r31, 0x29	; 41
     b68:	ef 2e       	mov	r14, r31
     b6a:	f1 e0       	ldi	r31, 0x01	; 1
     b6c:	ff 2e       	mov	r15, r31
     b6e:	f0 2d       	mov	r31, r0
     b70:	21 e0       	ldi	r18, 0x01	; 1
     b72:	30 e0       	ldi	r19, 0x00	; 0
     b74:	83 e9       	ldi	r24, 0x93	; 147
     b76:	95 e0       	ldi	r25, 0x05	; 5
     b78:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+104,y,1,8,S);
     b7c:	4e 85       	ldd	r20, Y+14	; 0x0e
     b7e:	5f 85       	ldd	r21, Y+15	; 0x0f
     b80:	8c 81       	ldd	r24, Y+4	; 0x04
     b82:	9d 81       	ldd	r25, Y+5	; 0x05
     b84:	03 96       	adiw	r24, 0x03	; 3
     b86:	88 0f       	add	r24, r24
     b88:	99 1f       	adc	r25, r25
     b8a:	c8 0f       	add	r28, r24
     b8c:	d9 1f       	adc	r29, r25
     b8e:	68 81       	ld	r22, Y
     b90:	79 81       	ldd	r23, Y+1	; 0x01
     b92:	68 59       	subi	r22, 0x98	; 152
     b94:	7f 4f       	sbci	r23, 0xFF	; 255
     b96:	21 e0       	ldi	r18, 0x01	; 1
     b98:	30 e0       	ldi	r19, 0x00	; 0
     b9a:	83 e9       	ldi	r24, 0x93	; 147
     b9c:	95 e0       	ldi	r25, 0x05	; 5
     b9e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					break;
     ba2:	0e c2       	rjmp	.+1052   	; 0xfc0 <_ZN13Settings_Menu7actionsEv+0x6ec>
				}
				case 1:
				{
					oled.OLED_Clear_Bufer_part(0,y,16,8);
     ba4:	4e 85       	ldd	r20, Y+14	; 0x0e
     ba6:	5f 85       	ldd	r21, Y+15	; 0x0f
     ba8:	08 e0       	ldi	r16, 0x08	; 8
     baa:	10 e0       	ldi	r17, 0x00	; 0
     bac:	20 e1       	ldi	r18, 0x10	; 16
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	60 e0       	ldi	r22, 0x00	; 0
     bb2:	70 e0       	ldi	r23, 0x00	; 0
     bb4:	83 e9       	ldi	r24, 0x93	; 147
     bb6:	95 e0       	ldi	r25, 0x05	; 5
     bb8:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Write_To_Bufer(x[pointer]+0,y,1,8,R);
     bbc:	4e 85       	ldd	r20, Y+14	; 0x0e
     bbe:	5f 85       	ldd	r21, Y+15	; 0x0f
     bc0:	ec 81       	ldd	r30, Y+4	; 0x04
     bc2:	fd 81       	ldd	r31, Y+5	; 0x05
     bc4:	33 96       	adiw	r30, 0x03	; 3
     bc6:	ee 0f       	add	r30, r30
     bc8:	ff 1f       	adc	r31, r31
     bca:	ec 0f       	add	r30, r28
     bcc:	fd 1f       	adc	r31, r29
     bce:	60 81       	ld	r22, Z
     bd0:	71 81       	ldd	r23, Z+1	; 0x01
     bd2:	0f 2e       	mov	r0, r31
     bd4:	f1 e3       	ldi	r31, 0x31	; 49
     bd6:	ef 2e       	mov	r14, r31
     bd8:	f1 e0       	ldi	r31, 0x01	; 1
     bda:	ff 2e       	mov	r15, r31
     bdc:	f0 2d       	mov	r31, r0
     bde:	21 e0       	ldi	r18, 0x01	; 1
     be0:	30 e0       	ldi	r19, 0x00	; 0
     be2:	83 e9       	ldi	r24, 0x93	; 147
     be4:	95 e0       	ldi	r25, 0x05	; 5
     be6:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+8,y,1,8,E);
     bea:	4e 85       	ldd	r20, Y+14	; 0x0e
     bec:	5f 85       	ldd	r21, Y+15	; 0x0f
     bee:	ec 81       	ldd	r30, Y+4	; 0x04
     bf0:	fd 81       	ldd	r31, Y+5	; 0x05
     bf2:	33 96       	adiw	r30, 0x03	; 3
     bf4:	ee 0f       	add	r30, r30
     bf6:	ff 1f       	adc	r31, r31
     bf8:	ec 0f       	add	r30, r28
     bfa:	fd 1f       	adc	r31, r29
     bfc:	60 81       	ld	r22, Z
     bfe:	71 81       	ldd	r23, Z+1	; 0x01
     c00:	68 5f       	subi	r22, 0xF8	; 248
     c02:	7f 4f       	sbci	r23, 0xFF	; 255
     c04:	0f 2e       	mov	r0, r31
     c06:	f1 e6       	ldi	r31, 0x61	; 97
     c08:	ef 2e       	mov	r14, r31
     c0a:	f1 e0       	ldi	r31, 0x01	; 1
     c0c:	ff 2e       	mov	r15, r31
     c0e:	f0 2d       	mov	r31, r0
     c10:	21 e0       	ldi	r18, 0x01	; 1
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	83 e9       	ldi	r24, 0x93	; 147
     c16:	95 e0       	ldi	r25, 0x05	; 5
     c18:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+16,y,1,8,S);
     c1c:	4e 85       	ldd	r20, Y+14	; 0x0e
     c1e:	5f 85       	ldd	r21, Y+15	; 0x0f
     c20:	ec 81       	ldd	r30, Y+4	; 0x04
     c22:	fd 81       	ldd	r31, Y+5	; 0x05
     c24:	33 96       	adiw	r30, 0x03	; 3
     c26:	ee 0f       	add	r30, r30
     c28:	ff 1f       	adc	r31, r31
     c2a:	ec 0f       	add	r30, r28
     c2c:	fd 1f       	adc	r31, r29
     c2e:	60 81       	ld	r22, Z
     c30:	71 81       	ldd	r23, Z+1	; 0x01
     c32:	60 5f       	subi	r22, 0xF0	; 240
     c34:	7f 4f       	sbci	r23, 0xFF	; 255
     c36:	0f 2e       	mov	r0, r31
     c38:	f9 e2       	ldi	r31, 0x29	; 41
     c3a:	ef 2e       	mov	r14, r31
     c3c:	f1 e0       	ldi	r31, 0x01	; 1
     c3e:	ff 2e       	mov	r15, r31
     c40:	f0 2d       	mov	r31, r0
     c42:	21 e0       	ldi	r18, 0x01	; 1
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	83 e9       	ldi	r24, 0x93	; 147
     c48:	95 e0       	ldi	r25, 0x05	; 5
     c4a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+24,y,1,8,E);
     c4e:	4e 85       	ldd	r20, Y+14	; 0x0e
     c50:	5f 85       	ldd	r21, Y+15	; 0x0f
     c52:	ec 81       	ldd	r30, Y+4	; 0x04
     c54:	fd 81       	ldd	r31, Y+5	; 0x05
     c56:	33 96       	adiw	r30, 0x03	; 3
     c58:	ee 0f       	add	r30, r30
     c5a:	ff 1f       	adc	r31, r31
     c5c:	ec 0f       	add	r30, r28
     c5e:	fd 1f       	adc	r31, r29
     c60:	60 81       	ld	r22, Z
     c62:	71 81       	ldd	r23, Z+1	; 0x01
     c64:	68 5e       	subi	r22, 0xE8	; 232
     c66:	7f 4f       	sbci	r23, 0xFF	; 255
     c68:	0f 2e       	mov	r0, r31
     c6a:	f1 e6       	ldi	r31, 0x61	; 97
     c6c:	ef 2e       	mov	r14, r31
     c6e:	f1 e0       	ldi	r31, 0x01	; 1
     c70:	ff 2e       	mov	r15, r31
     c72:	f0 2d       	mov	r31, r0
     c74:	21 e0       	ldi	r18, 0x01	; 1
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	83 e9       	ldi	r24, 0x93	; 147
     c7a:	95 e0       	ldi	r25, 0x05	; 5
     c7c:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+32,y,1,8,T);
     c80:	4e 85       	ldd	r20, Y+14	; 0x0e
     c82:	5f 85       	ldd	r21, Y+15	; 0x0f
     c84:	ec 81       	ldd	r30, Y+4	; 0x04
     c86:	fd 81       	ldd	r31, Y+5	; 0x05
     c88:	33 96       	adiw	r30, 0x03	; 3
     c8a:	ee 0f       	add	r30, r30
     c8c:	ff 1f       	adc	r31, r31
     c8e:	ec 0f       	add	r30, r28
     c90:	fd 1f       	adc	r31, r29
     c92:	60 81       	ld	r22, Z
     c94:	71 81       	ldd	r23, Z+1	; 0x01
     c96:	60 5e       	subi	r22, 0xE0	; 224
     c98:	7f 4f       	sbci	r23, 0xFF	; 255
     c9a:	0f 2e       	mov	r0, r31
     c9c:	f1 e2       	ldi	r31, 0x21	; 33
     c9e:	ef 2e       	mov	r14, r31
     ca0:	f1 e0       	ldi	r31, 0x01	; 1
     ca2:	ff 2e       	mov	r15, r31
     ca4:	f0 2d       	mov	r31, r0
     ca6:	21 e0       	ldi	r18, 0x01	; 1
     ca8:	30 e0       	ldi	r19, 0x00	; 0
     caa:	83 e9       	ldi	r24, 0x93	; 147
     cac:	95 e0       	ldi	r25, 0x05	; 5
     cae:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+48,y,1,8,D);
     cb2:	4e 85       	ldd	r20, Y+14	; 0x0e
     cb4:	5f 85       	ldd	r21, Y+15	; 0x0f
     cb6:	ec 81       	ldd	r30, Y+4	; 0x04
     cb8:	fd 81       	ldd	r31, Y+5	; 0x05
     cba:	33 96       	adiw	r30, 0x03	; 3
     cbc:	ee 0f       	add	r30, r30
     cbe:	ff 1f       	adc	r31, r31
     cc0:	ec 0f       	add	r30, r28
     cc2:	fd 1f       	adc	r31, r29
     cc4:	60 81       	ld	r22, Z
     cc6:	71 81       	ldd	r23, Z+1	; 0x01
     cc8:	60 5d       	subi	r22, 0xD0	; 208
     cca:	7f 4f       	sbci	r23, 0xFF	; 255
     ccc:	0f 2e       	mov	r0, r31
     cce:	f9 e6       	ldi	r31, 0x69	; 105
     cd0:	ef 2e       	mov	r14, r31
     cd2:	f1 e0       	ldi	r31, 0x01	; 1
     cd4:	ff 2e       	mov	r15, r31
     cd6:	f0 2d       	mov	r31, r0
     cd8:	21 e0       	ldi	r18, 0x01	; 1
     cda:	30 e0       	ldi	r19, 0x00	; 0
     cdc:	83 e9       	ldi	r24, 0x93	; 147
     cde:	95 e0       	ldi	r25, 0x05	; 5
     ce0:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+56,y,1,8,E);
     ce4:	4e 85       	ldd	r20, Y+14	; 0x0e
     ce6:	5f 85       	ldd	r21, Y+15	; 0x0f
     ce8:	ec 81       	ldd	r30, Y+4	; 0x04
     cea:	fd 81       	ldd	r31, Y+5	; 0x05
     cec:	33 96       	adiw	r30, 0x03	; 3
     cee:	ee 0f       	add	r30, r30
     cf0:	ff 1f       	adc	r31, r31
     cf2:	ec 0f       	add	r30, r28
     cf4:	fd 1f       	adc	r31, r29
     cf6:	60 81       	ld	r22, Z
     cf8:	71 81       	ldd	r23, Z+1	; 0x01
     cfa:	68 5c       	subi	r22, 0xC8	; 200
     cfc:	7f 4f       	sbci	r23, 0xFF	; 255
     cfe:	0f 2e       	mov	r0, r31
     d00:	f1 e6       	ldi	r31, 0x61	; 97
     d02:	ef 2e       	mov	r14, r31
     d04:	f1 e0       	ldi	r31, 0x01	; 1
     d06:	ff 2e       	mov	r15, r31
     d08:	f0 2d       	mov	r31, r0
     d0a:	21 e0       	ldi	r18, 0x01	; 1
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	83 e9       	ldi	r24, 0x93	; 147
     d10:	95 e0       	ldi	r25, 0x05	; 5
     d12:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+64,y,1,8,V);
     d16:	4e 85       	ldd	r20, Y+14	; 0x0e
     d18:	5f 85       	ldd	r21, Y+15	; 0x0f
     d1a:	ec 81       	ldd	r30, Y+4	; 0x04
     d1c:	fd 81       	ldd	r31, Y+5	; 0x05
     d1e:	33 96       	adiw	r30, 0x03	; 3
     d20:	ee 0f       	add	r30, r30
     d22:	ff 1f       	adc	r31, r31
     d24:	ec 0f       	add	r30, r28
     d26:	fd 1f       	adc	r31, r29
     d28:	60 81       	ld	r22, Z
     d2a:	71 81       	ldd	r23, Z+1	; 0x01
     d2c:	60 5c       	subi	r22, 0xC0	; 192
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	0f 2e       	mov	r0, r31
     d32:	f9 e1       	ldi	r31, 0x19	; 25
     d34:	ef 2e       	mov	r14, r31
     d36:	f1 e0       	ldi	r31, 0x01	; 1
     d38:	ff 2e       	mov	r15, r31
     d3a:	f0 2d       	mov	r31, r0
     d3c:	21 e0       	ldi	r18, 0x01	; 1
     d3e:	30 e0       	ldi	r19, 0x00	; 0
     d40:	83 e9       	ldi	r24, 0x93	; 147
     d42:	95 e0       	ldi	r25, 0x05	; 5
     d44:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+72,y,1,8,I);
     d48:	4e 85       	ldd	r20, Y+14	; 0x0e
     d4a:	5f 85       	ldd	r21, Y+15	; 0x0f
     d4c:	ec 81       	ldd	r30, Y+4	; 0x04
     d4e:	fd 81       	ldd	r31, Y+5	; 0x05
     d50:	33 96       	adiw	r30, 0x03	; 3
     d52:	ee 0f       	add	r30, r30
     d54:	ff 1f       	adc	r31, r31
     d56:	ec 0f       	add	r30, r28
     d58:	fd 1f       	adc	r31, r29
     d5a:	60 81       	ld	r22, Z
     d5c:	71 81       	ldd	r23, Z+1	; 0x01
     d5e:	68 5b       	subi	r22, 0xB8	; 184
     d60:	7f 4f       	sbci	r23, 0xFF	; 255
     d62:	0f 2e       	mov	r0, r31
     d64:	f9 e4       	ldi	r31, 0x49	; 73
     d66:	ef 2e       	mov	r14, r31
     d68:	f1 e0       	ldi	r31, 0x01	; 1
     d6a:	ff 2e       	mov	r15, r31
     d6c:	f0 2d       	mov	r31, r0
     d6e:	21 e0       	ldi	r18, 0x01	; 1
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	83 e9       	ldi	r24, 0x93	; 147
     d74:	95 e0       	ldi	r25, 0x05	; 5
     d76:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+80,y,1,8,C);
     d7a:	4e 85       	ldd	r20, Y+14	; 0x0e
     d7c:	5f 85       	ldd	r21, Y+15	; 0x0f
     d7e:	ec 81       	ldd	r30, Y+4	; 0x04
     d80:	fd 81       	ldd	r31, Y+5	; 0x05
     d82:	33 96       	adiw	r30, 0x03	; 3
     d84:	ee 0f       	add	r30, r30
     d86:	ff 1f       	adc	r31, r31
     d88:	ec 0f       	add	r30, r28
     d8a:	fd 1f       	adc	r31, r29
     d8c:	60 81       	ld	r22, Z
     d8e:	71 81       	ldd	r23, Z+1	; 0x01
     d90:	60 5b       	subi	r22, 0xB0	; 176
     d92:	7f 4f       	sbci	r23, 0xFF	; 255
     d94:	0f 2e       	mov	r0, r31
     d96:	f1 e7       	ldi	r31, 0x71	; 113
     d98:	ef 2e       	mov	r14, r31
     d9a:	f1 e0       	ldi	r31, 0x01	; 1
     d9c:	ff 2e       	mov	r15, r31
     d9e:	f0 2d       	mov	r31, r0
     da0:	21 e0       	ldi	r18, 0x01	; 1
     da2:	30 e0       	ldi	r19, 0x00	; 0
     da4:	83 e9       	ldi	r24, 0x93	; 147
     da6:	95 e0       	ldi	r25, 0x05	; 5
     da8:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+88,y,1,8,E);
     dac:	4e 85       	ldd	r20, Y+14	; 0x0e
     dae:	5f 85       	ldd	r21, Y+15	; 0x0f
     db0:	8c 81       	ldd	r24, Y+4	; 0x04
     db2:	9d 81       	ldd	r25, Y+5	; 0x05
     db4:	03 96       	adiw	r24, 0x03	; 3
     db6:	88 0f       	add	r24, r24
     db8:	99 1f       	adc	r25, r25
     dba:	c8 0f       	add	r28, r24
     dbc:	d9 1f       	adc	r29, r25
     dbe:	68 81       	ld	r22, Y
     dc0:	79 81       	ldd	r23, Y+1	; 0x01
     dc2:	68 5a       	subi	r22, 0xA8	; 168
     dc4:	7f 4f       	sbci	r23, 0xFF	; 255
     dc6:	0f 2e       	mov	r0, r31
     dc8:	f1 e6       	ldi	r31, 0x61	; 97
     dca:	ef 2e       	mov	r14, r31
     dcc:	f1 e0       	ldi	r31, 0x01	; 1
     dce:	ff 2e       	mov	r15, r31
     dd0:	f0 2d       	mov	r31, r0
     dd2:	21 e0       	ldi	r18, 0x01	; 1
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	83 e9       	ldi	r24, 0x93	; 147
     dd8:	95 e0       	ldi	r25, 0x05	; 5
     dda:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					break;
     dde:	f0 c0       	rjmp	.+480    	; 0xfc0 <_ZN13Settings_Menu7actionsEv+0x6ec>
				}
				case 2:
				{
					oled.OLED_Clear_Bufer_part(0,y,16,8);
     de0:	4e 85       	ldd	r20, Y+14	; 0x0e
     de2:	5f 85       	ldd	r21, Y+15	; 0x0f
     de4:	08 e0       	ldi	r16, 0x08	; 8
     de6:	10 e0       	ldi	r17, 0x00	; 0
     de8:	20 e1       	ldi	r18, 0x10	; 16
     dea:	30 e0       	ldi	r19, 0x00	; 0
     dec:	60 e0       	ldi	r22, 0x00	; 0
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	83 e9       	ldi	r24, 0x93	; 147
     df2:	95 e0       	ldi	r25, 0x05	; 5
     df4:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Write_To_Bufer(x[pointer]+0,y,1,8,A);
     df8:	4e 85       	ldd	r20, Y+14	; 0x0e
     dfa:	5f 85       	ldd	r21, Y+15	; 0x0f
     dfc:	ec 81       	ldd	r30, Y+4	; 0x04
     dfe:	fd 81       	ldd	r31, Y+5	; 0x05
     e00:	33 96       	adiw	r30, 0x03	; 3
     e02:	ee 0f       	add	r30, r30
     e04:	ff 1f       	adc	r31, r31
     e06:	ec 0f       	add	r30, r28
     e08:	fd 1f       	adc	r31, r29
     e0a:	60 81       	ld	r22, Z
     e0c:	71 81       	ldd	r23, Z+1	; 0x01
     e0e:	0f 2e       	mov	r0, r31
     e10:	f1 e8       	ldi	r31, 0x81	; 129
     e12:	ef 2e       	mov	r14, r31
     e14:	f1 e0       	ldi	r31, 0x01	; 1
     e16:	ff 2e       	mov	r15, r31
     e18:	f0 2d       	mov	r31, r0
     e1a:	21 e0       	ldi	r18, 0x01	; 1
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	83 e9       	ldi	r24, 0x93	; 147
     e20:	95 e0       	ldi	r25, 0x05	; 5
     e22:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+8,y,1,8,D);
     e26:	4e 85       	ldd	r20, Y+14	; 0x0e
     e28:	5f 85       	ldd	r21, Y+15	; 0x0f
     e2a:	ec 81       	ldd	r30, Y+4	; 0x04
     e2c:	fd 81       	ldd	r31, Y+5	; 0x05
     e2e:	33 96       	adiw	r30, 0x03	; 3
     e30:	ee 0f       	add	r30, r30
     e32:	ff 1f       	adc	r31, r31
     e34:	ec 0f       	add	r30, r28
     e36:	fd 1f       	adc	r31, r29
     e38:	60 81       	ld	r22, Z
     e3a:	71 81       	ldd	r23, Z+1	; 0x01
     e3c:	68 5f       	subi	r22, 0xF8	; 248
     e3e:	7f 4f       	sbci	r23, 0xFF	; 255
     e40:	0f 2e       	mov	r0, r31
     e42:	f9 e6       	ldi	r31, 0x69	; 105
     e44:	ef 2e       	mov	r14, r31
     e46:	f1 e0       	ldi	r31, 0x01	; 1
     e48:	ff 2e       	mov	r15, r31
     e4a:	f0 2d       	mov	r31, r0
     e4c:	21 e0       	ldi	r18, 0x01	; 1
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	83 e9       	ldi	r24, 0x93	; 147
     e52:	95 e0       	ldi	r25, 0x05	; 5
     e54:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+16,y,1,8,D);
     e58:	4e 85       	ldd	r20, Y+14	; 0x0e
     e5a:	5f 85       	ldd	r21, Y+15	; 0x0f
     e5c:	ec 81       	ldd	r30, Y+4	; 0x04
     e5e:	fd 81       	ldd	r31, Y+5	; 0x05
     e60:	33 96       	adiw	r30, 0x03	; 3
     e62:	ee 0f       	add	r30, r30
     e64:	ff 1f       	adc	r31, r31
     e66:	ec 0f       	add	r30, r28
     e68:	fd 1f       	adc	r31, r29
     e6a:	60 81       	ld	r22, Z
     e6c:	71 81       	ldd	r23, Z+1	; 0x01
     e6e:	60 5f       	subi	r22, 0xF0	; 240
     e70:	7f 4f       	sbci	r23, 0xFF	; 255
     e72:	21 e0       	ldi	r18, 0x01	; 1
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	83 e9       	ldi	r24, 0x93	; 147
     e78:	95 e0       	ldi	r25, 0x05	; 5
     e7a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+32,y,1,8,O);
     e7e:	4e 85       	ldd	r20, Y+14	; 0x0e
     e80:	5f 85       	ldd	r21, Y+15	; 0x0f
     e82:	ec 81       	ldd	r30, Y+4	; 0x04
     e84:	fd 81       	ldd	r31, Y+5	; 0x05
     e86:	33 96       	adiw	r30, 0x03	; 3
     e88:	ee 0f       	add	r30, r30
     e8a:	ff 1f       	adc	r31, r31
     e8c:	ec 0f       	add	r30, r28
     e8e:	fd 1f       	adc	r31, r29
     e90:	60 81       	ld	r22, Z
     e92:	71 81       	ldd	r23, Z+1	; 0x01
     e94:	60 5e       	subi	r22, 0xE0	; 224
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	0f 2e       	mov	r0, r31
     e9a:	f9 e3       	ldi	r31, 0x39	; 57
     e9c:	ef 2e       	mov	r14, r31
     e9e:	f1 e0       	ldi	r31, 0x01	; 1
     ea0:	ff 2e       	mov	r15, r31
     ea2:	f0 2d       	mov	r31, r0
     ea4:	21 e0       	ldi	r18, 0x01	; 1
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	83 e9       	ldi	r24, 0x93	; 147
     eaa:	95 e0       	ldi	r25, 0x05	; 5
     eac:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+40,y,1,8,W);
     eb0:	4e 85       	ldd	r20, Y+14	; 0x0e
     eb2:	5f 85       	ldd	r21, Y+15	; 0x0f
     eb4:	ec 81       	ldd	r30, Y+4	; 0x04
     eb6:	fd 81       	ldd	r31, Y+5	; 0x05
     eb8:	33 96       	adiw	r30, 0x03	; 3
     eba:	ee 0f       	add	r30, r30
     ebc:	ff 1f       	adc	r31, r31
     ebe:	ec 0f       	add	r30, r28
     ec0:	fd 1f       	adc	r31, r29
     ec2:	60 81       	ld	r22, Z
     ec4:	71 81       	ldd	r23, Z+1	; 0x01
     ec6:	68 5d       	subi	r22, 0xD8	; 216
     ec8:	7f 4f       	sbci	r23, 0xFF	; 255
     eca:	0f 2e       	mov	r0, r31
     ecc:	f1 e1       	ldi	r31, 0x11	; 17
     ece:	ef 2e       	mov	r14, r31
     ed0:	f1 e0       	ldi	r31, 0x01	; 1
     ed2:	ff 2e       	mov	r15, r31
     ed4:	f0 2d       	mov	r31, r0
     ed6:	21 e0       	ldi	r18, 0x01	; 1
     ed8:	30 e0       	ldi	r19, 0x00	; 0
     eda:	83 e9       	ldi	r24, 0x93	; 147
     edc:	95 e0       	ldi	r25, 0x05	; 5
     ede:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+48,y,1,8,N);
     ee2:	4e 85       	ldd	r20, Y+14	; 0x0e
     ee4:	5f 85       	ldd	r21, Y+15	; 0x0f
     ee6:	ec 81       	ldd	r30, Y+4	; 0x04
     ee8:	fd 81       	ldd	r31, Y+5	; 0x05
     eea:	33 96       	adiw	r30, 0x03	; 3
     eec:	ee 0f       	add	r30, r30
     eee:	ff 1f       	adc	r31, r31
     ef0:	ec 0f       	add	r30, r28
     ef2:	fd 1f       	adc	r31, r29
     ef4:	60 81       	ld	r22, Z
     ef6:	71 81       	ldd	r23, Z+1	; 0x01
     ef8:	60 5d       	subi	r22, 0xD0	; 208
     efa:	7f 4f       	sbci	r23, 0xFF	; 255
     efc:	0f 2e       	mov	r0, r31
     efe:	f1 e4       	ldi	r31, 0x41	; 65
     f00:	ef 2e       	mov	r14, r31
     f02:	f1 e0       	ldi	r31, 0x01	; 1
     f04:	ff 2e       	mov	r15, r31
     f06:	f0 2d       	mov	r31, r0
     f08:	21 e0       	ldi	r18, 0x01	; 1
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	83 e9       	ldi	r24, 0x93	; 147
     f0e:	95 e0       	ldi	r25, 0x05	; 5
     f10:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+56,y,1,8,E);
     f14:	4e 85       	ldd	r20, Y+14	; 0x0e
     f16:	5f 85       	ldd	r21, Y+15	; 0x0f
     f18:	ec 81       	ldd	r30, Y+4	; 0x04
     f1a:	fd 81       	ldd	r31, Y+5	; 0x05
     f1c:	33 96       	adiw	r30, 0x03	; 3
     f1e:	ee 0f       	add	r30, r30
     f20:	ff 1f       	adc	r31, r31
     f22:	ec 0f       	add	r30, r28
     f24:	fd 1f       	adc	r31, r29
     f26:	60 81       	ld	r22, Z
     f28:	71 81       	ldd	r23, Z+1	; 0x01
     f2a:	68 5c       	subi	r22, 0xC8	; 200
     f2c:	7f 4f       	sbci	r23, 0xFF	; 255
     f2e:	0f 2e       	mov	r0, r31
     f30:	f1 e6       	ldi	r31, 0x61	; 97
     f32:	ef 2e       	mov	r14, r31
     f34:	f1 e0       	ldi	r31, 0x01	; 1
     f36:	ff 2e       	mov	r15, r31
     f38:	f0 2d       	mov	r31, r0
     f3a:	21 e0       	ldi	r18, 0x01	; 1
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	83 e9       	ldi	r24, 0x93	; 147
     f40:	95 e0       	ldi	r25, 0x05	; 5
     f42:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					oled.OLED_Write_To_Bufer(x[pointer]+64,y,1,8,R);
     f46:	4e 85       	ldd	r20, Y+14	; 0x0e
     f48:	5f 85       	ldd	r21, Y+15	; 0x0f
     f4a:	8c 81       	ldd	r24, Y+4	; 0x04
     f4c:	9d 81       	ldd	r25, Y+5	; 0x05
     f4e:	03 96       	adiw	r24, 0x03	; 3
     f50:	88 0f       	add	r24, r24
     f52:	99 1f       	adc	r25, r25
     f54:	c8 0f       	add	r28, r24
     f56:	d9 1f       	adc	r29, r25
     f58:	68 81       	ld	r22, Y
     f5a:	79 81       	ldd	r23, Y+1	; 0x01
     f5c:	60 5c       	subi	r22, 0xC0	; 192
     f5e:	7f 4f       	sbci	r23, 0xFF	; 255
     f60:	0f 2e       	mov	r0, r31
     f62:	f1 e3       	ldi	r31, 0x31	; 49
     f64:	ef 2e       	mov	r14, r31
     f66:	f1 e0       	ldi	r31, 0x01	; 1
     f68:	ff 2e       	mov	r15, r31
     f6a:	f0 2d       	mov	r31, r0
     f6c:	21 e0       	ldi	r18, 0x01	; 1
     f6e:	30 e0       	ldi	r19, 0x00	; 0
     f70:	83 e9       	ldi	r24, 0x93	; 147
     f72:	95 e0       	ldi	r25, 0x05	; 5
     f74:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					break;
     f78:	23 c0       	rjmp	.+70     	; 0xfc0 <_ZN13Settings_Menu7actionsEv+0x6ec>
				}
				case 3:
				{
					//oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
					oled.OLED_Clear_Bufer_part(0,y,16,8);
     f7a:	4e 85       	ldd	r20, Y+14	; 0x0e
     f7c:	5f 85       	ldd	r21, Y+15	; 0x0f
     f7e:	08 e0       	ldi	r16, 0x08	; 8
     f80:	10 e0       	ldi	r17, 0x00	; 0
     f82:	20 e1       	ldi	r18, 0x10	; 16
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	60 e0       	ldi	r22, 0x00	; 0
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	83 e9       	ldi	r24, 0x93	; 147
     f8c:	95 e0       	ldi	r25, 0x05	; 5
     f8e:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Write_To_Bufer(x[pointer],y,2,8,backk);
     f92:	4e 85       	ldd	r20, Y+14	; 0x0e
     f94:	5f 85       	ldd	r21, Y+15	; 0x0f
     f96:	8c 81       	ldd	r24, Y+4	; 0x04
     f98:	9d 81       	ldd	r25, Y+5	; 0x05
     f9a:	03 96       	adiw	r24, 0x03	; 3
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	c8 0f       	add	r28, r24
     fa2:	d9 1f       	adc	r29, r25
     fa4:	68 81       	ld	r22, Y
     fa6:	79 81       	ldd	r23, Y+1	; 0x01
     fa8:	0f 2e       	mov	r0, r31
     faa:	f1 e0       	ldi	r31, 0x01	; 1
     fac:	ef 2e       	mov	r14, r31
     fae:	f1 e0       	ldi	r31, 0x01	; 1
     fb0:	ff 2e       	mov	r15, r31
     fb2:	f0 2d       	mov	r31, r0
     fb4:	22 e0       	ldi	r18, 0x02	; 2
     fb6:	30 e0       	ldi	r19, 0x00	; 0
     fb8:	83 e9       	ldi	r24, 0x93	; 147
     fba:	95 e0       	ldi	r25, 0x05	; 5
     fbc:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
					break;
				}
			}
		}
	};
     fc0:	df 91       	pop	r29
     fc2:	cf 91       	pop	r28
     fc4:	1f 91       	pop	r17
     fc6:	0f 91       	pop	r16
     fc8:	ff 90       	pop	r15
     fca:	ef 90       	pop	r14
     fcc:	08 95       	ret

00000fce <_ZN13Settings_Menu7DefaultEv>:
	Settings_Menu()
	{

	};
	
	void Default() override
     fce:	ef 92       	push	r14
     fd0:	ff 92       	push	r15
     fd2:	0f 93       	push	r16
     fd4:	1f 93       	push	r17
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	ec 01       	movw	r28, r24
	{
		oled.OLED_Write_To_Bufer(56,y+2,2,8,downwd);
     fdc:	4e 85       	ldd	r20, Y+14	; 0x0e
     fde:	5f 85       	ldd	r21, Y+15	; 0x0f
     fe0:	4e 5f       	subi	r20, 0xFE	; 254
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	0f 2e       	mov	r0, r31
     fe6:	f9 e3       	ldi	r31, 0x39	; 57
     fe8:	ef 2e       	mov	r14, r31
     fea:	f2 e0       	ldi	r31, 0x02	; 2
     fec:	ff 2e       	mov	r15, r31
     fee:	f0 2d       	mov	r31, r0
     ff0:	08 e0       	ldi	r16, 0x08	; 8
     ff2:	10 e0       	ldi	r17, 0x00	; 0
     ff4:	22 e0       	ldi	r18, 0x02	; 2
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	68 e3       	ldi	r22, 0x38	; 56
     ffa:	70 e0       	ldi	r23, 0x00	; 0
     ffc:	83 e9       	ldi	r24, 0x93	; 147
     ffe:	95 e0       	ldi	r25, 0x05	; 5
    1000:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(56,y-2,2,8,upwd);
    1004:	4e 85       	ldd	r20, Y+14	; 0x0e
    1006:	5f 85       	ldd	r21, Y+15	; 0x0f
    1008:	42 50       	subi	r20, 0x02	; 2
    100a:	51 09       	sbc	r21, r1
    100c:	0f 2e       	mov	r0, r31
    100e:	f9 e4       	ldi	r31, 0x49	; 73
    1010:	ef 2e       	mov	r14, r31
    1012:	f2 e0       	ldi	r31, 0x02	; 2
    1014:	ff 2e       	mov	r15, r31
    1016:	f0 2d       	mov	r31, r0
    1018:	22 e0       	ldi	r18, 0x02	; 2
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	68 e3       	ldi	r22, 0x38	; 56
    101e:	70 e0       	ldi	r23, 0x00	; 0
    1020:	83 e9       	ldi	r24, 0x93	; 147
    1022:	95 e0       	ldi	r25, 0x05	; 5
    1024:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	};
    1028:	df 91       	pop	r29
    102a:	cf 91       	pop	r28
    102c:	1f 91       	pop	r17
    102e:	0f 91       	pop	r16
    1030:	ff 90       	pop	r15
    1032:	ef 90       	pop	r14
    1034:	08 95       	ret

00001036 <_ZN13Password_Menu7actionsEv>:
	{
		
		
	};
	
	void actions()override
    1036:	ef 92       	push	r14
    1038:	ff 92       	push	r15
    103a:	0f 93       	push	r16
    103c:	1f 93       	push	r17
    103e:	cf 93       	push	r28
    1040:	df 93       	push	r29
    1042:	ec 01       	movw	r28, r24
	{
		if(Password_Menu_Status){
    1044:	90 91 92 05 	lds	r25, 0x0592	; 0x800592 <Password_Menu_Status>
    1048:	99 23       	and	r25, r25
    104a:	09 f4       	brne	.+2      	; 0x104e <_ZN13Password_Menu7actionsEv+0x18>
    104c:	08 c4       	rjmp	.+2064   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
		switch(symbol_pointer)
    104e:	ee 81       	ldd	r30, Y+6	; 0x06
    1050:	ff 81       	ldd	r31, Y+7	; 0x07
    1052:	eb 30       	cpi	r30, 0x0B	; 11
    1054:	f1 05       	cpc	r31, r1
    1056:	08 f0       	brcs	.+2      	; 0x105a <_ZN13Password_Menu7actionsEv+0x24>
    1058:	02 c4       	rjmp	.+2052   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
    105a:	ef 5a       	subi	r30, 0xAF	; 175
    105c:	ff 4f       	sbci	r31, 0xFF	; 255
    105e:	0c 94 e1 15 	jmp	0x2bc2	; 0x2bc2 <__tablejump2__>
		{
			case 0:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    1062:	4a 89       	ldd	r20, Y+18	; 0x12
    1064:	5b 89       	ldd	r21, Y+19	; 0x13
    1066:	ec 81       	ldd	r30, Y+4	; 0x04
    1068:	fd 81       	ldd	r31, Y+5	; 0x05
    106a:	34 96       	adiw	r30, 0x04	; 4
    106c:	ee 0f       	add	r30, r30
    106e:	ff 1f       	adc	r31, r31
    1070:	ec 0f       	add	r30, r28
    1072:	fd 1f       	adc	r31, r29
    1074:	60 81       	ld	r22, Z
    1076:	71 81       	ldd	r23, Z+1	; 0x01
    1078:	08 e0       	ldi	r16, 0x08	; 8
    107a:	10 e0       	ldi	r17, 0x00	; 0
    107c:	21 e0       	ldi	r18, 0x01	; 1
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	83 e9       	ldi	r24, 0x93	; 147
    1082:	95 e0       	ldi	r25, 0x05	; 5
    1084:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,zero);
    1088:	4a 89       	ldd	r20, Y+18	; 0x12
    108a:	5b 89       	ldd	r21, Y+19	; 0x13
    108c:	ec 81       	ldd	r30, Y+4	; 0x04
    108e:	fd 81       	ldd	r31, Y+5	; 0x05
    1090:	34 96       	adiw	r30, 0x04	; 4
    1092:	ee 0f       	add	r30, r30
    1094:	ff 1f       	adc	r31, r31
    1096:	ec 0f       	add	r30, r28
    1098:	fd 1f       	adc	r31, r29
    109a:	60 81       	ld	r22, Z
    109c:	71 81       	ldd	r23, Z+1	; 0x01
    109e:	0f 2e       	mov	r0, r31
    10a0:	f1 e0       	ldi	r31, 0x01	; 1
    10a2:	ef 2e       	mov	r14, r31
    10a4:	f5 e0       	ldi	r31, 0x05	; 5
    10a6:	ff 2e       	mov	r15, r31
    10a8:	f0 2d       	mov	r31, r0
    10aa:	21 e0       	ldi	r18, 0x01	; 1
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	83 e9       	ldi	r24, 0x93	; 147
    10b0:	95 e0       	ldi	r25, 0x05	; 5
    10b2:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    10b6:	4a 89       	ldd	r20, Y+18	; 0x12
    10b8:	5b 89       	ldd	r21, Y+19	; 0x13
    10ba:	4e 5f       	subi	r20, 0xFE	; 254
    10bc:	5f 4f       	sbci	r21, 0xFF	; 255
    10be:	ec 81       	ldd	r30, Y+4	; 0x04
    10c0:	fd 81       	ldd	r31, Y+5	; 0x05
    10c2:	34 96       	adiw	r30, 0x04	; 4
    10c4:	ee 0f       	add	r30, r30
    10c6:	ff 1f       	adc	r31, r31
    10c8:	ec 0f       	add	r30, r28
    10ca:	fd 1f       	adc	r31, r29
    10cc:	60 81       	ld	r22, Z
    10ce:	71 81       	ldd	r23, Z+1	; 0x01
    10d0:	0f 2e       	mov	r0, r31
    10d2:	f9 e9       	ldi	r31, 0x99	; 153
    10d4:	ef 2e       	mov	r14, r31
    10d6:	f4 e0       	ldi	r31, 0x04	; 4
    10d8:	ff 2e       	mov	r15, r31
    10da:	f0 2d       	mov	r31, r0
    10dc:	21 e0       	ldi	r18, 0x01	; 1
    10de:	30 e0       	ldi	r19, 0x00	; 0
    10e0:	83 e9       	ldi	r24, 0x93	; 147
    10e2:	95 e0       	ldi	r25, 0x05	; 5
    10e4:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    10e8:	4a 89       	ldd	r20, Y+18	; 0x12
    10ea:	5b 89       	ldd	r21, Y+19	; 0x13
    10ec:	41 50       	subi	r20, 0x01	; 1
    10ee:	51 09       	sbc	r21, r1
    10f0:	8c 81       	ldd	r24, Y+4	; 0x04
    10f2:	9d 81       	ldd	r25, Y+5	; 0x05
    10f4:	04 96       	adiw	r24, 0x04	; 4
    10f6:	88 0f       	add	r24, r24
    10f8:	99 1f       	adc	r25, r25
    10fa:	c8 0f       	add	r28, r24
    10fc:	d9 1f       	adc	r29, r25
    10fe:	68 81       	ld	r22, Y
    1100:	79 81       	ldd	r23, Y+1	; 0x01
    1102:	0f 2e       	mov	r0, r31
    1104:	f1 ea       	ldi	r31, 0xA1	; 161
    1106:	ef 2e       	mov	r14, r31
    1108:	f4 e0       	ldi	r31, 0x04	; 4
    110a:	ff 2e       	mov	r15, r31
    110c:	f0 2d       	mov	r31, r0
    110e:	21 e0       	ldi	r18, 0x01	; 1
    1110:	30 e0       	ldi	r19, 0x00	; 0
    1112:	83 e9       	ldi	r24, 0x93	; 147
    1114:	95 e0       	ldi	r25, 0x05	; 5
    1116:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    111a:	a1 c3       	rjmp	.+1858   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 1:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    111c:	4a 89       	ldd	r20, Y+18	; 0x12
    111e:	5b 89       	ldd	r21, Y+19	; 0x13
    1120:	ec 81       	ldd	r30, Y+4	; 0x04
    1122:	fd 81       	ldd	r31, Y+5	; 0x05
    1124:	34 96       	adiw	r30, 0x04	; 4
    1126:	ee 0f       	add	r30, r30
    1128:	ff 1f       	adc	r31, r31
    112a:	ec 0f       	add	r30, r28
    112c:	fd 1f       	adc	r31, r29
    112e:	60 81       	ld	r22, Z
    1130:	71 81       	ldd	r23, Z+1	; 0x01
    1132:	08 e0       	ldi	r16, 0x08	; 8
    1134:	10 e0       	ldi	r17, 0x00	; 0
    1136:	21 e0       	ldi	r18, 0x01	; 1
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	83 e9       	ldi	r24, 0x93	; 147
    113c:	95 e0       	ldi	r25, 0x05	; 5
    113e:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,one);
    1142:	4a 89       	ldd	r20, Y+18	; 0x12
    1144:	5b 89       	ldd	r21, Y+19	; 0x13
    1146:	ec 81       	ldd	r30, Y+4	; 0x04
    1148:	fd 81       	ldd	r31, Y+5	; 0x05
    114a:	34 96       	adiw	r30, 0x04	; 4
    114c:	ee 0f       	add	r30, r30
    114e:	ff 1f       	adc	r31, r31
    1150:	ec 0f       	add	r30, r28
    1152:	fd 1f       	adc	r31, r29
    1154:	60 81       	ld	r22, Z
    1156:	71 81       	ldd	r23, Z+1	; 0x01
    1158:	0f 2e       	mov	r0, r31
    115a:	f9 ef       	ldi	r31, 0xF9	; 249
    115c:	ef 2e       	mov	r14, r31
    115e:	f4 e0       	ldi	r31, 0x04	; 4
    1160:	ff 2e       	mov	r15, r31
    1162:	f0 2d       	mov	r31, r0
    1164:	21 e0       	ldi	r18, 0x01	; 1
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	83 e9       	ldi	r24, 0x93	; 147
    116a:	95 e0       	ldi	r25, 0x05	; 5
    116c:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    1170:	4a 89       	ldd	r20, Y+18	; 0x12
    1172:	5b 89       	ldd	r21, Y+19	; 0x13
    1174:	4e 5f       	subi	r20, 0xFE	; 254
    1176:	5f 4f       	sbci	r21, 0xFF	; 255
    1178:	ec 81       	ldd	r30, Y+4	; 0x04
    117a:	fd 81       	ldd	r31, Y+5	; 0x05
    117c:	34 96       	adiw	r30, 0x04	; 4
    117e:	ee 0f       	add	r30, r30
    1180:	ff 1f       	adc	r31, r31
    1182:	ec 0f       	add	r30, r28
    1184:	fd 1f       	adc	r31, r29
    1186:	60 81       	ld	r22, Z
    1188:	71 81       	ldd	r23, Z+1	; 0x01
    118a:	0f 2e       	mov	r0, r31
    118c:	f9 e9       	ldi	r31, 0x99	; 153
    118e:	ef 2e       	mov	r14, r31
    1190:	f4 e0       	ldi	r31, 0x04	; 4
    1192:	ff 2e       	mov	r15, r31
    1194:	f0 2d       	mov	r31, r0
    1196:	21 e0       	ldi	r18, 0x01	; 1
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	83 e9       	ldi	r24, 0x93	; 147
    119c:	95 e0       	ldi	r25, 0x05	; 5
    119e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    11a2:	4a 89       	ldd	r20, Y+18	; 0x12
    11a4:	5b 89       	ldd	r21, Y+19	; 0x13
    11a6:	41 50       	subi	r20, 0x01	; 1
    11a8:	51 09       	sbc	r21, r1
    11aa:	8c 81       	ldd	r24, Y+4	; 0x04
    11ac:	9d 81       	ldd	r25, Y+5	; 0x05
    11ae:	04 96       	adiw	r24, 0x04	; 4
    11b0:	88 0f       	add	r24, r24
    11b2:	99 1f       	adc	r25, r25
    11b4:	c8 0f       	add	r28, r24
    11b6:	d9 1f       	adc	r29, r25
    11b8:	68 81       	ld	r22, Y
    11ba:	79 81       	ldd	r23, Y+1	; 0x01
    11bc:	0f 2e       	mov	r0, r31
    11be:	f1 ea       	ldi	r31, 0xA1	; 161
    11c0:	ef 2e       	mov	r14, r31
    11c2:	f4 e0       	ldi	r31, 0x04	; 4
    11c4:	ff 2e       	mov	r15, r31
    11c6:	f0 2d       	mov	r31, r0
    11c8:	21 e0       	ldi	r18, 0x01	; 1
    11ca:	30 e0       	ldi	r19, 0x00	; 0
    11cc:	83 e9       	ldi	r24, 0x93	; 147
    11ce:	95 e0       	ldi	r25, 0x05	; 5
    11d0:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    11d4:	44 c3       	rjmp	.+1672   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 2:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    11d6:	4a 89       	ldd	r20, Y+18	; 0x12
    11d8:	5b 89       	ldd	r21, Y+19	; 0x13
    11da:	ec 81       	ldd	r30, Y+4	; 0x04
    11dc:	fd 81       	ldd	r31, Y+5	; 0x05
    11de:	34 96       	adiw	r30, 0x04	; 4
    11e0:	ee 0f       	add	r30, r30
    11e2:	ff 1f       	adc	r31, r31
    11e4:	ec 0f       	add	r30, r28
    11e6:	fd 1f       	adc	r31, r29
    11e8:	60 81       	ld	r22, Z
    11ea:	71 81       	ldd	r23, Z+1	; 0x01
    11ec:	08 e0       	ldi	r16, 0x08	; 8
    11ee:	10 e0       	ldi	r17, 0x00	; 0
    11f0:	21 e0       	ldi	r18, 0x01	; 1
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	83 e9       	ldi	r24, 0x93	; 147
    11f6:	95 e0       	ldi	r25, 0x05	; 5
    11f8:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,two);
    11fc:	4a 89       	ldd	r20, Y+18	; 0x12
    11fe:	5b 89       	ldd	r21, Y+19	; 0x13
    1200:	ec 81       	ldd	r30, Y+4	; 0x04
    1202:	fd 81       	ldd	r31, Y+5	; 0x05
    1204:	34 96       	adiw	r30, 0x04	; 4
    1206:	ee 0f       	add	r30, r30
    1208:	ff 1f       	adc	r31, r31
    120a:	ec 0f       	add	r30, r28
    120c:	fd 1f       	adc	r31, r29
    120e:	60 81       	ld	r22, Z
    1210:	71 81       	ldd	r23, Z+1	; 0x01
    1212:	0f 2e       	mov	r0, r31
    1214:	f1 ef       	ldi	r31, 0xF1	; 241
    1216:	ef 2e       	mov	r14, r31
    1218:	f4 e0       	ldi	r31, 0x04	; 4
    121a:	ff 2e       	mov	r15, r31
    121c:	f0 2d       	mov	r31, r0
    121e:	21 e0       	ldi	r18, 0x01	; 1
    1220:	30 e0       	ldi	r19, 0x00	; 0
    1222:	83 e9       	ldi	r24, 0x93	; 147
    1224:	95 e0       	ldi	r25, 0x05	; 5
    1226:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    122a:	4a 89       	ldd	r20, Y+18	; 0x12
    122c:	5b 89       	ldd	r21, Y+19	; 0x13
    122e:	4e 5f       	subi	r20, 0xFE	; 254
    1230:	5f 4f       	sbci	r21, 0xFF	; 255
    1232:	ec 81       	ldd	r30, Y+4	; 0x04
    1234:	fd 81       	ldd	r31, Y+5	; 0x05
    1236:	34 96       	adiw	r30, 0x04	; 4
    1238:	ee 0f       	add	r30, r30
    123a:	ff 1f       	adc	r31, r31
    123c:	ec 0f       	add	r30, r28
    123e:	fd 1f       	adc	r31, r29
    1240:	60 81       	ld	r22, Z
    1242:	71 81       	ldd	r23, Z+1	; 0x01
    1244:	0f 2e       	mov	r0, r31
    1246:	f9 e9       	ldi	r31, 0x99	; 153
    1248:	ef 2e       	mov	r14, r31
    124a:	f4 e0       	ldi	r31, 0x04	; 4
    124c:	ff 2e       	mov	r15, r31
    124e:	f0 2d       	mov	r31, r0
    1250:	21 e0       	ldi	r18, 0x01	; 1
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	83 e9       	ldi	r24, 0x93	; 147
    1256:	95 e0       	ldi	r25, 0x05	; 5
    1258:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    125c:	4a 89       	ldd	r20, Y+18	; 0x12
    125e:	5b 89       	ldd	r21, Y+19	; 0x13
    1260:	41 50       	subi	r20, 0x01	; 1
    1262:	51 09       	sbc	r21, r1
    1264:	8c 81       	ldd	r24, Y+4	; 0x04
    1266:	9d 81       	ldd	r25, Y+5	; 0x05
    1268:	04 96       	adiw	r24, 0x04	; 4
    126a:	88 0f       	add	r24, r24
    126c:	99 1f       	adc	r25, r25
    126e:	c8 0f       	add	r28, r24
    1270:	d9 1f       	adc	r29, r25
    1272:	68 81       	ld	r22, Y
    1274:	79 81       	ldd	r23, Y+1	; 0x01
    1276:	0f 2e       	mov	r0, r31
    1278:	f1 ea       	ldi	r31, 0xA1	; 161
    127a:	ef 2e       	mov	r14, r31
    127c:	f4 e0       	ldi	r31, 0x04	; 4
    127e:	ff 2e       	mov	r15, r31
    1280:	f0 2d       	mov	r31, r0
    1282:	21 e0       	ldi	r18, 0x01	; 1
    1284:	30 e0       	ldi	r19, 0x00	; 0
    1286:	83 e9       	ldi	r24, 0x93	; 147
    1288:	95 e0       	ldi	r25, 0x05	; 5
    128a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    128e:	e7 c2       	rjmp	.+1486   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 3:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    1290:	4a 89       	ldd	r20, Y+18	; 0x12
    1292:	5b 89       	ldd	r21, Y+19	; 0x13
    1294:	ec 81       	ldd	r30, Y+4	; 0x04
    1296:	fd 81       	ldd	r31, Y+5	; 0x05
    1298:	34 96       	adiw	r30, 0x04	; 4
    129a:	ee 0f       	add	r30, r30
    129c:	ff 1f       	adc	r31, r31
    129e:	ec 0f       	add	r30, r28
    12a0:	fd 1f       	adc	r31, r29
    12a2:	60 81       	ld	r22, Z
    12a4:	71 81       	ldd	r23, Z+1	; 0x01
    12a6:	08 e0       	ldi	r16, 0x08	; 8
    12a8:	10 e0       	ldi	r17, 0x00	; 0
    12aa:	21 e0       	ldi	r18, 0x01	; 1
    12ac:	30 e0       	ldi	r19, 0x00	; 0
    12ae:	83 e9       	ldi	r24, 0x93	; 147
    12b0:	95 e0       	ldi	r25, 0x05	; 5
    12b2:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,three);
    12b6:	4a 89       	ldd	r20, Y+18	; 0x12
    12b8:	5b 89       	ldd	r21, Y+19	; 0x13
    12ba:	ec 81       	ldd	r30, Y+4	; 0x04
    12bc:	fd 81       	ldd	r31, Y+5	; 0x05
    12be:	34 96       	adiw	r30, 0x04	; 4
    12c0:	ee 0f       	add	r30, r30
    12c2:	ff 1f       	adc	r31, r31
    12c4:	ec 0f       	add	r30, r28
    12c6:	fd 1f       	adc	r31, r29
    12c8:	60 81       	ld	r22, Z
    12ca:	71 81       	ldd	r23, Z+1	; 0x01
    12cc:	0f 2e       	mov	r0, r31
    12ce:	f9 ee       	ldi	r31, 0xE9	; 233
    12d0:	ef 2e       	mov	r14, r31
    12d2:	f4 e0       	ldi	r31, 0x04	; 4
    12d4:	ff 2e       	mov	r15, r31
    12d6:	f0 2d       	mov	r31, r0
    12d8:	21 e0       	ldi	r18, 0x01	; 1
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	83 e9       	ldi	r24, 0x93	; 147
    12de:	95 e0       	ldi	r25, 0x05	; 5
    12e0:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    12e4:	4a 89       	ldd	r20, Y+18	; 0x12
    12e6:	5b 89       	ldd	r21, Y+19	; 0x13
    12e8:	4e 5f       	subi	r20, 0xFE	; 254
    12ea:	5f 4f       	sbci	r21, 0xFF	; 255
    12ec:	ec 81       	ldd	r30, Y+4	; 0x04
    12ee:	fd 81       	ldd	r31, Y+5	; 0x05
    12f0:	34 96       	adiw	r30, 0x04	; 4
    12f2:	ee 0f       	add	r30, r30
    12f4:	ff 1f       	adc	r31, r31
    12f6:	ec 0f       	add	r30, r28
    12f8:	fd 1f       	adc	r31, r29
    12fa:	60 81       	ld	r22, Z
    12fc:	71 81       	ldd	r23, Z+1	; 0x01
    12fe:	0f 2e       	mov	r0, r31
    1300:	f9 e9       	ldi	r31, 0x99	; 153
    1302:	ef 2e       	mov	r14, r31
    1304:	f4 e0       	ldi	r31, 0x04	; 4
    1306:	ff 2e       	mov	r15, r31
    1308:	f0 2d       	mov	r31, r0
    130a:	21 e0       	ldi	r18, 0x01	; 1
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	83 e9       	ldi	r24, 0x93	; 147
    1310:	95 e0       	ldi	r25, 0x05	; 5
    1312:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    1316:	4a 89       	ldd	r20, Y+18	; 0x12
    1318:	5b 89       	ldd	r21, Y+19	; 0x13
    131a:	41 50       	subi	r20, 0x01	; 1
    131c:	51 09       	sbc	r21, r1
    131e:	8c 81       	ldd	r24, Y+4	; 0x04
    1320:	9d 81       	ldd	r25, Y+5	; 0x05
    1322:	04 96       	adiw	r24, 0x04	; 4
    1324:	88 0f       	add	r24, r24
    1326:	99 1f       	adc	r25, r25
    1328:	c8 0f       	add	r28, r24
    132a:	d9 1f       	adc	r29, r25
    132c:	68 81       	ld	r22, Y
    132e:	79 81       	ldd	r23, Y+1	; 0x01
    1330:	0f 2e       	mov	r0, r31
    1332:	f1 ea       	ldi	r31, 0xA1	; 161
    1334:	ef 2e       	mov	r14, r31
    1336:	f4 e0       	ldi	r31, 0x04	; 4
    1338:	ff 2e       	mov	r15, r31
    133a:	f0 2d       	mov	r31, r0
    133c:	21 e0       	ldi	r18, 0x01	; 1
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	83 e9       	ldi	r24, 0x93	; 147
    1342:	95 e0       	ldi	r25, 0x05	; 5
    1344:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    1348:	8a c2       	rjmp	.+1300   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 4:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    134a:	4a 89       	ldd	r20, Y+18	; 0x12
    134c:	5b 89       	ldd	r21, Y+19	; 0x13
    134e:	ec 81       	ldd	r30, Y+4	; 0x04
    1350:	fd 81       	ldd	r31, Y+5	; 0x05
    1352:	34 96       	adiw	r30, 0x04	; 4
    1354:	ee 0f       	add	r30, r30
    1356:	ff 1f       	adc	r31, r31
    1358:	ec 0f       	add	r30, r28
    135a:	fd 1f       	adc	r31, r29
    135c:	60 81       	ld	r22, Z
    135e:	71 81       	ldd	r23, Z+1	; 0x01
    1360:	08 e0       	ldi	r16, 0x08	; 8
    1362:	10 e0       	ldi	r17, 0x00	; 0
    1364:	21 e0       	ldi	r18, 0x01	; 1
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	83 e9       	ldi	r24, 0x93	; 147
    136a:	95 e0       	ldi	r25, 0x05	; 5
    136c:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,four);
    1370:	4a 89       	ldd	r20, Y+18	; 0x12
    1372:	5b 89       	ldd	r21, Y+19	; 0x13
    1374:	ec 81       	ldd	r30, Y+4	; 0x04
    1376:	fd 81       	ldd	r31, Y+5	; 0x05
    1378:	34 96       	adiw	r30, 0x04	; 4
    137a:	ee 0f       	add	r30, r30
    137c:	ff 1f       	adc	r31, r31
    137e:	ec 0f       	add	r30, r28
    1380:	fd 1f       	adc	r31, r29
    1382:	60 81       	ld	r22, Z
    1384:	71 81       	ldd	r23, Z+1	; 0x01
    1386:	0f 2e       	mov	r0, r31
    1388:	f1 ee       	ldi	r31, 0xE1	; 225
    138a:	ef 2e       	mov	r14, r31
    138c:	f4 e0       	ldi	r31, 0x04	; 4
    138e:	ff 2e       	mov	r15, r31
    1390:	f0 2d       	mov	r31, r0
    1392:	21 e0       	ldi	r18, 0x01	; 1
    1394:	30 e0       	ldi	r19, 0x00	; 0
    1396:	83 e9       	ldi	r24, 0x93	; 147
    1398:	95 e0       	ldi	r25, 0x05	; 5
    139a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    139e:	4a 89       	ldd	r20, Y+18	; 0x12
    13a0:	5b 89       	ldd	r21, Y+19	; 0x13
    13a2:	4e 5f       	subi	r20, 0xFE	; 254
    13a4:	5f 4f       	sbci	r21, 0xFF	; 255
    13a6:	ec 81       	ldd	r30, Y+4	; 0x04
    13a8:	fd 81       	ldd	r31, Y+5	; 0x05
    13aa:	34 96       	adiw	r30, 0x04	; 4
    13ac:	ee 0f       	add	r30, r30
    13ae:	ff 1f       	adc	r31, r31
    13b0:	ec 0f       	add	r30, r28
    13b2:	fd 1f       	adc	r31, r29
    13b4:	60 81       	ld	r22, Z
    13b6:	71 81       	ldd	r23, Z+1	; 0x01
    13b8:	0f 2e       	mov	r0, r31
    13ba:	f9 e9       	ldi	r31, 0x99	; 153
    13bc:	ef 2e       	mov	r14, r31
    13be:	f4 e0       	ldi	r31, 0x04	; 4
    13c0:	ff 2e       	mov	r15, r31
    13c2:	f0 2d       	mov	r31, r0
    13c4:	21 e0       	ldi	r18, 0x01	; 1
    13c6:	30 e0       	ldi	r19, 0x00	; 0
    13c8:	83 e9       	ldi	r24, 0x93	; 147
    13ca:	95 e0       	ldi	r25, 0x05	; 5
    13cc:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    13d0:	4a 89       	ldd	r20, Y+18	; 0x12
    13d2:	5b 89       	ldd	r21, Y+19	; 0x13
    13d4:	41 50       	subi	r20, 0x01	; 1
    13d6:	51 09       	sbc	r21, r1
    13d8:	8c 81       	ldd	r24, Y+4	; 0x04
    13da:	9d 81       	ldd	r25, Y+5	; 0x05
    13dc:	04 96       	adiw	r24, 0x04	; 4
    13de:	88 0f       	add	r24, r24
    13e0:	99 1f       	adc	r25, r25
    13e2:	c8 0f       	add	r28, r24
    13e4:	d9 1f       	adc	r29, r25
    13e6:	68 81       	ld	r22, Y
    13e8:	79 81       	ldd	r23, Y+1	; 0x01
    13ea:	0f 2e       	mov	r0, r31
    13ec:	f1 ea       	ldi	r31, 0xA1	; 161
    13ee:	ef 2e       	mov	r14, r31
    13f0:	f4 e0       	ldi	r31, 0x04	; 4
    13f2:	ff 2e       	mov	r15, r31
    13f4:	f0 2d       	mov	r31, r0
    13f6:	21 e0       	ldi	r18, 0x01	; 1
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	83 e9       	ldi	r24, 0x93	; 147
    13fc:	95 e0       	ldi	r25, 0x05	; 5
    13fe:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    1402:	2d c2       	rjmp	.+1114   	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 5:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    1404:	4a 89       	ldd	r20, Y+18	; 0x12
    1406:	5b 89       	ldd	r21, Y+19	; 0x13
    1408:	ec 81       	ldd	r30, Y+4	; 0x04
    140a:	fd 81       	ldd	r31, Y+5	; 0x05
    140c:	34 96       	adiw	r30, 0x04	; 4
    140e:	ee 0f       	add	r30, r30
    1410:	ff 1f       	adc	r31, r31
    1412:	ec 0f       	add	r30, r28
    1414:	fd 1f       	adc	r31, r29
    1416:	60 81       	ld	r22, Z
    1418:	71 81       	ldd	r23, Z+1	; 0x01
    141a:	08 e0       	ldi	r16, 0x08	; 8
    141c:	10 e0       	ldi	r17, 0x00	; 0
    141e:	21 e0       	ldi	r18, 0x01	; 1
    1420:	30 e0       	ldi	r19, 0x00	; 0
    1422:	83 e9       	ldi	r24, 0x93	; 147
    1424:	95 e0       	ldi	r25, 0x05	; 5
    1426:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,five);
    142a:	4a 89       	ldd	r20, Y+18	; 0x12
    142c:	5b 89       	ldd	r21, Y+19	; 0x13
    142e:	ec 81       	ldd	r30, Y+4	; 0x04
    1430:	fd 81       	ldd	r31, Y+5	; 0x05
    1432:	34 96       	adiw	r30, 0x04	; 4
    1434:	ee 0f       	add	r30, r30
    1436:	ff 1f       	adc	r31, r31
    1438:	ec 0f       	add	r30, r28
    143a:	fd 1f       	adc	r31, r29
    143c:	60 81       	ld	r22, Z
    143e:	71 81       	ldd	r23, Z+1	; 0x01
    1440:	0f 2e       	mov	r0, r31
    1442:	f9 ed       	ldi	r31, 0xD9	; 217
    1444:	ef 2e       	mov	r14, r31
    1446:	f4 e0       	ldi	r31, 0x04	; 4
    1448:	ff 2e       	mov	r15, r31
    144a:	f0 2d       	mov	r31, r0
    144c:	21 e0       	ldi	r18, 0x01	; 1
    144e:	30 e0       	ldi	r19, 0x00	; 0
    1450:	83 e9       	ldi	r24, 0x93	; 147
    1452:	95 e0       	ldi	r25, 0x05	; 5
    1454:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    1458:	4a 89       	ldd	r20, Y+18	; 0x12
    145a:	5b 89       	ldd	r21, Y+19	; 0x13
    145c:	4e 5f       	subi	r20, 0xFE	; 254
    145e:	5f 4f       	sbci	r21, 0xFF	; 255
    1460:	ec 81       	ldd	r30, Y+4	; 0x04
    1462:	fd 81       	ldd	r31, Y+5	; 0x05
    1464:	34 96       	adiw	r30, 0x04	; 4
    1466:	ee 0f       	add	r30, r30
    1468:	ff 1f       	adc	r31, r31
    146a:	ec 0f       	add	r30, r28
    146c:	fd 1f       	adc	r31, r29
    146e:	60 81       	ld	r22, Z
    1470:	71 81       	ldd	r23, Z+1	; 0x01
    1472:	0f 2e       	mov	r0, r31
    1474:	f9 e9       	ldi	r31, 0x99	; 153
    1476:	ef 2e       	mov	r14, r31
    1478:	f4 e0       	ldi	r31, 0x04	; 4
    147a:	ff 2e       	mov	r15, r31
    147c:	f0 2d       	mov	r31, r0
    147e:	21 e0       	ldi	r18, 0x01	; 1
    1480:	30 e0       	ldi	r19, 0x00	; 0
    1482:	83 e9       	ldi	r24, 0x93	; 147
    1484:	95 e0       	ldi	r25, 0x05	; 5
    1486:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    148a:	4a 89       	ldd	r20, Y+18	; 0x12
    148c:	5b 89       	ldd	r21, Y+19	; 0x13
    148e:	41 50       	subi	r20, 0x01	; 1
    1490:	51 09       	sbc	r21, r1
    1492:	8c 81       	ldd	r24, Y+4	; 0x04
    1494:	9d 81       	ldd	r25, Y+5	; 0x05
    1496:	04 96       	adiw	r24, 0x04	; 4
    1498:	88 0f       	add	r24, r24
    149a:	99 1f       	adc	r25, r25
    149c:	c8 0f       	add	r28, r24
    149e:	d9 1f       	adc	r29, r25
    14a0:	68 81       	ld	r22, Y
    14a2:	79 81       	ldd	r23, Y+1	; 0x01
    14a4:	0f 2e       	mov	r0, r31
    14a6:	f1 ea       	ldi	r31, 0xA1	; 161
    14a8:	ef 2e       	mov	r14, r31
    14aa:	f4 e0       	ldi	r31, 0x04	; 4
    14ac:	ff 2e       	mov	r15, r31
    14ae:	f0 2d       	mov	r31, r0
    14b0:	21 e0       	ldi	r18, 0x01	; 1
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	83 e9       	ldi	r24, 0x93	; 147
    14b6:	95 e0       	ldi	r25, 0x05	; 5
    14b8:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    14bc:	d0 c1       	rjmp	.+928    	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 6:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    14be:	4a 89       	ldd	r20, Y+18	; 0x12
    14c0:	5b 89       	ldd	r21, Y+19	; 0x13
    14c2:	ec 81       	ldd	r30, Y+4	; 0x04
    14c4:	fd 81       	ldd	r31, Y+5	; 0x05
    14c6:	34 96       	adiw	r30, 0x04	; 4
    14c8:	ee 0f       	add	r30, r30
    14ca:	ff 1f       	adc	r31, r31
    14cc:	ec 0f       	add	r30, r28
    14ce:	fd 1f       	adc	r31, r29
    14d0:	60 81       	ld	r22, Z
    14d2:	71 81       	ldd	r23, Z+1	; 0x01
    14d4:	08 e0       	ldi	r16, 0x08	; 8
    14d6:	10 e0       	ldi	r17, 0x00	; 0
    14d8:	21 e0       	ldi	r18, 0x01	; 1
    14da:	30 e0       	ldi	r19, 0x00	; 0
    14dc:	83 e9       	ldi	r24, 0x93	; 147
    14de:	95 e0       	ldi	r25, 0x05	; 5
    14e0:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,six);
    14e4:	4a 89       	ldd	r20, Y+18	; 0x12
    14e6:	5b 89       	ldd	r21, Y+19	; 0x13
    14e8:	ec 81       	ldd	r30, Y+4	; 0x04
    14ea:	fd 81       	ldd	r31, Y+5	; 0x05
    14ec:	34 96       	adiw	r30, 0x04	; 4
    14ee:	ee 0f       	add	r30, r30
    14f0:	ff 1f       	adc	r31, r31
    14f2:	ec 0f       	add	r30, r28
    14f4:	fd 1f       	adc	r31, r29
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	0f 2e       	mov	r0, r31
    14fc:	f1 ed       	ldi	r31, 0xD1	; 209
    14fe:	ef 2e       	mov	r14, r31
    1500:	f4 e0       	ldi	r31, 0x04	; 4
    1502:	ff 2e       	mov	r15, r31
    1504:	f0 2d       	mov	r31, r0
    1506:	21 e0       	ldi	r18, 0x01	; 1
    1508:	30 e0       	ldi	r19, 0x00	; 0
    150a:	83 e9       	ldi	r24, 0x93	; 147
    150c:	95 e0       	ldi	r25, 0x05	; 5
    150e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    1512:	4a 89       	ldd	r20, Y+18	; 0x12
    1514:	5b 89       	ldd	r21, Y+19	; 0x13
    1516:	4e 5f       	subi	r20, 0xFE	; 254
    1518:	5f 4f       	sbci	r21, 0xFF	; 255
    151a:	ec 81       	ldd	r30, Y+4	; 0x04
    151c:	fd 81       	ldd	r31, Y+5	; 0x05
    151e:	34 96       	adiw	r30, 0x04	; 4
    1520:	ee 0f       	add	r30, r30
    1522:	ff 1f       	adc	r31, r31
    1524:	ec 0f       	add	r30, r28
    1526:	fd 1f       	adc	r31, r29
    1528:	60 81       	ld	r22, Z
    152a:	71 81       	ldd	r23, Z+1	; 0x01
    152c:	0f 2e       	mov	r0, r31
    152e:	f9 e9       	ldi	r31, 0x99	; 153
    1530:	ef 2e       	mov	r14, r31
    1532:	f4 e0       	ldi	r31, 0x04	; 4
    1534:	ff 2e       	mov	r15, r31
    1536:	f0 2d       	mov	r31, r0
    1538:	21 e0       	ldi	r18, 0x01	; 1
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	83 e9       	ldi	r24, 0x93	; 147
    153e:	95 e0       	ldi	r25, 0x05	; 5
    1540:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    1544:	4a 89       	ldd	r20, Y+18	; 0x12
    1546:	5b 89       	ldd	r21, Y+19	; 0x13
    1548:	41 50       	subi	r20, 0x01	; 1
    154a:	51 09       	sbc	r21, r1
    154c:	8c 81       	ldd	r24, Y+4	; 0x04
    154e:	9d 81       	ldd	r25, Y+5	; 0x05
    1550:	04 96       	adiw	r24, 0x04	; 4
    1552:	88 0f       	add	r24, r24
    1554:	99 1f       	adc	r25, r25
    1556:	c8 0f       	add	r28, r24
    1558:	d9 1f       	adc	r29, r25
    155a:	68 81       	ld	r22, Y
    155c:	79 81       	ldd	r23, Y+1	; 0x01
    155e:	0f 2e       	mov	r0, r31
    1560:	f1 ea       	ldi	r31, 0xA1	; 161
    1562:	ef 2e       	mov	r14, r31
    1564:	f4 e0       	ldi	r31, 0x04	; 4
    1566:	ff 2e       	mov	r15, r31
    1568:	f0 2d       	mov	r31, r0
    156a:	21 e0       	ldi	r18, 0x01	; 1
    156c:	30 e0       	ldi	r19, 0x00	; 0
    156e:	83 e9       	ldi	r24, 0x93	; 147
    1570:	95 e0       	ldi	r25, 0x05	; 5
    1572:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    1576:	73 c1       	rjmp	.+742    	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 7:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    1578:	4a 89       	ldd	r20, Y+18	; 0x12
    157a:	5b 89       	ldd	r21, Y+19	; 0x13
    157c:	ec 81       	ldd	r30, Y+4	; 0x04
    157e:	fd 81       	ldd	r31, Y+5	; 0x05
    1580:	34 96       	adiw	r30, 0x04	; 4
    1582:	ee 0f       	add	r30, r30
    1584:	ff 1f       	adc	r31, r31
    1586:	ec 0f       	add	r30, r28
    1588:	fd 1f       	adc	r31, r29
    158a:	60 81       	ld	r22, Z
    158c:	71 81       	ldd	r23, Z+1	; 0x01
    158e:	08 e0       	ldi	r16, 0x08	; 8
    1590:	10 e0       	ldi	r17, 0x00	; 0
    1592:	21 e0       	ldi	r18, 0x01	; 1
    1594:	30 e0       	ldi	r19, 0x00	; 0
    1596:	83 e9       	ldi	r24, 0x93	; 147
    1598:	95 e0       	ldi	r25, 0x05	; 5
    159a:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,seven);
    159e:	4a 89       	ldd	r20, Y+18	; 0x12
    15a0:	5b 89       	ldd	r21, Y+19	; 0x13
    15a2:	ec 81       	ldd	r30, Y+4	; 0x04
    15a4:	fd 81       	ldd	r31, Y+5	; 0x05
    15a6:	34 96       	adiw	r30, 0x04	; 4
    15a8:	ee 0f       	add	r30, r30
    15aa:	ff 1f       	adc	r31, r31
    15ac:	ec 0f       	add	r30, r28
    15ae:	fd 1f       	adc	r31, r29
    15b0:	60 81       	ld	r22, Z
    15b2:	71 81       	ldd	r23, Z+1	; 0x01
    15b4:	0f 2e       	mov	r0, r31
    15b6:	f9 ec       	ldi	r31, 0xC9	; 201
    15b8:	ef 2e       	mov	r14, r31
    15ba:	f4 e0       	ldi	r31, 0x04	; 4
    15bc:	ff 2e       	mov	r15, r31
    15be:	f0 2d       	mov	r31, r0
    15c0:	21 e0       	ldi	r18, 0x01	; 1
    15c2:	30 e0       	ldi	r19, 0x00	; 0
    15c4:	83 e9       	ldi	r24, 0x93	; 147
    15c6:	95 e0       	ldi	r25, 0x05	; 5
    15c8:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    15cc:	4a 89       	ldd	r20, Y+18	; 0x12
    15ce:	5b 89       	ldd	r21, Y+19	; 0x13
    15d0:	4e 5f       	subi	r20, 0xFE	; 254
    15d2:	5f 4f       	sbci	r21, 0xFF	; 255
    15d4:	ec 81       	ldd	r30, Y+4	; 0x04
    15d6:	fd 81       	ldd	r31, Y+5	; 0x05
    15d8:	34 96       	adiw	r30, 0x04	; 4
    15da:	ee 0f       	add	r30, r30
    15dc:	ff 1f       	adc	r31, r31
    15de:	ec 0f       	add	r30, r28
    15e0:	fd 1f       	adc	r31, r29
    15e2:	60 81       	ld	r22, Z
    15e4:	71 81       	ldd	r23, Z+1	; 0x01
    15e6:	0f 2e       	mov	r0, r31
    15e8:	f9 e9       	ldi	r31, 0x99	; 153
    15ea:	ef 2e       	mov	r14, r31
    15ec:	f4 e0       	ldi	r31, 0x04	; 4
    15ee:	ff 2e       	mov	r15, r31
    15f0:	f0 2d       	mov	r31, r0
    15f2:	21 e0       	ldi	r18, 0x01	; 1
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	83 e9       	ldi	r24, 0x93	; 147
    15f8:	95 e0       	ldi	r25, 0x05	; 5
    15fa:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    15fe:	4a 89       	ldd	r20, Y+18	; 0x12
    1600:	5b 89       	ldd	r21, Y+19	; 0x13
    1602:	41 50       	subi	r20, 0x01	; 1
    1604:	51 09       	sbc	r21, r1
    1606:	8c 81       	ldd	r24, Y+4	; 0x04
    1608:	9d 81       	ldd	r25, Y+5	; 0x05
    160a:	04 96       	adiw	r24, 0x04	; 4
    160c:	88 0f       	add	r24, r24
    160e:	99 1f       	adc	r25, r25
    1610:	c8 0f       	add	r28, r24
    1612:	d9 1f       	adc	r29, r25
    1614:	68 81       	ld	r22, Y
    1616:	79 81       	ldd	r23, Y+1	; 0x01
    1618:	0f 2e       	mov	r0, r31
    161a:	f1 ea       	ldi	r31, 0xA1	; 161
    161c:	ef 2e       	mov	r14, r31
    161e:	f4 e0       	ldi	r31, 0x04	; 4
    1620:	ff 2e       	mov	r15, r31
    1622:	f0 2d       	mov	r31, r0
    1624:	21 e0       	ldi	r18, 0x01	; 1
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	83 e9       	ldi	r24, 0x93	; 147
    162a:	95 e0       	ldi	r25, 0x05	; 5
    162c:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    1630:	16 c1       	rjmp	.+556    	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 8:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    1632:	4a 89       	ldd	r20, Y+18	; 0x12
    1634:	5b 89       	ldd	r21, Y+19	; 0x13
    1636:	ec 81       	ldd	r30, Y+4	; 0x04
    1638:	fd 81       	ldd	r31, Y+5	; 0x05
    163a:	34 96       	adiw	r30, 0x04	; 4
    163c:	ee 0f       	add	r30, r30
    163e:	ff 1f       	adc	r31, r31
    1640:	ec 0f       	add	r30, r28
    1642:	fd 1f       	adc	r31, r29
    1644:	60 81       	ld	r22, Z
    1646:	71 81       	ldd	r23, Z+1	; 0x01
    1648:	08 e0       	ldi	r16, 0x08	; 8
    164a:	10 e0       	ldi	r17, 0x00	; 0
    164c:	21 e0       	ldi	r18, 0x01	; 1
    164e:	30 e0       	ldi	r19, 0x00	; 0
    1650:	83 e9       	ldi	r24, 0x93	; 147
    1652:	95 e0       	ldi	r25, 0x05	; 5
    1654:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,eight);
    1658:	4a 89       	ldd	r20, Y+18	; 0x12
    165a:	5b 89       	ldd	r21, Y+19	; 0x13
    165c:	ec 81       	ldd	r30, Y+4	; 0x04
    165e:	fd 81       	ldd	r31, Y+5	; 0x05
    1660:	34 96       	adiw	r30, 0x04	; 4
    1662:	ee 0f       	add	r30, r30
    1664:	ff 1f       	adc	r31, r31
    1666:	ec 0f       	add	r30, r28
    1668:	fd 1f       	adc	r31, r29
    166a:	60 81       	ld	r22, Z
    166c:	71 81       	ldd	r23, Z+1	; 0x01
    166e:	0f 2e       	mov	r0, r31
    1670:	f1 ec       	ldi	r31, 0xC1	; 193
    1672:	ef 2e       	mov	r14, r31
    1674:	f4 e0       	ldi	r31, 0x04	; 4
    1676:	ff 2e       	mov	r15, r31
    1678:	f0 2d       	mov	r31, r0
    167a:	21 e0       	ldi	r18, 0x01	; 1
    167c:	30 e0       	ldi	r19, 0x00	; 0
    167e:	83 e9       	ldi	r24, 0x93	; 147
    1680:	95 e0       	ldi	r25, 0x05	; 5
    1682:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    1686:	4a 89       	ldd	r20, Y+18	; 0x12
    1688:	5b 89       	ldd	r21, Y+19	; 0x13
    168a:	4e 5f       	subi	r20, 0xFE	; 254
    168c:	5f 4f       	sbci	r21, 0xFF	; 255
    168e:	ec 81       	ldd	r30, Y+4	; 0x04
    1690:	fd 81       	ldd	r31, Y+5	; 0x05
    1692:	34 96       	adiw	r30, 0x04	; 4
    1694:	ee 0f       	add	r30, r30
    1696:	ff 1f       	adc	r31, r31
    1698:	ec 0f       	add	r30, r28
    169a:	fd 1f       	adc	r31, r29
    169c:	60 81       	ld	r22, Z
    169e:	71 81       	ldd	r23, Z+1	; 0x01
    16a0:	0f 2e       	mov	r0, r31
    16a2:	f9 e9       	ldi	r31, 0x99	; 153
    16a4:	ef 2e       	mov	r14, r31
    16a6:	f4 e0       	ldi	r31, 0x04	; 4
    16a8:	ff 2e       	mov	r15, r31
    16aa:	f0 2d       	mov	r31, r0
    16ac:	21 e0       	ldi	r18, 0x01	; 1
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	83 e9       	ldi	r24, 0x93	; 147
    16b2:	95 e0       	ldi	r25, 0x05	; 5
    16b4:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    16b8:	4a 89       	ldd	r20, Y+18	; 0x12
    16ba:	5b 89       	ldd	r21, Y+19	; 0x13
    16bc:	41 50       	subi	r20, 0x01	; 1
    16be:	51 09       	sbc	r21, r1
    16c0:	8c 81       	ldd	r24, Y+4	; 0x04
    16c2:	9d 81       	ldd	r25, Y+5	; 0x05
    16c4:	04 96       	adiw	r24, 0x04	; 4
    16c6:	88 0f       	add	r24, r24
    16c8:	99 1f       	adc	r25, r25
    16ca:	c8 0f       	add	r28, r24
    16cc:	d9 1f       	adc	r29, r25
    16ce:	68 81       	ld	r22, Y
    16d0:	79 81       	ldd	r23, Y+1	; 0x01
    16d2:	0f 2e       	mov	r0, r31
    16d4:	f1 ea       	ldi	r31, 0xA1	; 161
    16d6:	ef 2e       	mov	r14, r31
    16d8:	f4 e0       	ldi	r31, 0x04	; 4
    16da:	ff 2e       	mov	r15, r31
    16dc:	f0 2d       	mov	r31, r0
    16de:	21 e0       	ldi	r18, 0x01	; 1
    16e0:	30 e0       	ldi	r19, 0x00	; 0
    16e2:	83 e9       	ldi	r24, 0x93	; 147
    16e4:	95 e0       	ldi	r25, 0x05	; 5
    16e6:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    16ea:	b9 c0       	rjmp	.+370    	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 9:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    16ec:	4a 89       	ldd	r20, Y+18	; 0x12
    16ee:	5b 89       	ldd	r21, Y+19	; 0x13
    16f0:	ec 81       	ldd	r30, Y+4	; 0x04
    16f2:	fd 81       	ldd	r31, Y+5	; 0x05
    16f4:	34 96       	adiw	r30, 0x04	; 4
    16f6:	ee 0f       	add	r30, r30
    16f8:	ff 1f       	adc	r31, r31
    16fa:	ec 0f       	add	r30, r28
    16fc:	fd 1f       	adc	r31, r29
    16fe:	60 81       	ld	r22, Z
    1700:	71 81       	ldd	r23, Z+1	; 0x01
    1702:	08 e0       	ldi	r16, 0x08	; 8
    1704:	10 e0       	ldi	r17, 0x00	; 0
    1706:	21 e0       	ldi	r18, 0x01	; 1
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	83 e9       	ldi	r24, 0x93	; 147
    170c:	95 e0       	ldi	r25, 0x05	; 5
    170e:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,nine);
    1712:	4a 89       	ldd	r20, Y+18	; 0x12
    1714:	5b 89       	ldd	r21, Y+19	; 0x13
    1716:	ec 81       	ldd	r30, Y+4	; 0x04
    1718:	fd 81       	ldd	r31, Y+5	; 0x05
    171a:	34 96       	adiw	r30, 0x04	; 4
    171c:	ee 0f       	add	r30, r30
    171e:	ff 1f       	adc	r31, r31
    1720:	ec 0f       	add	r30, r28
    1722:	fd 1f       	adc	r31, r29
    1724:	60 81       	ld	r22, Z
    1726:	71 81       	ldd	r23, Z+1	; 0x01
    1728:	0f 2e       	mov	r0, r31
    172a:	f9 eb       	ldi	r31, 0xB9	; 185
    172c:	ef 2e       	mov	r14, r31
    172e:	f4 e0       	ldi	r31, 0x04	; 4
    1730:	ff 2e       	mov	r15, r31
    1732:	f0 2d       	mov	r31, r0
    1734:	21 e0       	ldi	r18, 0x01	; 1
    1736:	30 e0       	ldi	r19, 0x00	; 0
    1738:	83 e9       	ldi	r24, 0x93	; 147
    173a:	95 e0       	ldi	r25, 0x05	; 5
    173c:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    1740:	4a 89       	ldd	r20, Y+18	; 0x12
    1742:	5b 89       	ldd	r21, Y+19	; 0x13
    1744:	4e 5f       	subi	r20, 0xFE	; 254
    1746:	5f 4f       	sbci	r21, 0xFF	; 255
    1748:	ec 81       	ldd	r30, Y+4	; 0x04
    174a:	fd 81       	ldd	r31, Y+5	; 0x05
    174c:	34 96       	adiw	r30, 0x04	; 4
    174e:	ee 0f       	add	r30, r30
    1750:	ff 1f       	adc	r31, r31
    1752:	ec 0f       	add	r30, r28
    1754:	fd 1f       	adc	r31, r29
    1756:	60 81       	ld	r22, Z
    1758:	71 81       	ldd	r23, Z+1	; 0x01
    175a:	0f 2e       	mov	r0, r31
    175c:	f9 e9       	ldi	r31, 0x99	; 153
    175e:	ef 2e       	mov	r14, r31
    1760:	f4 e0       	ldi	r31, 0x04	; 4
    1762:	ff 2e       	mov	r15, r31
    1764:	f0 2d       	mov	r31, r0
    1766:	21 e0       	ldi	r18, 0x01	; 1
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	83 e9       	ldi	r24, 0x93	; 147
    176c:	95 e0       	ldi	r25, 0x05	; 5
    176e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    1772:	4a 89       	ldd	r20, Y+18	; 0x12
    1774:	5b 89       	ldd	r21, Y+19	; 0x13
    1776:	41 50       	subi	r20, 0x01	; 1
    1778:	51 09       	sbc	r21, r1
    177a:	8c 81       	ldd	r24, Y+4	; 0x04
    177c:	9d 81       	ldd	r25, Y+5	; 0x05
    177e:	04 96       	adiw	r24, 0x04	; 4
    1780:	88 0f       	add	r24, r24
    1782:	99 1f       	adc	r25, r25
    1784:	c8 0f       	add	r28, r24
    1786:	d9 1f       	adc	r29, r25
    1788:	68 81       	ld	r22, Y
    178a:	79 81       	ldd	r23, Y+1	; 0x01
    178c:	0f 2e       	mov	r0, r31
    178e:	f1 ea       	ldi	r31, 0xA1	; 161
    1790:	ef 2e       	mov	r14, r31
    1792:	f4 e0       	ldi	r31, 0x04	; 4
    1794:	ff 2e       	mov	r15, r31
    1796:	f0 2d       	mov	r31, r0
    1798:	21 e0       	ldi	r18, 0x01	; 1
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	83 e9       	ldi	r24, 0x93	; 147
    179e:	95 e0       	ldi	r25, 0x05	; 5
    17a0:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    17a4:	5c c0       	rjmp	.+184    	; 0x185e <_ZN13Password_Menu7actionsEv+0x828>
			}
			case 10:
			{
				oled.OLED_Clear_Bufer_part(x[pointer],y,1,8);
    17a6:	4a 89       	ldd	r20, Y+18	; 0x12
    17a8:	5b 89       	ldd	r21, Y+19	; 0x13
    17aa:	ec 81       	ldd	r30, Y+4	; 0x04
    17ac:	fd 81       	ldd	r31, Y+5	; 0x05
    17ae:	34 96       	adiw	r30, 0x04	; 4
    17b0:	ee 0f       	add	r30, r30
    17b2:	ff 1f       	adc	r31, r31
    17b4:	ec 0f       	add	r30, r28
    17b6:	fd 1f       	adc	r31, r29
    17b8:	60 81       	ld	r22, Z
    17ba:	71 81       	ldd	r23, Z+1	; 0x01
    17bc:	08 e0       	ldi	r16, 0x08	; 8
    17be:	10 e0       	ldi	r17, 0x00	; 0
    17c0:	21 e0       	ldi	r18, 0x01	; 1
    17c2:	30 e0       	ldi	r19, 0x00	; 0
    17c4:	83 e9       	ldi	r24, 0x93	; 147
    17c6:	95 e0       	ldi	r25, 0x05	; 5
    17c8:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(x[pointer],y,1,8,arrow);
    17cc:	4a 89       	ldd	r20, Y+18	; 0x12
    17ce:	5b 89       	ldd	r21, Y+19	; 0x13
    17d0:	ec 81       	ldd	r30, Y+4	; 0x04
    17d2:	fd 81       	ldd	r31, Y+5	; 0x05
    17d4:	34 96       	adiw	r30, 0x04	; 4
    17d6:	ee 0f       	add	r30, r30
    17d8:	ff 1f       	adc	r31, r31
    17da:	ec 0f       	add	r30, r28
    17dc:	fd 1f       	adc	r31, r29
    17de:	60 81       	ld	r22, Z
    17e0:	71 81       	ldd	r23, Z+1	; 0x01
    17e2:	0f 2e       	mov	r0, r31
    17e4:	f9 ea       	ldi	r31, 0xA9	; 169
    17e6:	ef 2e       	mov	r14, r31
    17e8:	f4 e0       	ldi	r31, 0x04	; 4
    17ea:	ff 2e       	mov	r15, r31
    17ec:	f0 2d       	mov	r31, r0
    17ee:	21 e0       	ldi	r18, 0x01	; 1
    17f0:	30 e0       	ldi	r19, 0x00	; 0
    17f2:	83 e9       	ldi	r24, 0x93	; 147
    17f4:	95 e0       	ldi	r25, 0x05	; 5
    17f6:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y+2,1,8,downn);
    17fa:	4a 89       	ldd	r20, Y+18	; 0x12
    17fc:	5b 89       	ldd	r21, Y+19	; 0x13
    17fe:	4e 5f       	subi	r20, 0xFE	; 254
    1800:	5f 4f       	sbci	r21, 0xFF	; 255
    1802:	ec 81       	ldd	r30, Y+4	; 0x04
    1804:	fd 81       	ldd	r31, Y+5	; 0x05
    1806:	34 96       	adiw	r30, 0x04	; 4
    1808:	ee 0f       	add	r30, r30
    180a:	ff 1f       	adc	r31, r31
    180c:	ec 0f       	add	r30, r28
    180e:	fd 1f       	adc	r31, r29
    1810:	60 81       	ld	r22, Z
    1812:	71 81       	ldd	r23, Z+1	; 0x01
    1814:	0f 2e       	mov	r0, r31
    1816:	f9 e9       	ldi	r31, 0x99	; 153
    1818:	ef 2e       	mov	r14, r31
    181a:	f4 e0       	ldi	r31, 0x04	; 4
    181c:	ff 2e       	mov	r15, r31
    181e:	f0 2d       	mov	r31, r0
    1820:	21 e0       	ldi	r18, 0x01	; 1
    1822:	30 e0       	ldi	r19, 0x00	; 0
    1824:	83 e9       	ldi	r24, 0x93	; 147
    1826:	95 e0       	ldi	r25, 0x05	; 5
    1828:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				oled.OLED_Write_To_Bufer(x[pointer],y-1,1,8,upp);
    182c:	4a 89       	ldd	r20, Y+18	; 0x12
    182e:	5b 89       	ldd	r21, Y+19	; 0x13
    1830:	41 50       	subi	r20, 0x01	; 1
    1832:	51 09       	sbc	r21, r1
    1834:	8c 81       	ldd	r24, Y+4	; 0x04
    1836:	9d 81       	ldd	r25, Y+5	; 0x05
    1838:	04 96       	adiw	r24, 0x04	; 4
    183a:	88 0f       	add	r24, r24
    183c:	99 1f       	adc	r25, r25
    183e:	c8 0f       	add	r28, r24
    1840:	d9 1f       	adc	r29, r25
    1842:	68 81       	ld	r22, Y
    1844:	79 81       	ldd	r23, Y+1	; 0x01
    1846:	0f 2e       	mov	r0, r31
    1848:	f1 ea       	ldi	r31, 0xA1	; 161
    184a:	ef 2e       	mov	r14, r31
    184c:	f4 e0       	ldi	r31, 0x04	; 4
    184e:	ff 2e       	mov	r15, r31
    1850:	f0 2d       	mov	r31, r0
    1852:	21 e0       	ldi	r18, 0x01	; 1
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	83 e9       	ldi	r24, 0x93	; 147
    1858:	95 e0       	ldi	r25, 0x05	; 5
    185a:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
			}
		}
		}
	};
    185e:	df 91       	pop	r29
    1860:	cf 91       	pop	r28
    1862:	1f 91       	pop	r17
    1864:	0f 91       	pop	r16
    1866:	ff 90       	pop	r15
    1868:	ef 90       	pop	r14
    186a:	08 95       	ret

0000186c <_ZN13Password_Menu7DefaultEv>:
	Password_Menu()
	{

	};
	
	void Default() override
    186c:	ef 92       	push	r14
    186e:	ff 92       	push	r15
    1870:	0f 93       	push	r16
    1872:	1f 93       	push	r17
    1874:	cf 93       	push	r28
    1876:	df 93       	push	r29
    1878:	ec 01       	movw	r28, r24
	{
		oled.OLED_Write_To_Bufer(x[0],y+1,1,8,line);
    187a:	4a 89       	ldd	r20, Y+18	; 0x12
    187c:	5b 89       	ldd	r21, Y+19	; 0x13
    187e:	4f 5f       	subi	r20, 0xFF	; 255
    1880:	5f 4f       	sbci	r21, 0xFF	; 255
    1882:	68 85       	ldd	r22, Y+8	; 0x08
    1884:	79 85       	ldd	r23, Y+9	; 0x09
    1886:	0f 2e       	mov	r0, r31
    1888:	f1 eb       	ldi	r31, 0xB1	; 177
    188a:	ef 2e       	mov	r14, r31
    188c:	f4 e0       	ldi	r31, 0x04	; 4
    188e:	ff 2e       	mov	r15, r31
    1890:	f0 2d       	mov	r31, r0
    1892:	08 e0       	ldi	r16, 0x08	; 8
    1894:	10 e0       	ldi	r17, 0x00	; 0
    1896:	21 e0       	ldi	r18, 0x01	; 1
    1898:	30 e0       	ldi	r19, 0x00	; 0
    189a:	83 e9       	ldi	r24, 0x93	; 147
    189c:	95 e0       	ldi	r25, 0x05	; 5
    189e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[1],y+1,1,8,line);
    18a2:	4a 89       	ldd	r20, Y+18	; 0x12
    18a4:	5b 89       	ldd	r21, Y+19	; 0x13
    18a6:	4f 5f       	subi	r20, 0xFF	; 255
    18a8:	5f 4f       	sbci	r21, 0xFF	; 255
    18aa:	6a 85       	ldd	r22, Y+10	; 0x0a
    18ac:	7b 85       	ldd	r23, Y+11	; 0x0b
    18ae:	21 e0       	ldi	r18, 0x01	; 1
    18b0:	30 e0       	ldi	r19, 0x00	; 0
    18b2:	83 e9       	ldi	r24, 0x93	; 147
    18b4:	95 e0       	ldi	r25, 0x05	; 5
    18b6:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[2],y+1,1,8,line);
    18ba:	4a 89       	ldd	r20, Y+18	; 0x12
    18bc:	5b 89       	ldd	r21, Y+19	; 0x13
    18be:	4f 5f       	subi	r20, 0xFF	; 255
    18c0:	5f 4f       	sbci	r21, 0xFF	; 255
    18c2:	6c 85       	ldd	r22, Y+12	; 0x0c
    18c4:	7d 85       	ldd	r23, Y+13	; 0x0d
    18c6:	21 e0       	ldi	r18, 0x01	; 1
    18c8:	30 e0       	ldi	r19, 0x00	; 0
    18ca:	83 e9       	ldi	r24, 0x93	; 147
    18cc:	95 e0       	ldi	r25, 0x05	; 5
    18ce:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[3],y+1,1,8,line);
    18d2:	4a 89       	ldd	r20, Y+18	; 0x12
    18d4:	5b 89       	ldd	r21, Y+19	; 0x13
    18d6:	4f 5f       	subi	r20, 0xFF	; 255
    18d8:	5f 4f       	sbci	r21, 0xFF	; 255
    18da:	6e 85       	ldd	r22, Y+14	; 0x0e
    18dc:	7f 85       	ldd	r23, Y+15	; 0x0f
    18de:	21 e0       	ldi	r18, 0x01	; 1
    18e0:	30 e0       	ldi	r19, 0x00	; 0
    18e2:	83 e9       	ldi	r24, 0x93	; 147
    18e4:	95 e0       	ldi	r25, 0x05	; 5
    18e6:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(x[4],y+1,1,8,line);
    18ea:	4a 89       	ldd	r20, Y+18	; 0x12
    18ec:	5b 89       	ldd	r21, Y+19	; 0x13
    18ee:	4f 5f       	subi	r20, 0xFF	; 255
    18f0:	5f 4f       	sbci	r21, 0xFF	; 255
    18f2:	68 89       	ldd	r22, Y+16	; 0x10
    18f4:	79 89       	ldd	r23, Y+17	; 0x11
    18f6:	21 e0       	ldi	r18, 0x01	; 1
    18f8:	30 e0       	ldi	r19, 0x00	; 0
    18fa:	83 e9       	ldi	r24, 0x93	; 147
    18fc:	95 e0       	ldi	r25, 0x05	; 5
    18fe:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	};
    1902:	df 91       	pop	r29
    1904:	cf 91       	pop	r28
    1906:	1f 91       	pop	r17
    1908:	0f 91       	pop	r16
    190a:	ff 90       	pop	r15
    190c:	ef 90       	pop	r14
    190e:	08 95       	ret

00001910 <_ZN9Main_Menu7actionsEv>:
	{
		
		
	};
	
	void actions()override
    1910:	ef 92       	push	r14
    1912:	ff 92       	push	r15
    1914:	0f 93       	push	r16
    1916:	1f 93       	push	r17
	{
		switch(pointer)
    1918:	fc 01       	movw	r30, r24
    191a:	84 81       	ldd	r24, Z+4	; 0x04
    191c:	95 81       	ldd	r25, Z+5	; 0x05
    191e:	81 30       	cpi	r24, 0x01	; 1
    1920:	91 05       	cpc	r25, r1
    1922:	d9 f1       	breq	.+118    	; 0x199a <_ZN9Main_Menu7actionsEv+0x8a>
    1924:	82 30       	cpi	r24, 0x02	; 2
    1926:	91 05       	cpc	r25, r1
    1928:	09 f4       	brne	.+2      	; 0x192c <_ZN9Main_Menu7actionsEv+0x1c>
    192a:	53 c0       	rjmp	.+166    	; 0x19d2 <_ZN9Main_Menu7actionsEv+0xc2>
    192c:	89 2b       	or	r24, r25
    192e:	09 f0       	breq	.+2      	; 0x1932 <_ZN9Main_Menu7actionsEv+0x22>
    1930:	6b c0       	rjmp	.+214    	; 0x1a08 <_ZN9Main_Menu7actionsEv+0xf8>
		{
			case 0:
			{
				oled.OLED_Clear_Bufer_part(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32);
    1932:	00 e2       	ldi	r16, 0x20	; 32
    1934:	10 e0       	ldi	r17, 0x00	; 0
    1936:	24 e0       	ldi	r18, 0x04	; 4
    1938:	30 e0       	ldi	r19, 0x00	; 0
    193a:	42 e0       	ldi	r20, 0x02	; 2
    193c:	50 e0       	ldi	r21, 0x00	; 0
    193e:	62 e3       	ldi	r22, 0x32	; 50
    1940:	70 e0       	ldi	r23, 0x00	; 0
    1942:	83 e9       	ldi	r24, 0x93	; 147
    1944:	95 e0       	ldi	r25, 0x05	; 5
    1946:	0e 94 ca 14 	call	0x2994	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				if(locked) oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,unlock);
    194a:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <locked>
    194e:	88 23       	and	r24, r24
    1950:	89 f0       	breq	.+34     	; 0x1974 <_ZN9Main_Menu7actionsEv+0x64>
    1952:	0f 2e       	mov	r0, r31
    1954:	f9 e6       	ldi	r31, 0x69	; 105
    1956:	ef 2e       	mov	r14, r31
    1958:	f2 e0       	ldi	r31, 0x02	; 2
    195a:	ff 2e       	mov	r15, r31
    195c:	f0 2d       	mov	r31, r0
    195e:	24 e0       	ldi	r18, 0x04	; 4
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	42 e0       	ldi	r20, 0x02	; 2
    1964:	50 e0       	ldi	r21, 0x00	; 0
    1966:	62 e3       	ldi	r22, 0x32	; 50
    1968:	70 e0       	ldi	r23, 0x00	; 0
    196a:	83 e9       	ldi	r24, 0x93	; 147
    196c:	95 e0       	ldi	r25, 0x05	; 5
    196e:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    1972:	4a c0       	rjmp	.+148    	; 0x1a08 <_ZN9Main_Menu7actionsEv+0xf8>
				else oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,lock);
    1974:	0f 2e       	mov	r0, r31
    1976:	f9 ef       	ldi	r31, 0xF9	; 249
    1978:	ef 2e       	mov	r14, r31
    197a:	f2 e0       	ldi	r31, 0x02	; 2
    197c:	ff 2e       	mov	r15, r31
    197e:	f0 2d       	mov	r31, r0
    1980:	00 e2       	ldi	r16, 0x20	; 32
    1982:	10 e0       	ldi	r17, 0x00	; 0
    1984:	24 e0       	ldi	r18, 0x04	; 4
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	42 e0       	ldi	r20, 0x02	; 2
    198a:	50 e0       	ldi	r21, 0x00	; 0
    198c:	62 e3       	ldi	r22, 0x32	; 50
    198e:	70 e0       	ldi	r23, 0x00	; 0
    1990:	83 e9       	ldi	r24, 0x93	; 147
    1992:	95 e0       	ldi	r25, 0x05	; 5
    1994:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    1998:	37 c0       	rjmp	.+110    	; 0x1a08 <_ZN9Main_Menu7actionsEv+0xf8>
				break;
			}
			case 1:
			{
				oled.OLED_Clear_Bufer_part(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32);
    199a:	00 e2       	ldi	r16, 0x20	; 32
    199c:	10 e0       	ldi	r17, 0x00	; 0
    199e:	24 e0       	ldi	r18, 0x04	; 4
    19a0:	30 e0       	ldi	r19, 0x00	; 0
    19a2:	42 e0       	ldi	r20, 0x02	; 2
    19a4:	50 e0       	ldi	r21, 0x00	; 0
    19a6:	62 e3       	ldi	r22, 0x32	; 50
    19a8:	70 e0       	ldi	r23, 0x00	; 0
    19aa:	83 e9       	ldi	r24, 0x93	; 147
    19ac:	95 e0       	ldi	r25, 0x05	; 5
    19ae:	f2 d7       	rcall	.+4068   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,gear);
    19b0:	0f 2e       	mov	r0, r31
    19b2:	f9 e0       	ldi	r31, 0x09	; 9
    19b4:	ef 2e       	mov	r14, r31
    19b6:	f4 e0       	ldi	r31, 0x04	; 4
    19b8:	ff 2e       	mov	r15, r31
    19ba:	f0 2d       	mov	r31, r0
    19bc:	24 e0       	ldi	r18, 0x04	; 4
    19be:	30 e0       	ldi	r19, 0x00	; 0
    19c0:	42 e0       	ldi	r20, 0x02	; 2
    19c2:	50 e0       	ldi	r21, 0x00	; 0
    19c4:	62 e3       	ldi	r22, 0x32	; 50
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	83 e9       	ldi	r24, 0x93	; 147
    19ca:	95 e0       	ldi	r25, 0x05	; 5
    19cc:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
    19d0:	1b c0       	rjmp	.+54     	; 0x1a08 <_ZN9Main_Menu7actionsEv+0xf8>
			}
			case 2:
			{
				oled.OLED_Clear_Bufer_part(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32);
    19d2:	00 e2       	ldi	r16, 0x20	; 32
    19d4:	10 e0       	ldi	r17, 0x00	; 0
    19d6:	24 e0       	ldi	r18, 0x04	; 4
    19d8:	30 e0       	ldi	r19, 0x00	; 0
    19da:	42 e0       	ldi	r20, 0x02	; 2
    19dc:	50 e0       	ldi	r21, 0x00	; 0
    19de:	62 e3       	ldi	r22, 0x32	; 50
    19e0:	70 e0       	ldi	r23, 0x00	; 0
    19e2:	83 e9       	ldi	r24, 0x93	; 147
    19e4:	95 e0       	ldi	r25, 0x05	; 5
    19e6:	d6 d7       	rcall	.+4012   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
				oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X,MAIN_MENU_IMG_Y,4,32,info);
    19e8:	0f 2e       	mov	r0, r31
    19ea:	f9 e7       	ldi	r31, 0x79	; 121
    19ec:	ef 2e       	mov	r14, r31
    19ee:	f3 e0       	ldi	r31, 0x03	; 3
    19f0:	ff 2e       	mov	r15, r31
    19f2:	f0 2d       	mov	r31, r0
    19f4:	24 e0       	ldi	r18, 0x04	; 4
    19f6:	30 e0       	ldi	r19, 0x00	; 0
    19f8:	42 e0       	ldi	r20, 0x02	; 2
    19fa:	50 e0       	ldi	r21, 0x00	; 0
    19fc:	62 e3       	ldi	r22, 0x32	; 50
    19fe:	70 e0       	ldi	r23, 0x00	; 0
    1a00:	83 e9       	ldi	r24, 0x93	; 147
    1a02:	95 e0       	ldi	r25, 0x05	; 5
    1a04:	0e 94 19 15 	call	0x2a32	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
				break;
			}	
		}
	};
    1a08:	1f 91       	pop	r17
    1a0a:	0f 91       	pop	r16
    1a0c:	ff 90       	pop	r15
    1a0e:	ef 90       	pop	r14
    1a10:	08 95       	ret

00001a12 <_ZN9Main_Menu7DefaultEv>:
	Main_Menu()
	{

	};
	
    void Default() override
    1a12:	ef 92       	push	r14
    1a14:	ff 92       	push	r15
    1a16:	0f 93       	push	r16
    1a18:	1f 93       	push	r17
    {
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X-20,MAIN_MENU_IMG_Y+1,1,16,lt);
    1a1a:	0f 2e       	mov	r0, r31
    1a1c:	f9 e5       	ldi	r31, 0x59	; 89
    1a1e:	ef 2e       	mov	r14, r31
    1a20:	f2 e0       	ldi	r31, 0x02	; 2
    1a22:	ff 2e       	mov	r15, r31
    1a24:	f0 2d       	mov	r31, r0
    1a26:	00 e1       	ldi	r16, 0x10	; 16
    1a28:	10 e0       	ldi	r17, 0x00	; 0
    1a2a:	21 e0       	ldi	r18, 0x01	; 1
    1a2c:	30 e0       	ldi	r19, 0x00	; 0
    1a2e:	43 e0       	ldi	r20, 0x03	; 3
    1a30:	50 e0       	ldi	r21, 0x00	; 0
    1a32:	6e e1       	ldi	r22, 0x1E	; 30
    1a34:	70 e0       	ldi	r23, 0x00	; 0
    1a36:	83 e9       	ldi	r24, 0x93	; 147
    1a38:	95 e0       	ldi	r25, 0x05	; 5
    1a3a:	fb d7       	rcall	.+4086   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		oled.OLED_Write_To_Bufer(MAIN_MENU_IMG_X+56,MAIN_MENU_IMG_Y+1,1,16,rt);
    1a3c:	0f 2e       	mov	r0, r31
    1a3e:	f9 ee       	ldi	r31, 0xE9	; 233
    1a40:	ef 2e       	mov	r14, r31
    1a42:	f2 e0       	ldi	r31, 0x02	; 2
    1a44:	ff 2e       	mov	r15, r31
    1a46:	f0 2d       	mov	r31, r0
    1a48:	21 e0       	ldi	r18, 0x01	; 1
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	43 e0       	ldi	r20, 0x03	; 3
    1a4e:	50 e0       	ldi	r21, 0x00	; 0
    1a50:	6a e6       	ldi	r22, 0x6A	; 106
    1a52:	70 e0       	ldi	r23, 0x00	; 0
    1a54:	83 e9       	ldi	r24, 0x93	; 147
    1a56:	95 e0       	ldi	r25, 0x05	; 5
    1a58:	ec d7       	rcall	.+4056   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    };
    1a5a:	1f 91       	pop	r17
    1a5c:	0f 91       	pop	r16
    1a5e:	ff 90       	pop	r15
    1a60:	ef 90       	pop	r14
    1a62:	08 95       	ret

00001a64 <_ZN13Settings_Menu5closeEv>:
		actions();
	};
	
	void close()override
	{
		pointer=0;
    1a64:	fc 01       	movw	r30, r24
    1a66:	15 82       	std	Z+5, r1	; 0x05
    1a68:	14 82       	std	Z+4, r1	; 0x04
		Settings_Menu_Status=false;
    1a6a:	10 92 91 05 	sts	0x0591, r1	; 0x800591 <Settings_Menu_Status>
		Main_Menu_Status=true;
    1a6e:	81 e0       	ldi	r24, 0x01	; 1
    1a70:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
		oled.OLED_Bufer_Clear();
    1a74:	83 e9       	ldi	r24, 0x93	; 147
    1a76:	95 e0       	ldi	r25, 0x05	; 5
    1a78:	fc c6       	rjmp	.+3576   	; 0x2872 <_ZN4OLED16OLED_Bufer_ClearEv>
    1a7a:	08 95       	ret

00001a7c <_ZN13Password_Menu5closeEv>:
				actions();
	};
	
	void close()override
	{
		pointer=0;
    1a7c:	fc 01       	movw	r30, r24
    1a7e:	15 82       	std	Z+5, r1	; 0x05
    1a80:	14 82       	std	Z+4, r1	; 0x04
		Password_Menu_Status=false;
    1a82:	10 92 92 05 	sts	0x0592, r1	; 0x800592 <Password_Menu_Status>
		Main_Menu_Status=true;
    1a86:	81 e0       	ldi	r24, 0x01	; 1
    1a88:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
		oled.OLED_Bufer_Clear();
    1a8c:	83 e9       	ldi	r24, 0x93	; 147
    1a8e:	95 e0       	ldi	r25, 0x05	; 5
    1a90:	f0 c6       	rjmp	.+3552   	; 0x2872 <_ZN4OLED16OLED_Bufer_ClearEv>
    1a92:	08 95       	ret

00001a94 <_ZN9Main_Menu5closeEv>:
		actions();
	};
	
	void close()override
	{
		oled.OLED_Bufer_Clear();
    1a94:	83 e9       	ldi	r24, 0x93	; 147
    1a96:	95 e0       	ldi	r25, 0x05	; 5
    1a98:	ec c6       	rjmp	.+3544   	; 0x2872 <_ZN4OLED16OLED_Bufer_ClearEv>
    1a9a:	08 95       	ret

00001a9c <__vector_4>:
bool btn3=false;
bool btn03=false;
bool btn12=false;

ISR(PCINT0_vect)
{
    1a9c:	1f 92       	push	r1
    1a9e:	0f 92       	push	r0
    1aa0:	0f b6       	in	r0, 0x3f	; 63
    1aa2:	0f 92       	push	r0
    1aa4:	11 24       	eor	r1, r1
    1aa6:	8f 93       	push	r24
    1aa8:	9f 93       	push	r25
    cli();
    1aaa:	f8 94       	cli
	if(PINA==0b00000100&!btn0 )
    1aac:	90 b1       	in	r25, 0x00	; 0
    1aae:	81 e0       	ldi	r24, 0x01	; 1
    1ab0:	94 30       	cpi	r25, 0x04	; 4
    1ab2:	09 f0       	breq	.+2      	; 0x1ab6 <__vector_4+0x1a>
    1ab4:	80 e0       	ldi	r24, 0x00	; 0
    1ab6:	90 91 65 05 	lds	r25, 0x0565	; 0x800565 <btn0>
    1aba:	98 17       	cp	r25, r24
    1abc:	18 f4       	brcc	.+6      	; 0x1ac4 <__vector_4+0x28>
	{
		btn0=true;
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	80 93 65 05 	sts	0x0565, r24	; 0x800565 <btn0>
	}
	if(PINA==0b00001000&!btn1 )
    1ac4:	90 b1       	in	r25, 0x00	; 0
    1ac6:	81 e0       	ldi	r24, 0x01	; 1
    1ac8:	98 30       	cpi	r25, 0x08	; 8
    1aca:	09 f0       	breq	.+2      	; 0x1ace <__vector_4+0x32>
    1acc:	80 e0       	ldi	r24, 0x00	; 0
    1ace:	90 91 64 05 	lds	r25, 0x0564	; 0x800564 <btn1>
    1ad2:	98 17       	cp	r25, r24
    1ad4:	18 f4       	brcc	.+6      	; 0x1adc <__vector_4+0x40>
	{
		btn1=true;
    1ad6:	81 e0       	ldi	r24, 0x01	; 1
    1ad8:	80 93 64 05 	sts	0x0564, r24	; 0x800564 <btn1>
	}
	if(PINA==0b00010000&!btn2 )
    1adc:	90 b1       	in	r25, 0x00	; 0
    1ade:	81 e0       	ldi	r24, 0x01	; 1
    1ae0:	90 31       	cpi	r25, 0x10	; 16
    1ae2:	09 f0       	breq	.+2      	; 0x1ae6 <__vector_4+0x4a>
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	90 91 63 05 	lds	r25, 0x0563	; 0x800563 <btn2>
    1aea:	98 17       	cp	r25, r24
    1aec:	18 f4       	brcc	.+6      	; 0x1af4 <__vector_4+0x58>
	{
		btn2=true;
    1aee:	81 e0       	ldi	r24, 0x01	; 1
    1af0:	80 93 63 05 	sts	0x0563, r24	; 0x800563 <btn2>
	}
	if(PINA==0b00100000&!btn3 )
    1af4:	90 b1       	in	r25, 0x00	; 0
    1af6:	81 e0       	ldi	r24, 0x01	; 1
    1af8:	90 32       	cpi	r25, 0x20	; 32
    1afa:	09 f0       	breq	.+2      	; 0x1afe <__vector_4+0x62>
    1afc:	80 e0       	ldi	r24, 0x00	; 0
    1afe:	90 91 62 05 	lds	r25, 0x0562	; 0x800562 <btn3>
    1b02:	98 17       	cp	r25, r24
    1b04:	18 f4       	brcc	.+6      	; 0x1b0c <__vector_4+0x70>
	{
		btn3=true;
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	80 93 62 05 	sts	0x0562, r24	; 0x800562 <btn3>
	}
	if(PINA==0b00011000&!btn03)
    1b0c:	90 b1       	in	r25, 0x00	; 0
    1b0e:	81 e0       	ldi	r24, 0x01	; 1
    1b10:	98 31       	cpi	r25, 0x18	; 24
    1b12:	09 f0       	breq	.+2      	; 0x1b16 <__vector_4+0x7a>
    1b14:	80 e0       	ldi	r24, 0x00	; 0
    1b16:	90 91 61 05 	lds	r25, 0x0561	; 0x800561 <btn03>
    1b1a:	98 17       	cp	r25, r24
    1b1c:	18 f4       	brcc	.+6      	; 0x1b24 <__vector_4+0x88>
	{
		btn03=true;
    1b1e:	81 e0       	ldi	r24, 0x01	; 1
    1b20:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <btn03>
	}
	if(PINA==0b00100100&!btn12)
    1b24:	90 b1       	in	r25, 0x00	; 0
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	94 32       	cpi	r25, 0x24	; 36
    1b2a:	09 f0       	breq	.+2      	; 0x1b2e <__vector_4+0x92>
    1b2c:	80 e0       	ldi	r24, 0x00	; 0
    1b2e:	90 91 60 05 	lds	r25, 0x0560	; 0x800560 <btn12>
    1b32:	98 17       	cp	r25, r24
    1b34:	18 f4       	brcc	.+6      	; 0x1b3c <__vector_4+0xa0>
	{
		btn12=true;
    1b36:	81 e0       	ldi	r24, 0x01	; 1
    1b38:	80 93 60 05 	sts	0x0560, r24	; 0x800560 <btn12>
	}
	sei();
    1b3c:	78 94       	sei

}
    1b3e:	9f 91       	pop	r25
    1b40:	8f 91       	pop	r24
    1b42:	0f 90       	pop	r0
    1b44:	0f be       	out	0x3f, r0	; 63
    1b46:	0f 90       	pop	r0
    1b48:	1f 90       	pop	r1
    1b4a:	18 95       	reti

00001b4c <_Z5checkv>:


void check()
{
    1b4c:	af 92       	push	r10
    1b4e:	bf 92       	push	r11
    1b50:	cf 92       	push	r12
    1b52:	df 92       	push	r13
    1b54:	ef 92       	push	r14
    1b56:	ff 92       	push	r15
    1b58:	0f 93       	push	r16
    1b5a:	1f 93       	push	r17
    1b5c:	cf 93       	push	r28
    1b5e:	df 93       	push	r29
	if(btn0 & !btn1 & !btn2 & btn3) btn03=true;
    1b60:	50 91 65 05 	lds	r21, 0x0565	; 0x800565 <btn0>
    1b64:	90 91 64 05 	lds	r25, 0x0564	; 0x800564 <btn1>
    1b68:	81 e0       	ldi	r24, 0x01	; 1
    1b6a:	39 2f       	mov	r19, r25
    1b6c:	38 27       	eor	r19, r24
    1b6e:	20 91 63 05 	lds	r18, 0x0563	; 0x800563 <btn2>
    1b72:	62 2f       	mov	r22, r18
    1b74:	68 27       	eor	r22, r24
    1b76:	a3 2f       	mov	r26, r19
    1b78:	a6 23       	and	r26, r22
    1b7a:	75 2f       	mov	r23, r21
    1b7c:	7a 23       	and	r23, r26
    1b7e:	b0 91 62 05 	lds	r27, 0x0562	; 0x800562 <btn3>
    1b82:	fb 2f       	mov	r31, r27
    1b84:	f7 23       	and	r31, r23
    1b86:	49 f0       	breq	.+18     	; 0x1b9a <_Z5checkv+0x4e>
    1b88:	80 93 61 05 	sts	0x0561, r24	; 0x800561 <btn03>
	if(!btn0 & btn1 & btn2 & !btn3) btn12=true;
    1b8c:	58 27       	eor	r21, r24
    1b8e:	8b 27       	eor	r24, r27
    1b90:	95 23       	and	r25, r21
    1b92:	92 23       	and	r25, r18
    1b94:	b9 17       	cp	r27, r25
    1b96:	48 f0       	brcs	.+18     	; 0x1baa <_Z5checkv+0x5e>
    1b98:	5f c4       	rjmp	.+2238   	; 0x2458 <_Z5checkv+0x90c>
    1b9a:	81 e0       	ldi	r24, 0x01	; 1
    1b9c:	58 27       	eor	r21, r24
    1b9e:	95 23       	and	r25, r21
    1ba0:	8b 27       	eor	r24, r27
    1ba2:	42 2f       	mov	r20, r18
    1ba4:	49 23       	and	r20, r25
    1ba6:	b4 17       	cp	r27, r20
    1ba8:	40 f4       	brcc	.+16     	; 0x1bba <_Z5checkv+0x6e>
    1baa:	91 e0       	ldi	r25, 0x01	; 1
    1bac:	90 93 60 05 	sts	0x0560, r25	; 0x800560 <btn12>
	
	if(btn0 & !btn1 & !btn2 & !btn3 & !btn12 & !btn03)
    1bb0:	f0 91 61 05 	lds	r31, 0x0561	; 0x800561 <btn03>
    1bb4:	40 e0       	ldi	r20, 0x00	; 0
    1bb6:	e1 e0       	ldi	r30, 0x01	; 1
    1bb8:	62 c3       	rjmp	.+1732   	; 0x227e <_Z5checkv+0x732>
    1bba:	e0 91 60 05 	lds	r30, 0x0560	; 0x800560 <btn12>
    1bbe:	41 e0       	ldi	r20, 0x01	; 1
    1bc0:	4e 27       	eor	r20, r30
    1bc2:	f0 91 61 05 	lds	r31, 0x0561	; 0x800561 <btn03>
    1bc6:	c8 2f       	mov	r28, r24
    1bc8:	c4 23       	and	r28, r20
    1bca:	7c 23       	and	r23, r28
    1bcc:	f7 17       	cp	r31, r23
    1bce:	08 f0       	brcs	.+2      	; 0x1bd2 <_Z5checkv+0x86>
    1bd0:	7b c0       	rjmp	.+246    	; 0x1cc8 <_Z5checkv+0x17c>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    1bd2:	08 e0       	ldi	r16, 0x08	; 8
    1bd4:	10 e0       	ldi	r17, 0x00	; 0
    1bd6:	21 e0       	ldi	r18, 0x01	; 1
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	40 e0       	ldi	r20, 0x00	; 0
    1bdc:	50 e0       	ldi	r21, 0x00	; 0
    1bde:	60 e0       	ldi	r22, 0x00	; 0
    1be0:	70 e0       	ldi	r23, 0x00	; 0
    1be2:	83 e9       	ldi	r24, 0x93	; 147
    1be4:	95 e0       	ldi	r25, 0x05	; 5
    1be6:	d6 d6       	rcall	.+3500   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,zero);
    1be8:	0f 2e       	mov	r0, r31
    1bea:	f1 e0       	ldi	r31, 0x01	; 1
    1bec:	ef 2e       	mov	r14, r31
    1bee:	f5 e0       	ldi	r31, 0x05	; 5
    1bf0:	ff 2e       	mov	r15, r31
    1bf2:	f0 2d       	mov	r31, r0
    1bf4:	21 e0       	ldi	r18, 0x01	; 1
    1bf6:	30 e0       	ldi	r19, 0x00	; 0
    1bf8:	40 e0       	ldi	r20, 0x00	; 0
    1bfa:	50 e0       	ldi	r21, 0x00	; 0
    1bfc:	60 e0       	ldi	r22, 0x00	; 0
    1bfe:	70 e0       	ldi	r23, 0x00	; 0
    1c00:	83 e9       	ldi	r24, 0x93	; 147
    1c02:	95 e0       	ldi	r25, 0x05	; 5
    1c04:	16 d7       	rcall	.+3628   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		if (Password_Menu_Status)
    1c06:	80 91 92 05 	lds	r24, 0x0592	; 0x800592 <Password_Menu_Status>
    1c0a:	88 23       	and	r24, r24
    1c0c:	e1 f0       	breq	.+56     	; 0x1c46 <_Z5checkv+0xfa>
		actions();
	};
	
	void previous()override
	{
		symbol_pointer--;
    1c0e:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <passw_menu+0x6>
    1c12:	90 91 73 05 	lds	r25, 0x0573	; 0x800573 <passw_menu+0x7>
    1c16:	01 97       	sbiw	r24, 0x01	; 1
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
    1c18:	2a f0       	brmi	.+10     	; 0x1c24 <_Z5checkv+0xd8>
		actions();
	};
	
	void previous()override
	{
		symbol_pointer--;
    1c1a:	90 93 73 05 	sts	0x0573, r25	; 0x800573 <passw_menu+0x7>
    1c1e:	80 93 72 05 	sts	0x0572, r24	; 0x800572 <passw_menu+0x6>
    1c22:	06 c0       	rjmp	.+12     	; 0x1c30 <_Z5checkv+0xe4>
		if(symbol_pointer<0) symbol_pointer=PASSWORD_MENU_SIMVOLS_COUNT;
    1c24:	8a e0       	ldi	r24, 0x0A	; 10
    1c26:	90 e0       	ldi	r25, 0x00	; 0
    1c28:	90 93 73 05 	sts	0x0573, r25	; 0x800573 <passw_menu+0x7>
    1c2c:	80 93 72 05 	sts	0x0572, r24	; 0x800572 <passw_menu+0x6>
		actions();
    1c30:	e0 91 6c 05 	lds	r30, 0x056C	; 0x80056c <passw_menu>
    1c34:	f0 91 6d 05 	lds	r31, 0x056D	; 0x80056d <passw_menu+0x1>
    1c38:	00 88       	ldd	r0, Z+16	; 0x10
    1c3a:	f1 89       	ldd	r31, Z+17	; 0x11
    1c3c:	e0 2d       	mov	r30, r0
    1c3e:	8c e6       	ldi	r24, 0x6C	; 108
    1c40:	95 e0       	ldi	r25, 0x05	; 5
    1c42:	09 95       	icall
    1c44:	fc c3       	rjmp	.+2040   	; 0x243e <_Z5checkv+0x8f2>
		if (Password_Menu_Status)
		{
			passw_menu.previous();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    1c46:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    1c4a:	88 23       	and	r24, r24
    1c4c:	e1 f0       	breq	.+56     	; 0x1c86 <_Z5checkv+0x13a>
		actions();
	};
	
	void previous()override
	{
		pointer--;
    1c4e:	80 91 6a 05 	lds	r24, 0x056A	; 0x80056a <menu+0x4>
    1c52:	90 91 6b 05 	lds	r25, 0x056B	; 0x80056b <menu+0x5>
    1c56:	01 97       	sbiw	r24, 0x01	; 1
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
    1c58:	2a f0       	brmi	.+10     	; 0x1c64 <_Z5checkv+0x118>
		actions();
	};
	
	void previous()override
	{
		pointer--;
    1c5a:	90 93 6b 05 	sts	0x056B, r25	; 0x80056b <menu+0x5>
    1c5e:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <menu+0x4>
    1c62:	06 c0       	rjmp	.+12     	; 0x1c70 <_Z5checkv+0x124>
		if(pointer<0) pointer=MAIN_MENU_POINER_COUNT;
    1c64:	82 e0       	ldi	r24, 0x02	; 2
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	90 93 6b 05 	sts	0x056B, r25	; 0x80056b <menu+0x5>
    1c6c:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <menu+0x4>
		actions();
    1c70:	e0 91 66 05 	lds	r30, 0x0566	; 0x800566 <menu>
    1c74:	f0 91 67 05 	lds	r31, 0x0567	; 0x800567 <menu+0x1>
    1c78:	00 88       	ldd	r0, Z+16	; 0x10
    1c7a:	f1 89       	ldd	r31, Z+17	; 0x11
    1c7c:	e0 2d       	mov	r30, r0
    1c7e:	86 e6       	ldi	r24, 0x66	; 102
    1c80:	95 e0       	ldi	r25, 0x05	; 5
    1c82:	09 95       	icall
    1c84:	dc c3       	rjmp	.+1976   	; 0x243e <_Z5checkv+0x8f2>
		else if (Main_Menu_Status)
		{
			menu.previous();
			//menu.refresh();
		}
		else if (Settings_Menu_Status)
    1c86:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <Settings_Menu_Status>
    1c8a:	88 23       	and	r24, r24
    1c8c:	09 f4       	brne	.+2      	; 0x1c90 <_Z5checkv+0x144>
    1c8e:	d7 c3       	rjmp	.+1966   	; 0x243e <_Z5checkv+0x8f2>
		actions();
	};
	
	void previous()override
	{
		pointer--;
    1c90:	80 91 84 05 	lds	r24, 0x0584	; 0x800584 <sett_menu+0x4>
    1c94:	90 91 85 05 	lds	r25, 0x0585	; 0x800585 <sett_menu+0x5>
    1c98:	01 97       	sbiw	r24, 0x01	; 1
		if(pointer<0) pointer=SETTINGS_MENU_POINER_COUNT;
    1c9a:	2a f0       	brmi	.+10     	; 0x1ca6 <_Z5checkv+0x15a>
		actions();
	};
	
	void previous()override
	{
		pointer--;
    1c9c:	90 93 85 05 	sts	0x0585, r25	; 0x800585 <sett_menu+0x5>
    1ca0:	80 93 84 05 	sts	0x0584, r24	; 0x800584 <sett_menu+0x4>
    1ca4:	06 c0       	rjmp	.+12     	; 0x1cb2 <_Z5checkv+0x166>
		if(pointer<0) pointer=SETTINGS_MENU_POINER_COUNT;
    1ca6:	84 e0       	ldi	r24, 0x04	; 4
    1ca8:	90 e0       	ldi	r25, 0x00	; 0
    1caa:	90 93 85 05 	sts	0x0585, r25	; 0x800585 <sett_menu+0x5>
    1cae:	80 93 84 05 	sts	0x0584, r24	; 0x800584 <sett_menu+0x4>
		actions();		
    1cb2:	e0 91 80 05 	lds	r30, 0x0580	; 0x800580 <sett_menu>
    1cb6:	f0 91 81 05 	lds	r31, 0x0581	; 0x800581 <sett_menu+0x1>
    1cba:	00 88       	ldd	r0, Z+16	; 0x10
    1cbc:	f1 89       	ldd	r31, Z+17	; 0x11
    1cbe:	e0 2d       	mov	r30, r0
    1cc0:	80 e8       	ldi	r24, 0x80	; 128
    1cc2:	95 e0       	ldi	r25, 0x05	; 5
    1cc4:	09 95       	icall
    1cc6:	bb c3       	rjmp	.+1910   	; 0x243e <_Z5checkv+0x8f2>
		{
			sett_menu.previous();
			//sett_menu.refresh();
		}
	}
	else if(!btn0 & btn1 & !btn2 & !btn3 & !btn12 & !btn03)
    1cc8:	98 23       	and	r25, r24
    1cca:	96 23       	and	r25, r22
    1ccc:	94 23       	and	r25, r20
    1cce:	f9 17       	cp	r31, r25
    1cd0:	08 f0       	brcs	.+2      	; 0x1cd4 <_Z5checkv+0x188>
    1cd2:	d5 c2       	rjmp	.+1450   	; 0x227e <_Z5checkv+0x732>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    1cd4:	08 e0       	ldi	r16, 0x08	; 8
    1cd6:	10 e0       	ldi	r17, 0x00	; 0
    1cd8:	21 e0       	ldi	r18, 0x01	; 1
    1cda:	30 e0       	ldi	r19, 0x00	; 0
    1cdc:	40 e0       	ldi	r20, 0x00	; 0
    1cde:	50 e0       	ldi	r21, 0x00	; 0
    1ce0:	60 e0       	ldi	r22, 0x00	; 0
    1ce2:	70 e0       	ldi	r23, 0x00	; 0
    1ce4:	83 e9       	ldi	r24, 0x93	; 147
    1ce6:	95 e0       	ldi	r25, 0x05	; 5
    1ce8:	55 d6       	rcall	.+3242   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,one);
    1cea:	0f 2e       	mov	r0, r31
    1cec:	f9 ef       	ldi	r31, 0xF9	; 249
    1cee:	ef 2e       	mov	r14, r31
    1cf0:	f4 e0       	ldi	r31, 0x04	; 4
    1cf2:	ff 2e       	mov	r15, r31
    1cf4:	f0 2d       	mov	r31, r0
    1cf6:	21 e0       	ldi	r18, 0x01	; 1
    1cf8:	30 e0       	ldi	r19, 0x00	; 0
    1cfa:	40 e0       	ldi	r20, 0x00	; 0
    1cfc:	50 e0       	ldi	r21, 0x00	; 0
    1cfe:	60 e0       	ldi	r22, 0x00	; 0
    1d00:	70 e0       	ldi	r23, 0x00	; 0
    1d02:	83 e9       	ldi	r24, 0x93	; 147
    1d04:	95 e0       	ldi	r25, 0x05	; 5
    1d06:	95 d6       	rcall	.+3370   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		if (Password_Menu_Status)
    1d08:	80 91 92 05 	lds	r24, 0x0592	; 0x800592 <Password_Menu_Status>
    1d0c:	88 23       	and	r24, r24
    1d0e:	09 f4       	brne	.+2      	; 0x1d12 <_Z5checkv+0x1c6>
    1d10:	72 c2       	rjmp	.+1252   	; 0x21f6 <_Z5checkv+0x6aa>
		actions();
	};
	
	void choise()override
	{
		switch(symbol_pointer)
    1d12:	e0 91 72 05 	lds	r30, 0x0572	; 0x800572 <passw_menu+0x6>
    1d16:	f0 91 73 05 	lds	r31, 0x0573	; 0x800573 <passw_menu+0x7>
    1d1a:	eb 30       	cpi	r30, 0x0B	; 11
    1d1c:	f1 05       	cpc	r31, r1
    1d1e:	08 f0       	brcs	.+2      	; 0x1d22 <_Z5checkv+0x1d6>
    1d20:	46 c2       	rjmp	.+1164   	; 0x21ae <_Z5checkv+0x662>
    1d22:	e4 5a       	subi	r30, 0xA4	; 164
    1d24:	ff 4f       	sbci	r31, 0xFF	; 255
    1d26:	4d c7       	rjmp	.+3738   	; 0x2bc2 <__tablejump2__>
		{
			case 0:
			{
    			 pointer++;
    1d28:	ec e6       	ldi	r30, 0x6C	; 108
    1d2a:	f5 e0       	ldi	r31, 0x05	; 5
    1d2c:	84 81       	ldd	r24, Z+4	; 0x04
    1d2e:	95 81       	ldd	r25, Z+5	; 0x05
    1d30:	01 96       	adiw	r24, 0x01	; 1
    1d32:	95 83       	std	Z+5, r25	; 0x05
    1d34:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    1d36:	18 16       	cp	r1, r24
    1d38:	19 06       	cpc	r1, r25
    1d3a:	0c f0       	brlt	.+2      	; 0x1d3e <_Z5checkv+0x1f2>
    1d3c:	38 c2       	rjmp	.+1136   	; 0x21ae <_Z5checkv+0x662>
    1d3e:	0f 2e       	mov	r0, r31
    1d40:	f4 e7       	ldi	r31, 0x74	; 116
    1d42:	cf 2e       	mov	r12, r31
    1d44:	f5 e0       	ldi	r31, 0x05	; 5
    1d46:	df 2e       	mov	r13, r31
    1d48:	f0 2d       	mov	r31, r0
    1d4a:	e1 2c       	mov	r14, r1
    1d4c:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1d4e:	ef 01       	movw	r28, r30
    1d50:	56 01       	movw	r10, r12
    1d52:	4a 89       	ldd	r20, Y+18	; 0x12
    1d54:	5b 89       	ldd	r21, Y+19	; 0x13
    1d56:	4e 5f       	subi	r20, 0xFE	; 254
    1d58:	5f 4f       	sbci	r21, 0xFF	; 255
    1d5a:	f6 01       	movw	r30, r12
    1d5c:	61 91       	ld	r22, Z+
    1d5e:	71 91       	ld	r23, Z+
    1d60:	6f 01       	movw	r12, r30
    1d62:	08 e0       	ldi	r16, 0x08	; 8
    1d64:	10 e0       	ldi	r17, 0x00	; 0
    1d66:	21 e0       	ldi	r18, 0x01	; 1
    1d68:	30 e0       	ldi	r19, 0x00	; 0
    1d6a:	83 e9       	ldi	r24, 0x93	; 147
    1d6c:	95 e0       	ldi	r25, 0x05	; 5
    1d6e:	12 d6       	rcall	.+3108   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1d70:	4a 89       	ldd	r20, Y+18	; 0x12
    1d72:	5b 89       	ldd	r21, Y+19	; 0x13
    1d74:	41 50       	subi	r20, 0x01	; 1
    1d76:	51 09       	sbc	r21, r1
    1d78:	f5 01       	movw	r30, r10
    1d7a:	60 81       	ld	r22, Z
    1d7c:	71 81       	ldd	r23, Z+1	; 0x01
    1d7e:	21 e0       	ldi	r18, 0x01	; 1
    1d80:	30 e0       	ldi	r19, 0x00	; 0
    1d82:	83 e9       	ldi	r24, 0x93	; 147
    1d84:	95 e0       	ldi	r25, 0x05	; 5
    1d86:	06 d6       	rcall	.+3084   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		switch(symbol_pointer)
		{
			case 0:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1d88:	ff ef       	ldi	r31, 0xFF	; 255
    1d8a:	ef 1a       	sub	r14, r31
    1d8c:	ff 0a       	sbc	r15, r31
    1d8e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d90:	9d 81       	ldd	r25, Y+5	; 0x05
    1d92:	e8 16       	cp	r14, r24
    1d94:	f9 06       	cpc	r15, r25
    1d96:	e4 f2       	brlt	.-72     	; 0x1d50 <_Z5checkv+0x204>
    1d98:	0a c2       	rjmp	.+1044   	; 0x21ae <_Z5checkv+0x662>
    			 }
    			 break;
			}
			case 1:
			{
    			 pointer++;
    1d9a:	ec e6       	ldi	r30, 0x6C	; 108
    1d9c:	f5 e0       	ldi	r31, 0x05	; 5
    1d9e:	84 81       	ldd	r24, Z+4	; 0x04
    1da0:	95 81       	ldd	r25, Z+5	; 0x05
    1da2:	01 96       	adiw	r24, 0x01	; 1
    1da4:	95 83       	std	Z+5, r25	; 0x05
    1da6:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    1da8:	18 16       	cp	r1, r24
    1daa:	19 06       	cpc	r1, r25
    1dac:	0c f0       	brlt	.+2      	; 0x1db0 <_Z5checkv+0x264>
    1dae:	ff c1       	rjmp	.+1022   	; 0x21ae <_Z5checkv+0x662>
    1db0:	0f 2e       	mov	r0, r31
    1db2:	f4 e7       	ldi	r31, 0x74	; 116
    1db4:	cf 2e       	mov	r12, r31
    1db6:	f5 e0       	ldi	r31, 0x05	; 5
    1db8:	df 2e       	mov	r13, r31
    1dba:	f0 2d       	mov	r31, r0
    1dbc:	e1 2c       	mov	r14, r1
    1dbe:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1dc0:	ef 01       	movw	r28, r30
    1dc2:	56 01       	movw	r10, r12
    1dc4:	4a 89       	ldd	r20, Y+18	; 0x12
    1dc6:	5b 89       	ldd	r21, Y+19	; 0x13
    1dc8:	4e 5f       	subi	r20, 0xFE	; 254
    1dca:	5f 4f       	sbci	r21, 0xFF	; 255
    1dcc:	f6 01       	movw	r30, r12
    1dce:	61 91       	ld	r22, Z+
    1dd0:	71 91       	ld	r23, Z+
    1dd2:	6f 01       	movw	r12, r30
    1dd4:	08 e0       	ldi	r16, 0x08	; 8
    1dd6:	10 e0       	ldi	r17, 0x00	; 0
    1dd8:	21 e0       	ldi	r18, 0x01	; 1
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	83 e9       	ldi	r24, 0x93	; 147
    1dde:	95 e0       	ldi	r25, 0x05	; 5
    1de0:	d9 d5       	rcall	.+2994   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1de2:	4a 89       	ldd	r20, Y+18	; 0x12
    1de4:	5b 89       	ldd	r21, Y+19	; 0x13
    1de6:	41 50       	subi	r20, 0x01	; 1
    1de8:	51 09       	sbc	r21, r1
    1dea:	f5 01       	movw	r30, r10
    1dec:	60 81       	ld	r22, Z
    1dee:	71 81       	ldd	r23, Z+1	; 0x01
    1df0:	21 e0       	ldi	r18, 0x01	; 1
    1df2:	30 e0       	ldi	r19, 0x00	; 0
    1df4:	83 e9       	ldi	r24, 0x93	; 147
    1df6:	95 e0       	ldi	r25, 0x05	; 5
    1df8:	cd d5       	rcall	.+2970   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 1:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1dfa:	ff ef       	ldi	r31, 0xFF	; 255
    1dfc:	ef 1a       	sub	r14, r31
    1dfe:	ff 0a       	sbc	r15, r31
    1e00:	8c 81       	ldd	r24, Y+4	; 0x04
    1e02:	9d 81       	ldd	r25, Y+5	; 0x05
    1e04:	e8 16       	cp	r14, r24
    1e06:	f9 06       	cpc	r15, r25
    1e08:	e4 f2       	brlt	.-72     	; 0x1dc2 <_Z5checkv+0x276>
    1e0a:	d1 c1       	rjmp	.+930    	; 0x21ae <_Z5checkv+0x662>
    			 }
    			 break;
			}
			case 2:
			{
	    			 pointer++;
    1e0c:	ec e6       	ldi	r30, 0x6C	; 108
    1e0e:	f5 e0       	ldi	r31, 0x05	; 5
    1e10:	84 81       	ldd	r24, Z+4	; 0x04
    1e12:	95 81       	ldd	r25, Z+5	; 0x05
    1e14:	01 96       	adiw	r24, 0x01	; 1
    1e16:	95 83       	std	Z+5, r25	; 0x05
    1e18:	84 83       	std	Z+4, r24	; 0x04
	    			 for(int i=0;i<pointer;i++)
    1e1a:	18 16       	cp	r1, r24
    1e1c:	19 06       	cpc	r1, r25
    1e1e:	0c f0       	brlt	.+2      	; 0x1e22 <_Z5checkv+0x2d6>
    1e20:	c6 c1       	rjmp	.+908    	; 0x21ae <_Z5checkv+0x662>
    1e22:	0f 2e       	mov	r0, r31
    1e24:	f4 e7       	ldi	r31, 0x74	; 116
    1e26:	cf 2e       	mov	r12, r31
    1e28:	f5 e0       	ldi	r31, 0x05	; 5
    1e2a:	df 2e       	mov	r13, r31
    1e2c:	f0 2d       	mov	r31, r0
    1e2e:	e1 2c       	mov	r14, r1
    1e30:	f1 2c       	mov	r15, r1
	    			 {
		    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1e32:	ef 01       	movw	r28, r30
    1e34:	56 01       	movw	r10, r12
    1e36:	4a 89       	ldd	r20, Y+18	; 0x12
    1e38:	5b 89       	ldd	r21, Y+19	; 0x13
    1e3a:	4e 5f       	subi	r20, 0xFE	; 254
    1e3c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e3e:	f6 01       	movw	r30, r12
    1e40:	61 91       	ld	r22, Z+
    1e42:	71 91       	ld	r23, Z+
    1e44:	6f 01       	movw	r12, r30
    1e46:	08 e0       	ldi	r16, 0x08	; 8
    1e48:	10 e0       	ldi	r17, 0x00	; 0
    1e4a:	21 e0       	ldi	r18, 0x01	; 1
    1e4c:	30 e0       	ldi	r19, 0x00	; 0
    1e4e:	83 e9       	ldi	r24, 0x93	; 147
    1e50:	95 e0       	ldi	r25, 0x05	; 5
    1e52:	a0 d5       	rcall	.+2880   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1e54:	4a 89       	ldd	r20, Y+18	; 0x12
    1e56:	5b 89       	ldd	r21, Y+19	; 0x13
    1e58:	41 50       	subi	r20, 0x01	; 1
    1e5a:	51 09       	sbc	r21, r1
    1e5c:	f5 01       	movw	r30, r10
    1e5e:	60 81       	ld	r22, Z
    1e60:	71 81       	ldd	r23, Z+1	; 0x01
    1e62:	21 e0       	ldi	r18, 0x01	; 1
    1e64:	30 e0       	ldi	r19, 0x00	; 0
    1e66:	83 e9       	ldi	r24, 0x93	; 147
    1e68:	95 e0       	ldi	r25, 0x05	; 5
    1e6a:	94 d5       	rcall	.+2856   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    			 break;
			}
			case 2:
			{
	    			 pointer++;
	    			 for(int i=0;i<pointer;i++)
    1e6c:	ff ef       	ldi	r31, 0xFF	; 255
    1e6e:	ef 1a       	sub	r14, r31
    1e70:	ff 0a       	sbc	r15, r31
    1e72:	8c 81       	ldd	r24, Y+4	; 0x04
    1e74:	9d 81       	ldd	r25, Y+5	; 0x05
    1e76:	e8 16       	cp	r14, r24
    1e78:	f9 06       	cpc	r15, r25
    1e7a:	e4 f2       	brlt	.-72     	; 0x1e34 <_Z5checkv+0x2e8>
    1e7c:	98 c1       	rjmp	.+816    	; 0x21ae <_Z5checkv+0x662>
	    			 }
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    1e7e:	ec e6       	ldi	r30, 0x6C	; 108
    1e80:	f5 e0       	ldi	r31, 0x05	; 5
    1e82:	84 81       	ldd	r24, Z+4	; 0x04
    1e84:	95 81       	ldd	r25, Z+5	; 0x05
    1e86:	01 96       	adiw	r24, 0x01	; 1
    1e88:	95 83       	std	Z+5, r25	; 0x05
    1e8a:	84 83       	std	Z+4, r24	; 0x04
    			 for(int i=0;i<pointer;i++)
    1e8c:	18 16       	cp	r1, r24
    1e8e:	19 06       	cpc	r1, r25
    1e90:	0c f0       	brlt	.+2      	; 0x1e94 <_Z5checkv+0x348>
    1e92:	8d c1       	rjmp	.+794    	; 0x21ae <_Z5checkv+0x662>
    1e94:	0f 2e       	mov	r0, r31
    1e96:	f4 e7       	ldi	r31, 0x74	; 116
    1e98:	cf 2e       	mov	r12, r31
    1e9a:	f5 e0       	ldi	r31, 0x05	; 5
    1e9c:	df 2e       	mov	r13, r31
    1e9e:	f0 2d       	mov	r31, r0
    1ea0:	e1 2c       	mov	r14, r1
    1ea2:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1ea4:	ef 01       	movw	r28, r30
    1ea6:	56 01       	movw	r10, r12
    1ea8:	4a 89       	ldd	r20, Y+18	; 0x12
    1eaa:	5b 89       	ldd	r21, Y+19	; 0x13
    1eac:	4e 5f       	subi	r20, 0xFE	; 254
    1eae:	5f 4f       	sbci	r21, 0xFF	; 255
    1eb0:	f6 01       	movw	r30, r12
    1eb2:	61 91       	ld	r22, Z+
    1eb4:	71 91       	ld	r23, Z+
    1eb6:	6f 01       	movw	r12, r30
    1eb8:	08 e0       	ldi	r16, 0x08	; 8
    1eba:	10 e0       	ldi	r17, 0x00	; 0
    1ebc:	21 e0       	ldi	r18, 0x01	; 1
    1ebe:	30 e0       	ldi	r19, 0x00	; 0
    1ec0:	83 e9       	ldi	r24, 0x93	; 147
    1ec2:	95 e0       	ldi	r25, 0x05	; 5
    1ec4:	67 d5       	rcall	.+2766   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1ec6:	4a 89       	ldd	r20, Y+18	; 0x12
    1ec8:	5b 89       	ldd	r21, Y+19	; 0x13
    1eca:	41 50       	subi	r20, 0x01	; 1
    1ecc:	51 09       	sbc	r21, r1
    1ece:	f5 01       	movw	r30, r10
    1ed0:	60 81       	ld	r22, Z
    1ed2:	71 81       	ldd	r23, Z+1	; 0x01
    1ed4:	21 e0       	ldi	r18, 0x01	; 1
    1ed6:	30 e0       	ldi	r19, 0x00	; 0
    1ed8:	83 e9       	ldi	r24, 0x93	; 147
    1eda:	95 e0       	ldi	r25, 0x05	; 5
    1edc:	5b d5       	rcall	.+2742   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1ede:	ff ef       	ldi	r31, 0xFF	; 255
	    			 break;
			}
			case 3:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1ee0:	ef 1a       	sub	r14, r31
    1ee2:	ff 0a       	sbc	r15, r31
    1ee4:	8c 81       	ldd	r24, Y+4	; 0x04
    1ee6:	9d 81       	ldd	r25, Y+5	; 0x05
    1ee8:	e8 16       	cp	r14, r24
    1eea:	f9 06       	cpc	r15, r25
    1eec:	e4 f2       	brlt	.-72     	; 0x1ea6 <_Z5checkv+0x35a>
    1eee:	5f c1       	rjmp	.+702    	; 0x21ae <_Z5checkv+0x662>
    1ef0:	ec e6       	ldi	r30, 0x6C	; 108
    			 }
    			 break;
			}
			case 4:
			{
    			 pointer++;
    1ef2:	f5 e0       	ldi	r31, 0x05	; 5
    1ef4:	84 81       	ldd	r24, Z+4	; 0x04
    1ef6:	95 81       	ldd	r25, Z+5	; 0x05
    1ef8:	01 96       	adiw	r24, 0x01	; 1
    1efa:	95 83       	std	Z+5, r25	; 0x05
    1efc:	84 83       	std	Z+4, r24	; 0x04
    1efe:	18 16       	cp	r1, r24
    			 for(int i=0;i<pointer;i++)
    1f00:	19 06       	cpc	r1, r25
    1f02:	0c f0       	brlt	.+2      	; 0x1f06 <_Z5checkv+0x3ba>
    1f04:	54 c1       	rjmp	.+680    	; 0x21ae <_Z5checkv+0x662>
    1f06:	0f 2e       	mov	r0, r31
    1f08:	f4 e7       	ldi	r31, 0x74	; 116
    1f0a:	cf 2e       	mov	r12, r31
    1f0c:	f5 e0       	ldi	r31, 0x05	; 5
    1f0e:	df 2e       	mov	r13, r31
    1f10:	f0 2d       	mov	r31, r0
    1f12:	e1 2c       	mov	r14, r1
    1f14:	f1 2c       	mov	r15, r1
    1f16:	ef 01       	movw	r28, r30
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1f18:	56 01       	movw	r10, r12
    1f1a:	4a 89       	ldd	r20, Y+18	; 0x12
    1f1c:	5b 89       	ldd	r21, Y+19	; 0x13
    1f1e:	4e 5f       	subi	r20, 0xFE	; 254
    1f20:	5f 4f       	sbci	r21, 0xFF	; 255
    1f22:	f6 01       	movw	r30, r12
    1f24:	61 91       	ld	r22, Z+
    1f26:	71 91       	ld	r23, Z+
    1f28:	6f 01       	movw	r12, r30
    1f2a:	08 e0       	ldi	r16, 0x08	; 8
    1f2c:	10 e0       	ldi	r17, 0x00	; 0
    1f2e:	21 e0       	ldi	r18, 0x01	; 1
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	83 e9       	ldi	r24, 0x93	; 147
    1f34:	95 e0       	ldi	r25, 0x05	; 5
    1f36:	2e d5       	rcall	.+2652   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1f38:	4a 89       	ldd	r20, Y+18	; 0x12
    1f3a:	5b 89       	ldd	r21, Y+19	; 0x13
    1f3c:	41 50       	subi	r20, 0x01	; 1
    1f3e:	51 09       	sbc	r21, r1
    1f40:	f5 01       	movw	r30, r10
    1f42:	60 81       	ld	r22, Z
    1f44:	71 81       	ldd	r23, Z+1	; 0x01
    1f46:	21 e0       	ldi	r18, 0x01	; 1
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	83 e9       	ldi	r24, 0x93	; 147
    1f4c:	95 e0       	ldi	r25, 0x05	; 5
    1f4e:	22 d5       	rcall	.+2628   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1f50:	ff ef       	ldi	r31, 0xFF	; 255
    			 break;
			}
			case 4:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1f52:	ef 1a       	sub	r14, r31
    1f54:	ff 0a       	sbc	r15, r31
    1f56:	8c 81       	ldd	r24, Y+4	; 0x04
    1f58:	9d 81       	ldd	r25, Y+5	; 0x05
    1f5a:	e8 16       	cp	r14, r24
    1f5c:	f9 06       	cpc	r15, r25
    1f5e:	e4 f2       	brlt	.-72     	; 0x1f18 <_Z5checkv+0x3cc>
    1f60:	26 c1       	rjmp	.+588    	; 0x21ae <_Z5checkv+0x662>
    1f62:	ec e6       	ldi	r30, 0x6C	; 108
    			 }
    			 break;
			}
			case 5:
			{
    			 pointer++;
    1f64:	f5 e0       	ldi	r31, 0x05	; 5
    1f66:	84 81       	ldd	r24, Z+4	; 0x04
    1f68:	95 81       	ldd	r25, Z+5	; 0x05
    1f6a:	01 96       	adiw	r24, 0x01	; 1
    1f6c:	95 83       	std	Z+5, r25	; 0x05
    1f6e:	84 83       	std	Z+4, r24	; 0x04
    1f70:	18 16       	cp	r1, r24
    			 for(int i=0;i<pointer;i++)
    1f72:	19 06       	cpc	r1, r25
    1f74:	0c f0       	brlt	.+2      	; 0x1f78 <_Z5checkv+0x42c>
    1f76:	1b c1       	rjmp	.+566    	; 0x21ae <_Z5checkv+0x662>
    1f78:	0f 2e       	mov	r0, r31
    1f7a:	f4 e7       	ldi	r31, 0x74	; 116
    1f7c:	cf 2e       	mov	r12, r31
    1f7e:	f5 e0       	ldi	r31, 0x05	; 5
    1f80:	df 2e       	mov	r13, r31
    1f82:	f0 2d       	mov	r31, r0
    1f84:	e1 2c       	mov	r14, r1
    1f86:	f1 2c       	mov	r15, r1
    1f88:	ef 01       	movw	r28, r30
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1f8a:	56 01       	movw	r10, r12
    1f8c:	4a 89       	ldd	r20, Y+18	; 0x12
    1f8e:	5b 89       	ldd	r21, Y+19	; 0x13
    1f90:	4e 5f       	subi	r20, 0xFE	; 254
    1f92:	5f 4f       	sbci	r21, 0xFF	; 255
    1f94:	f6 01       	movw	r30, r12
    1f96:	61 91       	ld	r22, Z+
    1f98:	71 91       	ld	r23, Z+
    1f9a:	6f 01       	movw	r12, r30
    1f9c:	08 e0       	ldi	r16, 0x08	; 8
    1f9e:	10 e0       	ldi	r17, 0x00	; 0
    1fa0:	21 e0       	ldi	r18, 0x01	; 1
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	83 e9       	ldi	r24, 0x93	; 147
    1fa6:	95 e0       	ldi	r25, 0x05	; 5
    1fa8:	f5 d4       	rcall	.+2538   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    1faa:	4a 89       	ldd	r20, Y+18	; 0x12
    1fac:	5b 89       	ldd	r21, Y+19	; 0x13
    1fae:	41 50       	subi	r20, 0x01	; 1
    1fb0:	51 09       	sbc	r21, r1
    1fb2:	f5 01       	movw	r30, r10
    1fb4:	60 81       	ld	r22, Z
    1fb6:	71 81       	ldd	r23, Z+1	; 0x01
    1fb8:	21 e0       	ldi	r18, 0x01	; 1
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	83 e9       	ldi	r24, 0x93	; 147
    1fbe:	95 e0       	ldi	r25, 0x05	; 5
    1fc0:	e9 d4       	rcall	.+2514   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    1fc2:	ff ef       	ldi	r31, 0xFF	; 255
    			 break;
			}
			case 5:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    1fc4:	ef 1a       	sub	r14, r31
    1fc6:	ff 0a       	sbc	r15, r31
    1fc8:	8c 81       	ldd	r24, Y+4	; 0x04
    1fca:	9d 81       	ldd	r25, Y+5	; 0x05
    1fcc:	e8 16       	cp	r14, r24
    1fce:	f9 06       	cpc	r15, r25
    1fd0:	e4 f2       	brlt	.-72     	; 0x1f8a <_Z5checkv+0x43e>
    1fd2:	ed c0       	rjmp	.+474    	; 0x21ae <_Z5checkv+0x662>
    1fd4:	ec e6       	ldi	r30, 0x6C	; 108
    			 }
    			 break;
			}
			case 6:
			{
    			 pointer++;
    1fd6:	f5 e0       	ldi	r31, 0x05	; 5
    1fd8:	84 81       	ldd	r24, Z+4	; 0x04
    1fda:	95 81       	ldd	r25, Z+5	; 0x05
    1fdc:	01 96       	adiw	r24, 0x01	; 1
    1fde:	95 83       	std	Z+5, r25	; 0x05
    1fe0:	84 83       	std	Z+4, r24	; 0x04
    1fe2:	18 16       	cp	r1, r24
    			 for(int i=0;i<pointer;i++)
    1fe4:	19 06       	cpc	r1, r25
    1fe6:	0c f0       	brlt	.+2      	; 0x1fea <_Z5checkv+0x49e>
    1fe8:	e2 c0       	rjmp	.+452    	; 0x21ae <_Z5checkv+0x662>
    1fea:	0f 2e       	mov	r0, r31
    1fec:	f4 e7       	ldi	r31, 0x74	; 116
    1fee:	cf 2e       	mov	r12, r31
    1ff0:	f5 e0       	ldi	r31, 0x05	; 5
    1ff2:	df 2e       	mov	r13, r31
    1ff4:	f0 2d       	mov	r31, r0
    1ff6:	e1 2c       	mov	r14, r1
    1ff8:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    1ffa:	ef 01       	movw	r28, r30
    1ffc:	56 01       	movw	r10, r12
    1ffe:	4a 89       	ldd	r20, Y+18	; 0x12
    2000:	5b 89       	ldd	r21, Y+19	; 0x13
    2002:	4e 5f       	subi	r20, 0xFE	; 254
    2004:	5f 4f       	sbci	r21, 0xFF	; 255
    2006:	f6 01       	movw	r30, r12
    2008:	61 91       	ld	r22, Z+
    200a:	71 91       	ld	r23, Z+
    200c:	6f 01       	movw	r12, r30
    200e:	08 e0       	ldi	r16, 0x08	; 8
    2010:	10 e0       	ldi	r17, 0x00	; 0
    2012:	21 e0       	ldi	r18, 0x01	; 1
    2014:	30 e0       	ldi	r19, 0x00	; 0
    2016:	83 e9       	ldi	r24, 0x93	; 147
    2018:	95 e0       	ldi	r25, 0x05	; 5
    201a:	bc d4       	rcall	.+2424   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    201c:	4a 89       	ldd	r20, Y+18	; 0x12
    201e:	5b 89       	ldd	r21, Y+19	; 0x13
    2020:	41 50       	subi	r20, 0x01	; 1
    2022:	51 09       	sbc	r21, r1
    2024:	f5 01       	movw	r30, r10
    2026:	60 81       	ld	r22, Z
    2028:	71 81       	ldd	r23, Z+1	; 0x01
    202a:	21 e0       	ldi	r18, 0x01	; 1
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	83 e9       	ldi	r24, 0x93	; 147
    2030:	95 e0       	ldi	r25, 0x05	; 5
    2032:	b0 d4       	rcall	.+2400   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    2034:	ff ef       	ldi	r31, 0xFF	; 255
    			 break;
			}
			case 6:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    2036:	ef 1a       	sub	r14, r31
    2038:	ff 0a       	sbc	r15, r31
    203a:	8c 81       	ldd	r24, Y+4	; 0x04
    203c:	9d 81       	ldd	r25, Y+5	; 0x05
    203e:	e8 16       	cp	r14, r24
    2040:	f9 06       	cpc	r15, r25
    2042:	e4 f2       	brlt	.-72     	; 0x1ffc <_Z5checkv+0x4b0>
    2044:	b4 c0       	rjmp	.+360    	; 0x21ae <_Z5checkv+0x662>
    2046:	ec e6       	ldi	r30, 0x6C	; 108
    			 }
    			 break;
			}
			case 7:
			{
    			 pointer++;
    2048:	f5 e0       	ldi	r31, 0x05	; 5
    204a:	84 81       	ldd	r24, Z+4	; 0x04
    204c:	95 81       	ldd	r25, Z+5	; 0x05
    204e:	01 96       	adiw	r24, 0x01	; 1
    2050:	95 83       	std	Z+5, r25	; 0x05
    2052:	84 83       	std	Z+4, r24	; 0x04
    2054:	18 16       	cp	r1, r24
    			 for(int i=0;i<pointer;i++)
    2056:	19 06       	cpc	r1, r25
    2058:	0c f0       	brlt	.+2      	; 0x205c <_Z5checkv+0x510>
    205a:	a9 c0       	rjmp	.+338    	; 0x21ae <_Z5checkv+0x662>
    205c:	0f 2e       	mov	r0, r31
    205e:	f4 e7       	ldi	r31, 0x74	; 116
    2060:	cf 2e       	mov	r12, r31
    2062:	f5 e0       	ldi	r31, 0x05	; 5
    2064:	df 2e       	mov	r13, r31
    2066:	f0 2d       	mov	r31, r0
    2068:	e1 2c       	mov	r14, r1
    206a:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    206c:	ef 01       	movw	r28, r30
    206e:	56 01       	movw	r10, r12
    2070:	4a 89       	ldd	r20, Y+18	; 0x12
    2072:	5b 89       	ldd	r21, Y+19	; 0x13
    2074:	4e 5f       	subi	r20, 0xFE	; 254
    2076:	5f 4f       	sbci	r21, 0xFF	; 255
    2078:	f6 01       	movw	r30, r12
    207a:	61 91       	ld	r22, Z+
    207c:	71 91       	ld	r23, Z+
    207e:	6f 01       	movw	r12, r30
    2080:	08 e0       	ldi	r16, 0x08	; 8
    2082:	10 e0       	ldi	r17, 0x00	; 0
    2084:	21 e0       	ldi	r18, 0x01	; 1
    2086:	30 e0       	ldi	r19, 0x00	; 0
    2088:	83 e9       	ldi	r24, 0x93	; 147
    208a:	95 e0       	ldi	r25, 0x05	; 5
    208c:	83 d4       	rcall	.+2310   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    208e:	4a 89       	ldd	r20, Y+18	; 0x12
    2090:	5b 89       	ldd	r21, Y+19	; 0x13
    2092:	41 50       	subi	r20, 0x01	; 1
    2094:	51 09       	sbc	r21, r1
    2096:	f5 01       	movw	r30, r10
    2098:	60 81       	ld	r22, Z
    209a:	71 81       	ldd	r23, Z+1	; 0x01
    209c:	21 e0       	ldi	r18, 0x01	; 1
    209e:	30 e0       	ldi	r19, 0x00	; 0
    20a0:	83 e9       	ldi	r24, 0x93	; 147
    20a2:	95 e0       	ldi	r25, 0x05	; 5
    20a4:	77 d4       	rcall	.+2286   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    20a6:	ff ef       	ldi	r31, 0xFF	; 255
    			 break;
			}
			case 7:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    20a8:	ef 1a       	sub	r14, r31
    20aa:	ff 0a       	sbc	r15, r31
    20ac:	8c 81       	ldd	r24, Y+4	; 0x04
    20ae:	9d 81       	ldd	r25, Y+5	; 0x05
    20b0:	e8 16       	cp	r14, r24
    20b2:	f9 06       	cpc	r15, r25
    20b4:	e4 f2       	brlt	.-72     	; 0x206e <_Z5checkv+0x522>
    20b6:	7b c0       	rjmp	.+246    	; 0x21ae <_Z5checkv+0x662>
    20b8:	ec e6       	ldi	r30, 0x6C	; 108
    			 }
    			 break;
			}
			case 8:
			{
    			 pointer++;
    20ba:	f5 e0       	ldi	r31, 0x05	; 5
    20bc:	84 81       	ldd	r24, Z+4	; 0x04
    20be:	95 81       	ldd	r25, Z+5	; 0x05
    20c0:	01 96       	adiw	r24, 0x01	; 1
    20c2:	95 83       	std	Z+5, r25	; 0x05
    20c4:	84 83       	std	Z+4, r24	; 0x04
    20c6:	18 16       	cp	r1, r24
    			 for(int i=0;i<pointer;i++)
    20c8:	19 06       	cpc	r1, r25
    20ca:	0c f0       	brlt	.+2      	; 0x20ce <_Z5checkv+0x582>
    20cc:	70 c0       	rjmp	.+224    	; 0x21ae <_Z5checkv+0x662>
    20ce:	0f 2e       	mov	r0, r31
    20d0:	f4 e7       	ldi	r31, 0x74	; 116
    20d2:	cf 2e       	mov	r12, r31
    20d4:	f5 e0       	ldi	r31, 0x05	; 5
    20d6:	df 2e       	mov	r13, r31
    20d8:	f0 2d       	mov	r31, r0
    20da:	e1 2c       	mov	r14, r1
    20dc:	f1 2c       	mov	r15, r1
    			 {
	    			 oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    20de:	ef 01       	movw	r28, r30
    20e0:	56 01       	movw	r10, r12
    20e2:	4a 89       	ldd	r20, Y+18	; 0x12
    20e4:	5b 89       	ldd	r21, Y+19	; 0x13
    20e6:	4e 5f       	subi	r20, 0xFE	; 254
    20e8:	5f 4f       	sbci	r21, 0xFF	; 255
    20ea:	f6 01       	movw	r30, r12
    20ec:	61 91       	ld	r22, Z+
    20ee:	71 91       	ld	r23, Z+
    20f0:	6f 01       	movw	r12, r30
    20f2:	08 e0       	ldi	r16, 0x08	; 8
    20f4:	10 e0       	ldi	r17, 0x00	; 0
    20f6:	21 e0       	ldi	r18, 0x01	; 1
    20f8:	30 e0       	ldi	r19, 0x00	; 0
    20fa:	83 e9       	ldi	r24, 0x93	; 147
    20fc:	95 e0       	ldi	r25, 0x05	; 5
    20fe:	4a d4       	rcall	.+2196   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
	    			 oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    2100:	4a 89       	ldd	r20, Y+18	; 0x12
    2102:	5b 89       	ldd	r21, Y+19	; 0x13
    2104:	41 50       	subi	r20, 0x01	; 1
    2106:	51 09       	sbc	r21, r1
    2108:	f5 01       	movw	r30, r10
    210a:	60 81       	ld	r22, Z
    210c:	71 81       	ldd	r23, Z+1	; 0x01
    210e:	21 e0       	ldi	r18, 0x01	; 1
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	83 e9       	ldi	r24, 0x93	; 147
    2114:	95 e0       	ldi	r25, 0x05	; 5
    2116:	3e d4       	rcall	.+2172   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    2118:	ff ef       	ldi	r31, 0xFF	; 255
    			 break;
			}
			case 8:
			{
    			 pointer++;
    			 for(int i=0;i<pointer;i++)
    211a:	ef 1a       	sub	r14, r31
    211c:	ff 0a       	sbc	r15, r31
    211e:	8c 81       	ldd	r24, Y+4	; 0x04
    2120:	9d 81       	ldd	r25, Y+5	; 0x05
    2122:	e8 16       	cp	r14, r24
    2124:	f9 06       	cpc	r15, r25
    2126:	e4 f2       	brlt	.-72     	; 0x20e0 <_Z5checkv+0x594>
    2128:	42 c0       	rjmp	.+132    	; 0x21ae <_Z5checkv+0x662>
    212a:	ec e6       	ldi	r30, 0x6C	; 108
    			 }
    			 break;
			}
			case 9:
			{
    			 pointer++;
    212c:	f5 e0       	ldi	r31, 0x05	; 5
    212e:	84 81       	ldd	r24, Z+4	; 0x04
    2130:	95 81       	ldd	r25, Z+5	; 0x05
    2132:	01 96       	adiw	r24, 0x01	; 1
    2134:	95 83       	std	Z+5, r25	; 0x05
    2136:	84 83       	std	Z+4, r24	; 0x04
    2138:	18 16       	cp	r1, r24
				for(int i=0;i<pointer;i++)
    213a:	19 06       	cpc	r1, r25
    213c:	c4 f5       	brge	.+112    	; 0x21ae <_Z5checkv+0x662>
    213e:	0f 2e       	mov	r0, r31
    2140:	f4 e7       	ldi	r31, 0x74	; 116
    2142:	cf 2e       	mov	r12, r31
    2144:	f5 e0       	ldi	r31, 0x05	; 5
    2146:	df 2e       	mov	r13, r31
    2148:	f0 2d       	mov	r31, r0
    214a:	e1 2c       	mov	r14, r1
    214c:	f1 2c       	mov	r15, r1
				{
					oled.OLED_Clear_Bufer_part(x[i],y+2,1,8);
    214e:	ef 01       	movw	r28, r30
    2150:	56 01       	movw	r10, r12
    2152:	4a 89       	ldd	r20, Y+18	; 0x12
    2154:	5b 89       	ldd	r21, Y+19	; 0x13
    2156:	4e 5f       	subi	r20, 0xFE	; 254
    2158:	5f 4f       	sbci	r21, 0xFF	; 255
    215a:	f6 01       	movw	r30, r12
    215c:	61 91       	ld	r22, Z+
    215e:	71 91       	ld	r23, Z+
    2160:	6f 01       	movw	r12, r30
    2162:	08 e0       	ldi	r16, 0x08	; 8
    2164:	10 e0       	ldi	r17, 0x00	; 0
    2166:	21 e0       	ldi	r18, 0x01	; 1
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	83 e9       	ldi	r24, 0x93	; 147
    216c:	95 e0       	ldi	r25, 0x05	; 5
    216e:	12 d4       	rcall	.+2084   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
					oled.OLED_Clear_Bufer_part(x[i],y-1,1,8);
    2170:	4a 89       	ldd	r20, Y+18	; 0x12
    2172:	5b 89       	ldd	r21, Y+19	; 0x13
    2174:	41 50       	subi	r20, 0x01	; 1
    2176:	51 09       	sbc	r21, r1
    2178:	f5 01       	movw	r30, r10
    217a:	60 81       	ld	r22, Z
    217c:	71 81       	ldd	r23, Z+1	; 0x01
    217e:	21 e0       	ldi	r18, 0x01	; 1
    2180:	30 e0       	ldi	r19, 0x00	; 0
    2182:	83 e9       	ldi	r24, 0x93	; 147
    2184:	95 e0       	ldi	r25, 0x05	; 5
    2186:	06 d4       	rcall	.+2060   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
    2188:	ff ef       	ldi	r31, 0xFF	; 255
    			 break;
			}
			case 9:
			{
    			 pointer++;
				for(int i=0;i<pointer;i++)
    218a:	ef 1a       	sub	r14, r31
    218c:	ff 0a       	sbc	r15, r31
    218e:	8c 81       	ldd	r24, Y+4	; 0x04
    2190:	9d 81       	ldd	r25, Y+5	; 0x05
    2192:	e8 16       	cp	r14, r24
    2194:	f9 06       	cpc	r15, r25
    2196:	e4 f2       	brlt	.-72     	; 0x2150 <_Z5checkv+0x604>
    2198:	0a c0       	rjmp	.+20     	; 0x21ae <_Z5checkv+0x662>
    219a:	e0 91 6c 05 	lds	r30, 0x056C	; 0x80056c <passw_menu>
				}
				break;
			}
			case 10:
			{
				 back();
    219e:	f0 91 6d 05 	lds	r31, 0x056D	; 0x80056d <passw_menu+0x1>
    21a2:	04 84       	ldd	r0, Z+12	; 0x0c
    21a4:	f5 85       	ldd	r31, Z+13	; 0x0d
    21a6:	e0 2d       	mov	r30, r0
    21a8:	8c e6       	ldi	r24, 0x6C	; 108
    21aa:	95 e0       	ldi	r25, 0x05	; 5
    21ac:	09 95       	icall
    21ae:	80 91 70 05 	lds	r24, 0x0570	; 0x800570 <passw_menu+0x4>
				break;
			}
		}
		     if(pointer>PASSWORD_MENU_POINER_COUNT) {
    21b2:	90 91 71 05 	lds	r25, 0x0571	; 0x800571 <passw_menu+0x5>
    21b6:	05 97       	sbiw	r24, 0x05	; 5
    21b8:	84 f0       	brlt	.+32     	; 0x21da <_Z5checkv+0x68e>
    21ba:	81 e0       	ldi	r24, 0x01	; 1
				 
				Main_Menu_Status=true;
    21bc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <Main_Menu_Status>
    21c0:	10 92 92 05 	sts	0x0592, r1	; 0x800592 <Password_Menu_Status>
				Password_Menu_Status=false;
    21c4:	e0 91 6c 05 	lds	r30, 0x056C	; 0x80056c <passw_menu>
				close();
    21c8:	f0 91 6d 05 	lds	r31, 0x056D	; 0x80056d <passw_menu+0x1>
    21cc:	04 80       	ldd	r0, Z+4	; 0x04
    21ce:	f5 81       	ldd	r31, Z+5	; 0x05
    21d0:	e0 2d       	mov	r30, r0
    21d2:	8c e6       	ldi	r24, 0x6C	; 108
    21d4:	95 e0       	ldi	r25, 0x05	; 5
    21d6:	09 95       	icall
    21d8:	32 c1       	rjmp	.+612    	; 0x243e <_Z5checkv+0x8f2>
    21da:	ec e6       	ldi	r30, 0x6C	; 108
				 }
			 else
			 {
				 symbol_pointer=0;
    21dc:	f5 e0       	ldi	r31, 0x05	; 5
    21de:	17 82       	std	Z+7, r1	; 0x07
    21e0:	16 82       	std	Z+6, r1	; 0x06
    21e2:	01 90       	ld	r0, Z+
				 actions();	 
    21e4:	f0 81       	ld	r31, Z
    21e6:	e0 2d       	mov	r30, r0
    21e8:	00 88       	ldd	r0, Z+16	; 0x10
    21ea:	f1 89       	ldd	r31, Z+17	; 0x11
    21ec:	e0 2d       	mov	r30, r0
    21ee:	8c e6       	ldi	r24, 0x6C	; 108
    21f0:	95 e0       	ldi	r25, 0x05	; 5
    21f2:	09 95       	icall
    21f4:	24 c1       	rjmp	.+584    	; 0x243e <_Z5checkv+0x8f2>
    21f6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
		if (Password_Menu_Status)
		{
			passw_menu.choise();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    21fa:	88 23       	and	r24, r24
    21fc:	49 f1       	breq	.+82     	; 0x2250 <_Z5checkv+0x704>
    21fe:	80 91 6a 05 	lds	r24, 0x056A	; 0x80056a <menu+0x4>
		actions();
	};
	
	void choise()override
	{
		switch(pointer)
    2202:	90 91 6b 05 	lds	r25, 0x056B	; 0x80056b <menu+0x5>
    2206:	00 97       	sbiw	r24, 0x00	; 0
    2208:	19 f0       	breq	.+6      	; 0x2210 <_Z5checkv+0x6c4>
    220a:	01 97       	sbiw	r24, 0x01	; 1
    220c:	89 f0       	breq	.+34     	; 0x2230 <_Z5checkv+0x6e4>
    220e:	17 c1       	rjmp	.+558    	; 0x243e <_Z5checkv+0x8f2>
    2210:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
		{
			case 0:
			{
			    Main_Menu_Status=false;
    2214:	81 e0       	ldi	r24, 0x01	; 1
				Password_Menu_Status=true;
    2216:	80 93 92 05 	sts	0x0592, r24	; 0x800592 <Password_Menu_Status>
    221a:	e0 91 66 05 	lds	r30, 0x0566	; 0x800566 <menu>
				close();
    221e:	f0 91 67 05 	lds	r31, 0x0567	; 0x800567 <menu+0x1>
    2222:	04 80       	ldd	r0, Z+4	; 0x04
    2224:	f5 81       	ldd	r31, Z+5	; 0x05
    2226:	e0 2d       	mov	r30, r0
    2228:	86 e6       	ldi	r24, 0x66	; 102
    222a:	95 e0       	ldi	r25, 0x05	; 5
    222c:	09 95       	icall
    222e:	07 c1       	rjmp	.+526    	; 0x243e <_Z5checkv+0x8f2>
    2230:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <Main_Menu_Status>
				break;
			}
			case 1:
			{
				Main_Menu_Status=false;
    2234:	81 e0       	ldi	r24, 0x01	; 1
				Settings_Menu_Status=true;
    2236:	80 93 91 05 	sts	0x0591, r24	; 0x800591 <Settings_Menu_Status>
    223a:	e0 91 66 05 	lds	r30, 0x0566	; 0x800566 <menu>
				close();
    223e:	f0 91 67 05 	lds	r31, 0x0567	; 0x800567 <menu+0x1>
    2242:	04 80       	ldd	r0, Z+4	; 0x04
    2244:	f5 81       	ldd	r31, Z+5	; 0x05
    2246:	e0 2d       	mov	r30, r0
    2248:	86 e6       	ldi	r24, 0x66	; 102
    224a:	95 e0       	ldi	r25, 0x05	; 5
    224c:	09 95       	icall
    224e:	f7 c0       	rjmp	.+494    	; 0x243e <_Z5checkv+0x8f2>
    2250:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <Settings_Menu_Status>
		else if (Main_Menu_Status)
		{
			menu.choise();
			//menu.refresh();
		}
		else if (Settings_Menu_Status)
    2254:	88 23       	and	r24, r24
    2256:	09 f4       	brne	.+2      	; 0x225a <_Z5checkv+0x70e>
    2258:	f2 c0       	rjmp	.+484    	; 0x243e <_Z5checkv+0x8f2>
    225a:	80 91 84 05 	lds	r24, 0x0584	; 0x800584 <sett_menu+0x4>
		actions();		
	};
	
	void choise()override
	{
		switch(pointer)
    225e:	90 91 85 05 	lds	r25, 0x0585	; 0x800585 <sett_menu+0x5>
    2262:	03 97       	sbiw	r24, 0x03	; 3
    2264:	09 f0       	breq	.+2      	; 0x2268 <_Z5checkv+0x71c>
    2266:	eb c0       	rjmp	.+470    	; 0x243e <_Z5checkv+0x8f2>
    2268:	e0 91 80 05 	lds	r30, 0x0580	; 0x800580 <sett_menu>
				
				break;
			}
			case 3:
			{
				back();
    226c:	f0 91 81 05 	lds	r31, 0x0581	; 0x800581 <sett_menu+0x1>
    2270:	04 84       	ldd	r0, Z+12	; 0x0c
    2272:	f5 85       	ldd	r31, Z+13	; 0x0d
    2274:	e0 2d       	mov	r30, r0
    2276:	80 e8       	ldi	r24, 0x80	; 128
    2278:	95 e0       	ldi	r25, 0x05	; 5
    227a:	09 95       	icall
    227c:	e0 c0       	rjmp	.+448    	; 0x243e <_Z5checkv+0x8f2>
    227e:	35 23       	and	r19, r21
			sett_menu.choise();
			//sett_menu.refresh();
		}
		
	}
	else if(!btn0 & !btn1 & btn2 & !btn3 & !btn12 & !btn03)
    2280:	98 2f       	mov	r25, r24
    2282:	94 23       	and	r25, r20
    2284:	29 23       	and	r18, r25
    2286:	23 23       	and	r18, r19
    2288:	f2 17       	cp	r31, r18
    228a:	d8 f4       	brcc	.+54     	; 0x22c2 <_Z5checkv+0x776>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    228c:	08 e0       	ldi	r16, 0x08	; 8
    228e:	10 e0       	ldi	r17, 0x00	; 0
    2290:	21 e0       	ldi	r18, 0x01	; 1
    2292:	30 e0       	ldi	r19, 0x00	; 0
    2294:	40 e0       	ldi	r20, 0x00	; 0
    2296:	50 e0       	ldi	r21, 0x00	; 0
    2298:	60 e0       	ldi	r22, 0x00	; 0
    229a:	70 e0       	ldi	r23, 0x00	; 0
    229c:	83 e9       	ldi	r24, 0x93	; 147
    229e:	95 e0       	ldi	r25, 0x05	; 5
    22a0:	79 d3       	rcall	.+1778   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,two);
    22a2:	0f 2e       	mov	r0, r31
    22a4:	f1 ef       	ldi	r31, 0xF1	; 241
    22a6:	ef 2e       	mov	r14, r31
    22a8:	f4 e0       	ldi	r31, 0x04	; 4
    22aa:	ff 2e       	mov	r15, r31
    22ac:	f0 2d       	mov	r31, r0
    22ae:	21 e0       	ldi	r18, 0x01	; 1
    22b0:	30 e0       	ldi	r19, 0x00	; 0
    22b2:	40 e0       	ldi	r20, 0x00	; 0
    22b4:	50 e0       	ldi	r21, 0x00	; 0
    22b6:	60 e0       	ldi	r22, 0x00	; 0
    22b8:	70 e0       	ldi	r23, 0x00	; 0
    22ba:	83 e9       	ldi	r24, 0x93	; 147
    22bc:	95 e0       	ldi	r25, 0x05	; 5
    22be:	b9 d3       	rcall	.+1906   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    22c0:	be c0       	rjmp	.+380    	; 0x243e <_Z5checkv+0x8f2>
		{


		}
	}
	else if(!btn0 & !btn1 & !btn2 & btn3 & !btn12 & !btn03)
    22c2:	6b 23       	and	r22, r27
    22c4:	64 23       	and	r22, r20
    22c6:	36 23       	and	r19, r22
    22c8:	f3 17       	cp	r31, r19
    22ca:	08 f0       	brcs	.+2      	; 0x22ce <_Z5checkv+0x782>
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    22cc:	7b c0       	rjmp	.+246    	; 0x23c4 <_Z5checkv+0x878>
    22ce:	08 e0       	ldi	r16, 0x08	; 8
    22d0:	10 e0       	ldi	r17, 0x00	; 0
    22d2:	21 e0       	ldi	r18, 0x01	; 1
    22d4:	30 e0       	ldi	r19, 0x00	; 0
    22d6:	40 e0       	ldi	r20, 0x00	; 0
    22d8:	50 e0       	ldi	r21, 0x00	; 0
    22da:	60 e0       	ldi	r22, 0x00	; 0
    22dc:	70 e0       	ldi	r23, 0x00	; 0
    22de:	83 e9       	ldi	r24, 0x93	; 147
    22e0:	95 e0       	ldi	r25, 0x05	; 5
    22e2:	58 d3       	rcall	.+1712   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,three);
    22e4:	0f 2e       	mov	r0, r31
    22e6:	f9 ee       	ldi	r31, 0xE9	; 233
    22e8:	ef 2e       	mov	r14, r31
    22ea:	f4 e0       	ldi	r31, 0x04	; 4
    22ec:	ff 2e       	mov	r15, r31
    22ee:	f0 2d       	mov	r31, r0
    22f0:	21 e0       	ldi	r18, 0x01	; 1
    22f2:	30 e0       	ldi	r19, 0x00	; 0
    22f4:	40 e0       	ldi	r20, 0x00	; 0
    22f6:	50 e0       	ldi	r21, 0x00	; 0
    22f8:	60 e0       	ldi	r22, 0x00	; 0
    22fa:	70 e0       	ldi	r23, 0x00	; 0
    22fc:	83 e9       	ldi	r24, 0x93	; 147
    22fe:	95 e0       	ldi	r25, 0x05	; 5
    2300:	98 d3       	rcall	.+1840   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    2302:	80 91 92 05 	lds	r24, 0x0592	; 0x800592 <Password_Menu_Status>
		if (Password_Menu_Status)
    2306:	88 23       	and	r24, r24
    2308:	e1 f0       	breq	.+56     	; 0x2342 <_Z5checkv+0x7f6>
    230a:	80 91 72 05 	lds	r24, 0x0572	; 0x800572 <passw_menu+0x6>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
    230e:	90 91 73 05 	lds	r25, 0x0573	; 0x800573 <passw_menu+0x7>
    2312:	01 96       	adiw	r24, 0x01	; 1
    2314:	8b 30       	cpi	r24, 0x0B	; 11
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
    2316:	91 05       	cpc	r25, r1
    2318:	2c f4       	brge	.+10     	; 0x2324 <_Z5checkv+0x7d8>
    231a:	90 93 73 05 	sts	0x0573, r25	; 0x800573 <passw_menu+0x7>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		symbol_pointer++;
    231e:	80 93 72 05 	sts	0x0572, r24	; 0x800572 <passw_menu+0x6>
    2322:	04 c0       	rjmp	.+8      	; 0x232c <_Z5checkv+0x7e0>
    2324:	10 92 73 05 	sts	0x0573, r1	; 0x800573 <passw_menu+0x7>
		if(symbol_pointer>PASSWORD_MENU_SIMVOLS_COUNT) symbol_pointer=0;
    2328:	10 92 72 05 	sts	0x0572, r1	; 0x800572 <passw_menu+0x6>
    232c:	e0 91 6c 05 	lds	r30, 0x056C	; 0x80056c <passw_menu>
		actions();
    2330:	f0 91 6d 05 	lds	r31, 0x056D	; 0x80056d <passw_menu+0x1>
    2334:	00 88       	ldd	r0, Z+16	; 0x10
    2336:	f1 89       	ldd	r31, Z+17	; 0x11
    2338:	e0 2d       	mov	r30, r0
    233a:	8c e6       	ldi	r24, 0x6C	; 108
    233c:	95 e0       	ldi	r25, 0x05	; 5
    233e:	09 95       	icall
    2340:	7e c0       	rjmp	.+252    	; 0x243e <_Z5checkv+0x8f2>
    2342:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
		if (Password_Menu_Status)
		{
			passw_menu.next();
			//passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    2346:	88 23       	and	r24, r24
    2348:	e1 f0       	breq	.+56     	; 0x2382 <_Z5checkv+0x836>
    234a:	80 91 6a 05 	lds	r24, 0x056A	; 0x80056a <menu+0x4>

	};
	
	void next()override
	{
		pointer++;
    234e:	90 91 6b 05 	lds	r25, 0x056B	; 0x80056b <menu+0x5>
    2352:	01 96       	adiw	r24, 0x01	; 1
    2354:	83 30       	cpi	r24, 0x03	; 3
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
    2356:	91 05       	cpc	r25, r1
    2358:	2c f4       	brge	.+10     	; 0x2364 <_Z5checkv+0x818>
    235a:	90 93 6b 05 	sts	0x056B, r25	; 0x80056b <menu+0x5>

	};
	
	void next()override
	{
		pointer++;
    235e:	80 93 6a 05 	sts	0x056A, r24	; 0x80056a <menu+0x4>
    2362:	04 c0       	rjmp	.+8      	; 0x236c <_Z5checkv+0x820>
    2364:	10 92 6b 05 	sts	0x056B, r1	; 0x80056b <menu+0x5>
		if(pointer>MAIN_MENU_POINER_COUNT) pointer=0;
    2368:	10 92 6a 05 	sts	0x056A, r1	; 0x80056a <menu+0x4>
    236c:	e0 91 66 05 	lds	r30, 0x0566	; 0x800566 <menu>
		actions();
    2370:	f0 91 67 05 	lds	r31, 0x0567	; 0x800567 <menu+0x1>
    2374:	00 88       	ldd	r0, Z+16	; 0x10
    2376:	f1 89       	ldd	r31, Z+17	; 0x11
    2378:	e0 2d       	mov	r30, r0
    237a:	86 e6       	ldi	r24, 0x66	; 102
    237c:	95 e0       	ldi	r25, 0x05	; 5
    237e:	09 95       	icall
    2380:	5e c0       	rjmp	.+188    	; 0x243e <_Z5checkv+0x8f2>
    2382:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <Settings_Menu_Status>
		else if (Main_Menu_Status)
		{
			menu.next();
			//menu.refresh();
		}
		else if (Settings_Menu_Status)
    2386:	88 23       	and	r24, r24
    2388:	09 f4       	brne	.+2      	; 0x238c <_Z5checkv+0x840>
    238a:	59 c0       	rjmp	.+178    	; 0x243e <_Z5checkv+0x8f2>
    238c:	80 91 84 05 	lds	r24, 0x0584	; 0x800584 <sett_menu+0x4>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		pointer++;
    2390:	90 91 85 05 	lds	r25, 0x0585	; 0x800585 <sett_menu+0x5>
    2394:	01 96       	adiw	r24, 0x01	; 1
    2396:	85 30       	cpi	r24, 0x05	; 5
		if(pointer>SETTINGS_MENU_POINER_COUNT) pointer=0;
    2398:	91 05       	cpc	r25, r1
    239a:	2c f4       	brge	.+10     	; 0x23a6 <_Z5checkv+0x85a>
    239c:	90 93 85 05 	sts	0x0585, r25	; 0x800585 <sett_menu+0x5>
		oled.OLED_Bufer_Clear();
	};
	
	void next()override
	{
		pointer++;
    23a0:	80 93 84 05 	sts	0x0584, r24	; 0x800584 <sett_menu+0x4>
    23a4:	04 c0       	rjmp	.+8      	; 0x23ae <_Z5checkv+0x862>
    23a6:	10 92 85 05 	sts	0x0585, r1	; 0x800585 <sett_menu+0x5>
		if(pointer>SETTINGS_MENU_POINER_COUNT) pointer=0;
    23aa:	10 92 84 05 	sts	0x0584, r1	; 0x800584 <sett_menu+0x4>
		actions();
    23ae:	e0 91 80 05 	lds	r30, 0x0580	; 0x800580 <sett_menu>
    23b2:	f0 91 81 05 	lds	r31, 0x0581	; 0x800581 <sett_menu+0x1>
    23b6:	00 88       	ldd	r0, Z+16	; 0x10
    23b8:	f1 89       	ldd	r31, Z+17	; 0x11
    23ba:	e0 2d       	mov	r30, r0
    23bc:	80 e8       	ldi	r24, 0x80	; 128
    23be:	95 e0       	ldi	r25, 0x05	; 5
    23c0:	09 95       	icall
    23c2:	3d c0       	rjmp	.+122    	; 0x243e <_Z5checkv+0x8f2>
		{
			sett_menu.next();
			//sett_menu.refresh();
		}
	}
	else if(!btn0  & !btn3 & btn12 & !btn03)
    23c4:	58 23       	and	r21, r24
    23c6:	e5 23       	and	r30, r21
    23c8:	fe 17       	cp	r31, r30
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    23ca:	d8 f4       	brcc	.+54     	; 0x2402 <_Z5checkv+0x8b6>
    23cc:	08 e0       	ldi	r16, 0x08	; 8
    23ce:	10 e0       	ldi	r17, 0x00	; 0
    23d0:	21 e0       	ldi	r18, 0x01	; 1
    23d2:	30 e0       	ldi	r19, 0x00	; 0
    23d4:	40 e0       	ldi	r20, 0x00	; 0
    23d6:	50 e0       	ldi	r21, 0x00	; 0
    23d8:	60 e0       	ldi	r22, 0x00	; 0
    23da:	70 e0       	ldi	r23, 0x00	; 0
    23dc:	83 e9       	ldi	r24, 0x93	; 147
    23de:	95 e0       	ldi	r25, 0x05	; 5
    23e0:	d9 d2       	rcall	.+1458   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,four);
    23e2:	0f 2e       	mov	r0, r31
    23e4:	f1 ee       	ldi	r31, 0xE1	; 225
    23e6:	ef 2e       	mov	r14, r31
    23e8:	f4 e0       	ldi	r31, 0x04	; 4
    23ea:	ff 2e       	mov	r15, r31
    23ec:	f0 2d       	mov	r31, r0
    23ee:	21 e0       	ldi	r18, 0x01	; 1
    23f0:	30 e0       	ldi	r19, 0x00	; 0
    23f2:	40 e0       	ldi	r20, 0x00	; 0
    23f4:	50 e0       	ldi	r21, 0x00	; 0
    23f6:	60 e0       	ldi	r22, 0x00	; 0
    23f8:	70 e0       	ldi	r23, 0x00	; 0
    23fa:	83 e9       	ldi	r24, 0x93	; 147
    23fc:	95 e0       	ldi	r25, 0x05	; 5
    23fe:	19 d3       	rcall	.+1586   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		{


		}
	}
	else if(!btn1 & !btn2 & !btn12 & btn03)
    2400:	1e c0       	rjmp	.+60     	; 0x243e <_Z5checkv+0x8f2>
    2402:	4a 23       	and	r20, r26
    2404:	e1 f0       	breq	.+56     	; 0x243e <_Z5checkv+0x8f2>
    2406:	ff 23       	and	r31, r31
	{
		oled.OLED_Clear_Bufer_part(0,0,1,8);
    2408:	d1 f0       	breq	.+52     	; 0x243e <_Z5checkv+0x8f2>
    240a:	08 e0       	ldi	r16, 0x08	; 8
    240c:	10 e0       	ldi	r17, 0x00	; 0
    240e:	21 e0       	ldi	r18, 0x01	; 1
    2410:	30 e0       	ldi	r19, 0x00	; 0
    2412:	40 e0       	ldi	r20, 0x00	; 0
    2414:	50 e0       	ldi	r21, 0x00	; 0
    2416:	60 e0       	ldi	r22, 0x00	; 0
    2418:	70 e0       	ldi	r23, 0x00	; 0
    241a:	83 e9       	ldi	r24, 0x93	; 147
    241c:	95 e0       	ldi	r25, 0x05	; 5
    241e:	ba d2       	rcall	.+1396   	; 0x2994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>
		oled.OLED_Write_To_Bufer(0,0,1,8,five);
    2420:	0f 2e       	mov	r0, r31
    2422:	f9 ed       	ldi	r31, 0xD9	; 217
    2424:	ef 2e       	mov	r14, r31
    2426:	f4 e0       	ldi	r31, 0x04	; 4
    2428:	ff 2e       	mov	r15, r31
    242a:	f0 2d       	mov	r31, r0
    242c:	21 e0       	ldi	r18, 0x01	; 1
    242e:	30 e0       	ldi	r19, 0x00	; 0
    2430:	40 e0       	ldi	r20, 0x00	; 0
    2432:	50 e0       	ldi	r21, 0x00	; 0
    2434:	60 e0       	ldi	r22, 0x00	; 0
    2436:	70 e0       	ldi	r23, 0x00	; 0
    2438:	83 e9       	ldi	r24, 0x93	; 147
    243a:	95 e0       	ldi	r25, 0x05	; 5
    243c:	fa d2       	rcall	.+1524   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    243e:	10 92 65 05 	sts	0x0565, r1	; 0x800565 <btn0>
		{
			//sett_menu.choise();
			//sett_menu.refresh();
		}
	}
		btn0=false;
    2442:	10 92 64 05 	sts	0x0564, r1	; 0x800564 <btn1>
		btn1=false;
    2446:	10 92 63 05 	sts	0x0563, r1	; 0x800563 <btn2>
		btn2=false;
    244a:	10 92 62 05 	sts	0x0562, r1	; 0x800562 <btn3>
		btn3=false;
    244e:	10 92 61 05 	sts	0x0561, r1	; 0x800561 <btn03>
		btn03=false;
    2452:	10 92 60 05 	sts	0x0560, r1	; 0x800560 <btn12>
		btn12=false;
    2456:	05 c0       	rjmp	.+10     	; 0x2462 <_Z5checkv+0x916>
	
}
    2458:	e0 91 60 05 	lds	r30, 0x0560	; 0x800560 <btn12>
void check()
{
	if(btn0 & !btn1 & !btn2 & btn3) btn03=true;
	if(!btn0 & btn1 & btn2 & !btn3) btn12=true;
	
	if(btn0 & !btn1 & !btn2 & !btn3 & !btn12 & !btn03)
    245c:	41 e0       	ldi	r20, 0x01	; 1
    245e:	4e 27       	eor	r20, r30
    2460:	0e cf       	rjmp	.-484    	; 0x227e <_Z5checkv+0x732>
    2462:	df 91       	pop	r29
		btn2=false;
		btn3=false;
		btn03=false;
		btn12=false;
	
}
    2464:	cf 91       	pop	r28
    2466:	1f 91       	pop	r17
    2468:	0f 91       	pop	r16
    246a:	ff 90       	pop	r15
    246c:	ef 90       	pop	r14
    246e:	df 90       	pop	r13
    2470:	cf 90       	pop	r12
    2472:	bf 90       	pop	r11
    2474:	af 90       	pop	r10
    2476:	08 95       	ret

00002478 <_ZN6Batary19printlvltoOLEDbuferEv>:
    2478:	ef 92       	push	r14
	if((PINB>>2)&0b00000001==1) kf++;
	if((PINB>>3)&0b00000001==1) kf++;
	curlvl=kf;
}

void printlvltoOLEDbufer()
    247a:	ff 92       	push	r15
    247c:	0f 93       	push	r16
    247e:	1f 93       	push	r17
    2480:	cf 93       	push	r28
    2482:	df 93       	push	r29
    2484:	ec 01       	movw	r28, r24
{
	if(curlvl==0) oled.OLED_Write_To_Bufer(96,0,4,8,batary5);
    2486:	88 81       	ld	r24, Y
    2488:	99 81       	ldd	r25, Y+1	; 0x01
    248a:	89 2b       	or	r24, r25
    248c:	89 f4       	brne	.+34     	; 0x24b0 <_ZN6Batary19printlvltoOLEDbuferEv+0x38>
    248e:	0f 2e       	mov	r0, r31
    2490:	f9 e1       	ldi	r31, 0x19	; 25
    2492:	ef 2e       	mov	r14, r31
    2494:	f2 e0       	ldi	r31, 0x02	; 2
    2496:	ff 2e       	mov	r15, r31
    2498:	f0 2d       	mov	r31, r0
    249a:	08 e0       	ldi	r16, 0x08	; 8
    249c:	10 e0       	ldi	r17, 0x00	; 0
    249e:	24 e0       	ldi	r18, 0x04	; 4
    24a0:	30 e0       	ldi	r19, 0x00	; 0
    24a2:	40 e0       	ldi	r20, 0x00	; 0
    24a4:	50 e0       	ldi	r21, 0x00	; 0
    24a6:	60 e6       	ldi	r22, 0x60	; 96
    24a8:	70 e0       	ldi	r23, 0x00	; 0
    24aa:	83 e9       	ldi	r24, 0x93	; 147
    24ac:	95 e0       	ldi	r25, 0x05	; 5
    24ae:	c1 d2       	rcall	.+1410   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==1) oled.OLED_Write_To_Bufer(96,0,4,8,batary4);
    24b0:	88 81       	ld	r24, Y
    24b2:	99 81       	ldd	r25, Y+1	; 0x01
    24b4:	01 97       	sbiw	r24, 0x01	; 1
    24b6:	89 f4       	brne	.+34     	; 0x24da <_ZN6Batary19printlvltoOLEDbuferEv+0x62>
    24b8:	0f 2e       	mov	r0, r31
    24ba:	f9 ef       	ldi	r31, 0xF9	; 249
    24bc:	ef 2e       	mov	r14, r31
    24be:	f1 e0       	ldi	r31, 0x01	; 1
    24c0:	ff 2e       	mov	r15, r31
    24c2:	f0 2d       	mov	r31, r0
    24c4:	08 e0       	ldi	r16, 0x08	; 8
    24c6:	10 e0       	ldi	r17, 0x00	; 0
    24c8:	24 e0       	ldi	r18, 0x04	; 4
    24ca:	30 e0       	ldi	r19, 0x00	; 0
    24cc:	40 e0       	ldi	r20, 0x00	; 0
    24ce:	50 e0       	ldi	r21, 0x00	; 0
    24d0:	60 e6       	ldi	r22, 0x60	; 96
    24d2:	70 e0       	ldi	r23, 0x00	; 0
    24d4:	83 e9       	ldi	r24, 0x93	; 147
    24d6:	95 e0       	ldi	r25, 0x05	; 5
    24d8:	ac d2       	rcall	.+1368   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==2) oled.OLED_Write_To_Bufer(96,0,4,8,batary3);
    24da:	88 81       	ld	r24, Y
    24dc:	99 81       	ldd	r25, Y+1	; 0x01
    24de:	02 97       	sbiw	r24, 0x02	; 2
    24e0:	89 f4       	brne	.+34     	; 0x2504 <_ZN6Batary19printlvltoOLEDbuferEv+0x8c>
    24e2:	0f 2e       	mov	r0, r31
    24e4:	f9 ed       	ldi	r31, 0xD9	; 217
    24e6:	ef 2e       	mov	r14, r31
    24e8:	f1 e0       	ldi	r31, 0x01	; 1
    24ea:	ff 2e       	mov	r15, r31
    24ec:	f0 2d       	mov	r31, r0
    24ee:	08 e0       	ldi	r16, 0x08	; 8
    24f0:	10 e0       	ldi	r17, 0x00	; 0
    24f2:	24 e0       	ldi	r18, 0x04	; 4
    24f4:	30 e0       	ldi	r19, 0x00	; 0
    24f6:	40 e0       	ldi	r20, 0x00	; 0
    24f8:	50 e0       	ldi	r21, 0x00	; 0
    24fa:	60 e6       	ldi	r22, 0x60	; 96
    24fc:	70 e0       	ldi	r23, 0x00	; 0
    24fe:	83 e9       	ldi	r24, 0x93	; 147
    2500:	95 e0       	ldi	r25, 0x05	; 5
    2502:	97 d2       	rcall	.+1326   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==3) oled.OLED_Write_To_Bufer(96,0,4,8,batary2);
    2504:	88 81       	ld	r24, Y
    2506:	99 81       	ldd	r25, Y+1	; 0x01
    2508:	03 97       	sbiw	r24, 0x03	; 3
    250a:	89 f4       	brne	.+34     	; 0x252e <_ZN6Batary19printlvltoOLEDbuferEv+0xb6>
    250c:	0f 2e       	mov	r0, r31
    250e:	f9 eb       	ldi	r31, 0xB9	; 185
    2510:	ef 2e       	mov	r14, r31
    2512:	f1 e0       	ldi	r31, 0x01	; 1
    2514:	ff 2e       	mov	r15, r31
    2516:	f0 2d       	mov	r31, r0
    2518:	08 e0       	ldi	r16, 0x08	; 8
    251a:	10 e0       	ldi	r17, 0x00	; 0
    251c:	24 e0       	ldi	r18, 0x04	; 4
    251e:	30 e0       	ldi	r19, 0x00	; 0
    2520:	40 e0       	ldi	r20, 0x00	; 0
    2522:	50 e0       	ldi	r21, 0x00	; 0
    2524:	60 e6       	ldi	r22, 0x60	; 96
    2526:	70 e0       	ldi	r23, 0x00	; 0
    2528:	83 e9       	ldi	r24, 0x93	; 147
    252a:	95 e0       	ldi	r25, 0x05	; 5
    252c:	82 d2       	rcall	.+1284   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==4) oled.OLED_Write_To_Bufer(96,0,4,8,batary1);
    252e:	88 81       	ld	r24, Y
    2530:	99 81       	ldd	r25, Y+1	; 0x01
    2532:	04 97       	sbiw	r24, 0x04	; 4
    2534:	89 f4       	brne	.+34     	; 0x2558 <_ZN6Batary19printlvltoOLEDbuferEv+0xe0>
    2536:	0f 2e       	mov	r0, r31
    2538:	f9 e9       	ldi	r31, 0x99	; 153
    253a:	ef 2e       	mov	r14, r31
    253c:	f1 e0       	ldi	r31, 0x01	; 1
    253e:	ff 2e       	mov	r15, r31
    2540:	f0 2d       	mov	r31, r0
    2542:	08 e0       	ldi	r16, 0x08	; 8
    2544:	10 e0       	ldi	r17, 0x00	; 0
    2546:	24 e0       	ldi	r18, 0x04	; 4
    2548:	30 e0       	ldi	r19, 0x00	; 0
    254a:	40 e0       	ldi	r20, 0x00	; 0
    254c:	50 e0       	ldi	r21, 0x00	; 0
    254e:	60 e6       	ldi	r22, 0x60	; 96
    2550:	70 e0       	ldi	r23, 0x00	; 0
    2552:	83 e9       	ldi	r24, 0x93	; 147
    2554:	95 e0       	ldi	r25, 0x05	; 5
    2556:	6d d2       	rcall	.+1242   	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
}
    2558:	df 91       	pop	r29
    255a:	cf 91       	pop	r28
    255c:	1f 91       	pop	r17
    255e:	0f 91       	pop	r16
    2560:	ff 90       	pop	r15
    2562:	ef 90       	pop	r14
    2564:	08 95       	ret

00002566 <main>:

Batary batary;


int main(void){
		oled.OLED_Write_Bufer();
    2566:	83 e9       	ldi	r24, 0x93	; 147
    2568:	95 e0       	ldi	r25, 0x05	; 5
    256a:	6a d1       	rcall	.+724    	; 0x2840 <_ZN4OLED16OLED_Write_BuferEv>
		//menu.refresh();

		DDRA = 0x00;
    256c:	11 b8       	out	0x01, r1	; 1
		PORTA=0x00;
    256e:	12 b8       	out	0x02, r1	; 2
		PCMSK0=0b00111100;
    2570:	8c e3       	ldi	r24, 0x3C	; 60
    2572:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
		PCICR|=0b00000001;
    2576:	e8 e6       	ldi	r30, 0x68	; 104
    2578:	f0 e0       	ldi	r31, 0x00	; 0
    257a:	80 81       	ld	r24, Z
    257c:	81 60       	ori	r24, 0x01	; 1
    257e:	80 83       	st	Z, r24
		sei();
    2580:	78 94       	sei
	};
	
	void refresh() override
	{
		//oled.OLED_Bufer_Clear();
		Default();
    2582:	0f 2e       	mov	r0, r31
    2584:	f0 e8       	ldi	r31, 0x80	; 128
    2586:	8f 2e       	mov	r8, r31
    2588:	f5 e0       	ldi	r31, 0x05	; 5
    258a:	9f 2e       	mov	r9, r31
    258c:	f0 2d       	mov	r31, r0
    };
	
    void refresh() override
	{
		//oled.OLED_Bufer_Clear();
		Default();
    258e:	0f 2e       	mov	r0, r31
    2590:	f6 e6       	ldi	r31, 0x66	; 102
    2592:	af 2e       	mov	r10, r31
    2594:	f5 e0       	ldi	r31, 0x05	; 5
    2596:	bf 2e       	mov	r11, r31
    2598:	f0 2d       	mov	r31, r0
	};
	
	void refresh() override
	{
				//oled.OLED_Bufer_Clear();
				Default();
    259a:	0f 2e       	mov	r0, r31
    259c:	fc e6       	ldi	r31, 0x6C	; 108
    259e:	cf 2e       	mov	r12, r31
    25a0:	f5 e0       	ldi	r31, 0x05	; 5
    25a2:	df 2e       	mov	r13, r31
		PCMSK0=0b00111100;
		PCICR|=0b00000001;
		sei();
	while(1)
	{
		check();
    25a4:	f0 2d       	mov	r31, r0
    25a6:	d2 da       	rcall	.-2652   	; 0x1b4c <_Z5checkv>
		if (Password_Menu_Status)
    25a8:	80 91 92 05 	lds	r24, 0x0592	; 0x800592 <Password_Menu_Status>
    25ac:	88 23       	and	r24, r24
    25ae:	89 f0       	breq	.+34     	; 0x25d2 <main+0x6c>
	};
	
	void refresh() override
	{
				//oled.OLED_Bufer_Clear();
				Default();
    25b0:	d6 01       	movw	r26, r12
    25b2:	ed 91       	ld	r30, X+
    25b4:	fc 91       	ld	r31, X
    25b6:	01 90       	ld	r0, Z+
    25b8:	f0 81       	ld	r31, Z
    25ba:	e0 2d       	mov	r30, r0
    25bc:	c6 01       	movw	r24, r12
    25be:	09 95       	icall
				actions();
    25c0:	d6 01       	movw	r26, r12
    25c2:	ed 91       	ld	r30, X+
    25c4:	fc 91       	ld	r31, X
    25c6:	00 88       	ldd	r0, Z+16	; 0x10
    25c8:	f1 89       	ldd	r31, Z+17	; 0x11
    25ca:	e0 2d       	mov	r30, r0
    25cc:	c6 01       	movw	r24, r12
    25ce:	09 95       	icall
    25d0:	29 c0       	rjmp	.+82     	; 0x2624 <main+0xbe>
		check();
		if (Password_Menu_Status)
		{
			passw_menu.refresh();
		}
		else if (Main_Menu_Status)
    25d2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <Main_Menu_Status>
    25d6:	88 23       	and	r24, r24
    25d8:	89 f0       	breq	.+34     	; 0x25fc <main+0x96>
    };
	
    void refresh() override
	{
		//oled.OLED_Bufer_Clear();
		Default();
    25da:	d5 01       	movw	r26, r10
    25dc:	ed 91       	ld	r30, X+
    25de:	fc 91       	ld	r31, X
    25e0:	01 90       	ld	r0, Z+
    25e2:	f0 81       	ld	r31, Z
    25e4:	e0 2d       	mov	r30, r0
    25e6:	c5 01       	movw	r24, r10
    25e8:	09 95       	icall
		actions();
    25ea:	d5 01       	movw	r26, r10
    25ec:	ed 91       	ld	r30, X+
    25ee:	fc 91       	ld	r31, X
    25f0:	00 88       	ldd	r0, Z+16	; 0x10
    25f2:	f1 89       	ldd	r31, Z+17	; 0x11
    25f4:	e0 2d       	mov	r30, r0
    25f6:	c5 01       	movw	r24, r10
    25f8:	09 95       	icall
    25fa:	14 c0       	rjmp	.+40     	; 0x2624 <main+0xbe>
		}
		else if (Main_Menu_Status)
		{
			menu.refresh();
		}
		else if (Settings_Menu_Status)
    25fc:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <Settings_Menu_Status>
    2600:	88 23       	and	r24, r24
    2602:	81 f0       	breq	.+32     	; 0x2624 <main+0xbe>
	};
	
	void refresh() override
	{
		//oled.OLED_Bufer_Clear();
		Default();
    2604:	d4 01       	movw	r26, r8
    2606:	ed 91       	ld	r30, X+
    2608:	fc 91       	ld	r31, X
    260a:	01 90       	ld	r0, Z+
    260c:	f0 81       	ld	r31, Z
    260e:	e0 2d       	mov	r30, r0
    2610:	c4 01       	movw	r24, r8
    2612:	09 95       	icall
		actions();
    2614:	d4 01       	movw	r26, r8
    2616:	ed 91       	ld	r30, X+
    2618:	fc 91       	ld	r31, X
    261a:	00 88       	ldd	r0, Z+16	; 0x10
    261c:	f1 89       	ldd	r31, Z+17	; 0x11
    261e:	e0 2d       	mov	r30, r0
    2620:	c4 01       	movw	r24, r8
    2622:	09 95       	icall
}

void refreshlvl()
{
	int kf=0;
	if((PINB>>0)&0b00000001==1) kf++;
    2624:	83 b1       	in	r24, 0x03	; 3
	printlvltoOLEDbufer();
}

void refreshlvl()
{
	int kf=0;
    2626:	81 70       	andi	r24, 0x01	; 1
    2628:	c8 2f       	mov	r28, r24
    262a:	b0 e0       	ldi	r27, 0x00	; 0
    262c:	db 2f       	mov	r29, r27
    262e:	ce 01       	movw	r24, r28
	if((PINB>>0)&0b00000001==1) kf++;
	if((PINB>>1)&0b00000001==1) kf++;
    2630:	19 99       	sbic	0x03, 1	; 3
    2632:	01 96       	adiw	r24, 0x01	; 1
	if((PINB>>2)&0b00000001==1) kf++;
    2634:	1a 99       	sbic	0x03, 2	; 3
    2636:	01 96       	adiw	r24, 0x01	; 1
	if((PINB>>3)&0b00000001==1) kf++;
    2638:	1b 99       	sbic	0x03, 3	; 3
    263a:	01 96       	adiw	r24, 0x01	; 1
	curlvl=kf;
    263c:	90 93 5f 05 	sts	0x055F, r25	; 0x80055f <__data_end+0x1>
    2640:	80 93 5e 05 	sts	0x055E, r24	; 0x80055e <__data_end>
}

void printlvltoOLEDbufer()
{
	if(curlvl==0) oled.OLED_Write_To_Bufer(96,0,4,8,batary5);
    2644:	89 2b       	or	r24, r25
    2646:	89 f4       	brne	.+34     	; 0x266a <main+0x104>
    2648:	0f 2e       	mov	r0, r31
    264a:	f9 e1       	ldi	r31, 0x19	; 25
    264c:	ef 2e       	mov	r14, r31
    264e:	f2 e0       	ldi	r31, 0x02	; 2
    2650:	ff 2e       	mov	r15, r31
    2652:	f0 2d       	mov	r31, r0
    2654:	08 e0       	ldi	r16, 0x08	; 8
    2656:	10 e0       	ldi	r17, 0x00	; 0
    2658:	24 e0       	ldi	r18, 0x04	; 4
    265a:	30 e0       	ldi	r19, 0x00	; 0
    265c:	40 e0       	ldi	r20, 0x00	; 0
    265e:	50 e0       	ldi	r21, 0x00	; 0
    2660:	60 e6       	ldi	r22, 0x60	; 96
    2662:	70 e0       	ldi	r23, 0x00	; 0
    2664:	83 e9       	ldi	r24, 0x93	; 147
    2666:	95 e0       	ldi	r25, 0x05	; 5
    2668:	e4 d1       	rcall	.+968    	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==1) oled.OLED_Write_To_Bufer(96,0,4,8,batary4);
    266a:	80 91 5e 05 	lds	r24, 0x055E	; 0x80055e <__data_end>
    266e:	90 91 5f 05 	lds	r25, 0x055F	; 0x80055f <__data_end+0x1>
    2672:	01 97       	sbiw	r24, 0x01	; 1
    2674:	89 f4       	brne	.+34     	; 0x2698 <main+0x132>
    2676:	0f 2e       	mov	r0, r31
    2678:	f9 ef       	ldi	r31, 0xF9	; 249
    267a:	ef 2e       	mov	r14, r31
    267c:	f1 e0       	ldi	r31, 0x01	; 1
    267e:	ff 2e       	mov	r15, r31
    2680:	f0 2d       	mov	r31, r0
    2682:	08 e0       	ldi	r16, 0x08	; 8
    2684:	10 e0       	ldi	r17, 0x00	; 0
    2686:	24 e0       	ldi	r18, 0x04	; 4
    2688:	30 e0       	ldi	r19, 0x00	; 0
    268a:	40 e0       	ldi	r20, 0x00	; 0
    268c:	50 e0       	ldi	r21, 0x00	; 0
    268e:	60 e6       	ldi	r22, 0x60	; 96
    2690:	70 e0       	ldi	r23, 0x00	; 0
    2692:	83 e9       	ldi	r24, 0x93	; 147
    2694:	95 e0       	ldi	r25, 0x05	; 5
    2696:	cd d1       	rcall	.+922    	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==2) oled.OLED_Write_To_Bufer(96,0,4,8,batary3);
    2698:	80 91 5e 05 	lds	r24, 0x055E	; 0x80055e <__data_end>
    269c:	90 91 5f 05 	lds	r25, 0x055F	; 0x80055f <__data_end+0x1>
    26a0:	02 97       	sbiw	r24, 0x02	; 2
    26a2:	89 f4       	brne	.+34     	; 0x26c6 <main+0x160>
    26a4:	0f 2e       	mov	r0, r31
    26a6:	f9 ed       	ldi	r31, 0xD9	; 217
    26a8:	ef 2e       	mov	r14, r31
    26aa:	f1 e0       	ldi	r31, 0x01	; 1
    26ac:	ff 2e       	mov	r15, r31
    26ae:	f0 2d       	mov	r31, r0
    26b0:	08 e0       	ldi	r16, 0x08	; 8
    26b2:	10 e0       	ldi	r17, 0x00	; 0
    26b4:	24 e0       	ldi	r18, 0x04	; 4
    26b6:	30 e0       	ldi	r19, 0x00	; 0
    26b8:	40 e0       	ldi	r20, 0x00	; 0
    26ba:	50 e0       	ldi	r21, 0x00	; 0
    26bc:	60 e6       	ldi	r22, 0x60	; 96
    26be:	70 e0       	ldi	r23, 0x00	; 0
    26c0:	83 e9       	ldi	r24, 0x93	; 147
    26c2:	95 e0       	ldi	r25, 0x05	; 5
    26c4:	b6 d1       	rcall	.+876    	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==3) oled.OLED_Write_To_Bufer(96,0,4,8,batary2);
    26c6:	80 91 5e 05 	lds	r24, 0x055E	; 0x80055e <__data_end>
    26ca:	90 91 5f 05 	lds	r25, 0x055F	; 0x80055f <__data_end+0x1>
    26ce:	03 97       	sbiw	r24, 0x03	; 3
    26d0:	89 f4       	brne	.+34     	; 0x26f4 <main+0x18e>
    26d2:	0f 2e       	mov	r0, r31
    26d4:	f9 eb       	ldi	r31, 0xB9	; 185
    26d6:	ef 2e       	mov	r14, r31
    26d8:	f1 e0       	ldi	r31, 0x01	; 1
    26da:	ff 2e       	mov	r15, r31
    26dc:	f0 2d       	mov	r31, r0
    26de:	08 e0       	ldi	r16, 0x08	; 8
    26e0:	10 e0       	ldi	r17, 0x00	; 0
    26e2:	24 e0       	ldi	r18, 0x04	; 4
    26e4:	30 e0       	ldi	r19, 0x00	; 0
    26e6:	40 e0       	ldi	r20, 0x00	; 0
    26e8:	50 e0       	ldi	r21, 0x00	; 0
    26ea:	60 e6       	ldi	r22, 0x60	; 96
    26ec:	70 e0       	ldi	r23, 0x00	; 0
    26ee:	83 e9       	ldi	r24, 0x93	; 147
    26f0:	95 e0       	ldi	r25, 0x05	; 5
    26f2:	9f d1       	rcall	.+830    	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
	if(curlvl==4) oled.OLED_Write_To_Bufer(96,0,4,8,batary1);
    26f4:	80 91 5e 05 	lds	r24, 0x055E	; 0x80055e <__data_end>
    26f8:	90 91 5f 05 	lds	r25, 0x055F	; 0x80055f <__data_end+0x1>
    26fc:	04 97       	sbiw	r24, 0x04	; 4
    26fe:	89 f4       	brne	.+34     	; 0x2722 <main+0x1bc>
    2700:	0f 2e       	mov	r0, r31
    2702:	f9 e9       	ldi	r31, 0x99	; 153
    2704:	ef 2e       	mov	r14, r31
    2706:	f1 e0       	ldi	r31, 0x01	; 1
    2708:	ff 2e       	mov	r15, r31
    270a:	f0 2d       	mov	r31, r0
    270c:	08 e0       	ldi	r16, 0x08	; 8
    270e:	10 e0       	ldi	r17, 0x00	; 0
    2710:	24 e0       	ldi	r18, 0x04	; 4
    2712:	30 e0       	ldi	r19, 0x00	; 0
    2714:	40 e0       	ldi	r20, 0x00	; 0
    2716:	50 e0       	ldi	r21, 0x00	; 0
    2718:	60 e6       	ldi	r22, 0x60	; 96
    271a:	70 e0       	ldi	r23, 0x00	; 0
    271c:	83 e9       	ldi	r24, 0x93	; 147
    271e:	95 e0       	ldi	r25, 0x05	; 5
    2720:	88 d1       	rcall	.+784    	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
		else if (Settings_Menu_Status)
		{
			sett_menu.refresh();
		}
		batary.refresh();
		oled.OLED_Write_To_Bufer(80,0,2,8,Net0);
    2722:	0f 2e       	mov	r0, r31
    2724:	f9 e8       	ldi	r31, 0x89	; 137
    2726:	ef 2e       	mov	r14, r31
    2728:	f1 e0       	ldi	r31, 0x01	; 1
    272a:	ff 2e       	mov	r15, r31
    272c:	f0 2d       	mov	r31, r0
    272e:	08 e0       	ldi	r16, 0x08	; 8
    2730:	10 e0       	ldi	r17, 0x00	; 0
    2732:	22 e0       	ldi	r18, 0x02	; 2
    2734:	30 e0       	ldi	r19, 0x00	; 0
    2736:	40 e0       	ldi	r20, 0x00	; 0
    2738:	50 e0       	ldi	r21, 0x00	; 0
    273a:	60 e5       	ldi	r22, 0x50	; 80
    273c:	70 e0       	ldi	r23, 0x00	; 0
    273e:	83 e9       	ldi	r24, 0x93	; 147
    2740:	95 e0       	ldi	r25, 0x05	; 5
		oled.OLED_Write_Bufer();
    2742:	77 d1       	rcall	.+750    	; 0x2a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>
    2744:	83 e9       	ldi	r24, 0x93	; 147
    2746:	95 e0       	ldi	r25, 0x05	; 5
    2748:	7b d0       	rcall	.+246    	; 0x2840 <_ZN4OLED16OLED_Write_BuferEv>
		DDRA = 0x00;
		PORTA=0x00;
		PCMSK0=0b00111100;
		PCICR|=0b00000001;
		sei();
	while(1)
    274a:	2d cf       	rjmp	.-422    	; 0x25a6 <main+0x40>

0000274c <_GLOBAL__sub_I_zero>:
		}
		batary.refresh();
		oled.OLED_Write_To_Bufer(80,0,2,8,Net0);
		oled.OLED_Write_Bufer();
	}
}
    274c:	0f 93       	push	r16
    274e:	1f 93       	push	r17
    2750:	cf 93       	push	r28
    2752:	df 93       	push	r29
#include "Defines.h"
#include "Images.h"
#include "TWI.h"
#include "OLED.h"

TWI wire;
    2754:	84 e9       	ldi	r24, 0x94	; 148
    2756:	99 e0       	ldi	r25, 0x09	; 9
    2758:	19 d2       	rcall	.+1074   	; 0x2b8c <_ZN3TWIC1Ev>
OLED oled(wire);
    275a:	60 e0       	ldi	r22, 0x00	; 0
    275c:	83 e9       	ldi	r24, 0x93	; 147
    275e:	95 e0       	ldi	r25, 0x05	; 5
    2760:	8f d0       	rcall	.+286    	; 0x2880 <_ZN4OLEDC1E3TWI>
	int pointer=0;
	int x[4]={SETTINGS_MENU_IMG_X_0,SETTINGS_MENU_IMG_X_1,SETTINGS_MENU_IMG_X_2,SETTINGS_MENU_IMG_X_3};
	int y=SETTINGS_MENU_IMG_Y;
	public:
	Settings_Menu()
	{
    2762:	c0 e8       	ldi	r28, 0x80	; 128
    2764:	d5 e0       	ldi	r29, 0x05	; 5
    2766:	8b e4       	ldi	r24, 0x4B	; 75
    2768:	95 e0       	ldi	r25, 0x05	; 5
    276a:	99 83       	std	Y+1, r25	; 0x01
    276c:	88 83       	st	Y, r24
    276e:	1d 82       	std	Y+5, r1	; 0x05
    2770:	1c 82       	std	Y+4, r1	; 0x04
    2772:	88 e0       	ldi	r24, 0x08	; 8
    2774:	e9 e0       	ldi	r30, 0x09	; 9
    2776:	f5 e0       	ldi	r31, 0x05	; 5
    2778:	a6 e8       	ldi	r26, 0x86	; 134
    277a:	b5 e0       	ldi	r27, 0x05	; 5
    277c:	01 90       	ld	r0, Z+
    277e:	0d 92       	st	X+, r0
    2780:	8a 95       	dec	r24
    2782:	e1 f7       	brne	.-8      	; 0x277c <_GLOBAL__sub_I_zero+0x30>
    2784:	84 e0       	ldi	r24, 0x04	; 4
    2786:	90 e0       	ldi	r25, 0x00	; 0
    2788:	9f 87       	std	Y+15, r25	; 0x0f
    278a:	8e 87       	std	Y+14, r24	; 0x0e
	int symbol_pointer=0;
	int x[5]={PASSWORD_MENU_IMG_X_0,PASSWORD_MENU_IMG_X_1,PASSWORD_MENU_IMG_X_2,PASSWORD_MENU_IMG_X_3,PASSWORD_MENU_IMG_X_4};
	int y=PASSWORD_MENU_IMG_Y;
	public:
	Password_Menu()
	{
    278c:	cc e6       	ldi	r28, 0x6C	; 108
    278e:	d5 e0       	ldi	r29, 0x05	; 5
    2790:	85 e3       	ldi	r24, 0x35	; 53
    2792:	95 e0       	ldi	r25, 0x05	; 5
    2794:	99 83       	std	Y+1, r25	; 0x01
    2796:	88 83       	st	Y, r24
    2798:	1d 82       	std	Y+5, r1	; 0x05
    279a:	1c 82       	std	Y+4, r1	; 0x04
    279c:	1f 82       	std	Y+7, r1	; 0x07
    279e:	1e 82       	std	Y+6, r1	; 0x06
    27a0:	8a e0       	ldi	r24, 0x0A	; 10
    27a2:	e1 e1       	ldi	r30, 0x11	; 17
    27a4:	f5 e0       	ldi	r31, 0x05	; 5
    27a6:	a4 e7       	ldi	r26, 0x74	; 116
    27a8:	b5 e0       	ldi	r27, 0x05	; 5
    27aa:	01 90       	ld	r0, Z+
    27ac:	0d 92       	st	X+, r0
    27ae:	8a 95       	dec	r24
    27b0:	e1 f7       	brne	.-8      	; 0x27aa <_GLOBAL__sub_I_zero+0x5e>
    27b2:	82 e0       	ldi	r24, 0x02	; 2
    27b4:	90 e0       	ldi	r25, 0x00	; 0
    27b6:	9b 8b       	std	Y+19, r25	; 0x13
    27b8:	8a 8b       	std	Y+18, r24	; 0x12
{
	protected:
	int pointer=0;
	public:
	Main_Menu()
	{
    27ba:	e6 e6       	ldi	r30, 0x66	; 102
    27bc:	f5 e0       	ldi	r31, 0x05	; 5
    27be:	8f e1       	ldi	r24, 0x1F	; 31
    27c0:	95 e0       	ldi	r25, 0x05	; 5
    27c2:	91 83       	std	Z+1, r25	; 0x01
    27c4:	80 83       	st	Z, r24
    27c6:	15 82       	std	Z+5, r1	; 0x05
    27c8:	14 82       	std	Z+4, r1	; 0x04
private:
int curlvl;
public:
Batary()
{
	DDRB=0x00;
    27ca:	14 b8       	out	0x04, r1	; 4
	PORTB=0xFF;	
    27cc:	8f ef       	ldi	r24, 0xFF	; 255
    27ce:	85 b9       	out	0x05, r24	; 5
}

void refreshlvl()
{
	int kf=0;
	if((PINB>>0)&0b00000001==1) kf++;
    27d0:	83 b1       	in	r24, 0x03	; 3
	printlvltoOLEDbufer();
}

void refreshlvl()
{
	int kf=0;
    27d2:	08 2f       	mov	r16, r24
    27d4:	01 70       	andi	r16, 0x01	; 1
    27d6:	10 e0       	ldi	r17, 0x00	; 0
    27d8:	c8 01       	movw	r24, r16
	if((PINB>>0)&0b00000001==1) kf++;
	if((PINB>>1)&0b00000001==1) kf++;
    27da:	19 99       	sbic	0x03, 1	; 3
    27dc:	01 96       	adiw	r24, 0x01	; 1
	if((PINB>>2)&0b00000001==1) kf++;
    27de:	1a 99       	sbic	0x03, 2	; 3
    27e0:	01 96       	adiw	r24, 0x01	; 1
	if((PINB>>3)&0b00000001==1) kf++;
    27e2:	1b 99       	sbic	0x03, 3	; 3
    27e4:	01 96       	adiw	r24, 0x01	; 1
	curlvl=kf;
    27e6:	90 93 5f 05 	sts	0x055F, r25	; 0x80055f <__data_end+0x1>
    27ea:	80 93 5e 05 	sts	0x055E, r24	; 0x80055e <__data_end>
Batary()
{
	DDRB=0x00;
	PORTB=0xFF;	
	refreshlvl();
	printlvltoOLEDbufer();
    27ee:	8e e5       	ldi	r24, 0x5E	; 94
    27f0:	95 e0       	ldi	r25, 0x05	; 5
    27f2:	42 de       	rcall	.-892    	; 0x2478 <_ZN6Batary19printlvltoOLEDbuferEv>
		}
		batary.refresh();
		oled.OLED_Write_To_Bufer(80,0,2,8,Net0);
		oled.OLED_Write_Bufer();
	}
}
    27f4:	df 91       	pop	r29
    27f6:	cf 91       	pop	r28
    27f8:	1f 91       	pop	r17
    27fa:	0f 91       	pop	r16
    27fc:	08 95       	ret

000027fe <_ZN4OLED12OLED_CommandEi>:
	}
	

	void OLED::OLED_Command(int command)
	{
		TWDR=0x80;
    27fe:	80 e8       	ldi	r24, 0x80	; 128
    2800:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    2804:	84 e8       	ldi	r24, 0x84	; 132
    2806:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    280a:	ec eb       	ldi	r30, 0xBC	; 188
    280c:	f0 e0       	ldi	r31, 0x00	; 0
    280e:	80 81       	ld	r24, Z
    2810:	88 23       	and	r24, r24
    2812:	ec f7       	brge	.-6      	; 0x280e <_ZN4OLED12OLED_CommandEi+0x10>

		TWDR=command;
    2814:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    2818:	84 e8       	ldi	r24, 0x84	; 132
    281a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    281e:	ec eb       	ldi	r30, 0xBC	; 188
    2820:	f0 e0       	ldi	r31, 0x00	; 0
    2822:	80 81       	ld	r24, Z
    2824:	88 23       	and	r24, r24
    2826:	ec f7       	brge	.-6      	; 0x2822 <_ZN4OLED12OLED_CommandEi+0x24>
	}
    2828:	08 95       	ret

0000282a <_ZN4OLED9OLED_DataEi>:


	void OLED::OLED_Data(int data)
	{
		TWDR=data;
    282a:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    282e:	84 e8       	ldi	r24, 0x84	; 132
    2830:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    2834:	ec eb       	ldi	r30, 0xBC	; 188
    2836:	f0 e0       	ldi	r31, 0x00	; 0
    2838:	80 81       	ld	r24, Z
    283a:	88 23       	and	r24, r24
    283c:	ec f7       	brge	.-6      	; 0x2838 <_ZN4OLED9OLED_DataEi+0xe>
	}
    283e:	08 95       	ret

00002840 <_ZN4OLED16OLED_Write_BuferEv>:


	void OLED::OLED_Write_Bufer()
	{
    2840:	ef 92       	push	r14
    2842:	ff 92       	push	r15
    2844:	0f 93       	push	r16
    2846:	1f 93       	push	r17
    2848:	cf 93       	push	r28
    284a:	df 93       	push	r29
    284c:	8c 01       	movw	r16, r24
    284e:	ec 01       	movw	r28, r24
    2850:	7c 01       	movw	r14, r24
    2852:	8c ef       	ldi	r24, 0xFC	; 252
    2854:	f8 1a       	sub	r15, r24
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
		{
			OLED_Data(oled_bufer[i]);
    2856:	69 91       	ld	r22, Y+
    2858:	70 e0       	ldi	r23, 0x00	; 0
    285a:	c8 01       	movw	r24, r16
    285c:	e6 df       	rcall	.-52     	; 0x282a <_ZN4OLED9OLED_DataEi>
	}


	void OLED::OLED_Write_Bufer()
	{
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
    285e:	ce 15       	cp	r28, r14
    2860:	df 05       	cpc	r29, r15
    2862:	c9 f7       	brne	.-14     	; 0x2856 <_ZN4OLED16OLED_Write_BuferEv+0x16>
		{
			OLED_Data(oled_bufer[i]);
		}
	}
    2864:	df 91       	pop	r29
    2866:	cf 91       	pop	r28
    2868:	1f 91       	pop	r17
    286a:	0f 91       	pop	r16
    286c:	ff 90       	pop	r15
    286e:	ef 90       	pop	r14
    2870:	08 95       	ret

00002872 <_ZN4OLED16OLED_Bufer_ClearEv>:

	void OLED::OLED_Bufer_Clear()
	{
    2872:	fc 01       	movw	r30, r24
    2874:	9c 5f       	subi	r25, 0xFC	; 252
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
		{
			oled_bufer[i]=0b00000000;
    2876:	11 92       	st	Z+, r1
		}
	}

	void OLED::OLED_Bufer_Clear()
	{
		for(int i=0;i<(OLED_HEIGHT/8)*OLED_WIDTH;i++)
    2878:	e8 17       	cp	r30, r24
    287a:	f9 07       	cpc	r31, r25
    287c:	e1 f7       	brne	.-8      	; 0x2876 <_ZN4OLED16OLED_Bufer_ClearEv+0x4>
		{
			oled_bufer[i]=0b00000000;
		}
	}
    287e:	08 95       	ret

00002880 <_ZN4OLEDC1E3TWI>:
#include "OLED.h"

	OLED::OLED(TWI _wire)
    2880:	0f 93       	push	r16
    2882:	1f 93       	push	r17
    2884:	cf 93       	push	r28
    2886:	df 93       	push	r29
    2888:	ec 01       	movw	r28, r24
    288a:	8c 01       	movw	r16, r24
    288c:	1c 5f       	subi	r17, 0xFC	; 252
    288e:	c8 01       	movw	r24, r16
    2890:	7d d1       	rcall	.+762    	; 0x2b8c <_ZN3TWIC1Ev>
	{
		wire=_wire;
		wire.twi_Init();
    2892:	c8 01       	movw	r24, r16
    2894:	7c d1       	rcall	.+760    	; 0x2b8e <_ZN3TWI8twi_InitEv>
		wire.twi_Start();
    2896:	c8 01       	movw	r24, r16
    2898:	8b d1       	rcall	.+790    	; 0x2bb0 <_ZN3TWI9twi_StartEv>
		wire.twi_SendAdress();
    289a:	c8 01       	movw	r24, r16
    289c:	7d d1       	rcall	.+762    	; 0x2b98 <_ZN3TWI14twi_SendAdressEv>
		OLED_Command(0xA8);
    289e:	68 ea       	ldi	r22, 0xA8	; 168
    28a0:	70 e0       	ldi	r23, 0x00	; 0
    28a2:	ce 01       	movw	r24, r28
    28a4:	ac df       	rcall	.-168    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x3F);
    28a6:	6f e3       	ldi	r22, 0x3F	; 63
    28a8:	70 e0       	ldi	r23, 0x00	; 0
    28aa:	ce 01       	movw	r24, r28
    28ac:	a8 df       	rcall	.-176    	; 0x27fe <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0xD3);
    28ae:	63 ed       	ldi	r22, 0xD3	; 211
    28b0:	70 e0       	ldi	r23, 0x00	; 0
    28b2:	ce 01       	movw	r24, r28
    28b4:	a4 df       	rcall	.-184    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x00);
    28b6:	60 e0       	ldi	r22, 0x00	; 0
    28b8:	70 e0       	ldi	r23, 0x00	; 0
    28ba:	ce 01       	movw	r24, r28
    28bc:	a0 df       	rcall	.-192    	; 0x27fe <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0x40);
    28be:	60 e4       	ldi	r22, 0x40	; 64
    28c0:	70 e0       	ldi	r23, 0x00	; 0
    28c2:	ce 01       	movw	r24, r28
    28c4:	9c df       	rcall	.-200    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xA1);
    28c6:	61 ea       	ldi	r22, 0xA1	; 161
    28c8:	70 e0       	ldi	r23, 0x00	; 0
    28ca:	ce 01       	movw	r24, r28
    28cc:	98 df       	rcall	.-208    	; 0x27fe <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0xC8);
    28ce:	68 ec       	ldi	r22, 0xC8	; 200
    28d0:	70 e0       	ldi	r23, 0x00	; 0
    28d2:	ce 01       	movw	r24, r28
    28d4:	94 df       	rcall	.-216    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xDA);
    28d6:	6a ed       	ldi	r22, 0xDA	; 218
    28d8:	70 e0       	ldi	r23, 0x00	; 0
    28da:	ce 01       	movw	r24, r28
    28dc:	90 df       	rcall	.-224    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x12);
    28de:	62 e1       	ldi	r22, 0x12	; 18
    28e0:	70 e0       	ldi	r23, 0x00	; 0
    28e2:	ce 01       	movw	r24, r28
    28e4:	8c df       	rcall	.-232    	; 0x27fe <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0x81);
    28e6:	61 e8       	ldi	r22, 0x81	; 129
    28e8:	70 e0       	ldi	r23, 0x00	; 0
    28ea:	ce 01       	movw	r24, r28
    28ec:	88 df       	rcall	.-240    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xFF);
    28ee:	6f ef       	ldi	r22, 0xFF	; 255
    28f0:	70 e0       	ldi	r23, 0x00	; 0
    28f2:	ce 01       	movw	r24, r28
    28f4:	84 df       	rcall	.-248    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xA4);
    28f6:	64 ea       	ldi	r22, 0xA4	; 164
    28f8:	70 e0       	ldi	r23, 0x00	; 0
    28fa:	ce 01       	movw	r24, r28
    28fc:	80 df       	rcall	.-256    	; 0x27fe <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0xA6);
    28fe:	66 ea       	ldi	r22, 0xA6	; 166
    2900:	70 e0       	ldi	r23, 0x00	; 0
    2902:	ce 01       	movw	r24, r28
    2904:	7c df       	rcall	.-264    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xD5);
    2906:	65 ed       	ldi	r22, 0xD5	; 213
    2908:	70 e0       	ldi	r23, 0x00	; 0
    290a:	ce 01       	movw	r24, r28
    290c:	78 df       	rcall	.-272    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x80);
    290e:	60 e8       	ldi	r22, 0x80	; 128
    2910:	70 e0       	ldi	r23, 0x00	; 0
    2912:	ce 01       	movw	r24, r28
    2914:	74 df       	rcall	.-280    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x8D);
    2916:	6d e8       	ldi	r22, 0x8D	; 141
    2918:	70 e0       	ldi	r23, 0x00	; 0
    291a:	ce 01       	movw	r24, r28
    291c:	70 df       	rcall	.-288    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x14);
    291e:	64 e1       	ldi	r22, 0x14	; 20
    2920:	70 e0       	ldi	r23, 0x00	; 0
    2922:	ce 01       	movw	r24, r28
    2924:	6c df       	rcall	.-296    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0xAF);
    2926:	6f ea       	ldi	r22, 0xAF	; 175
    2928:	70 e0       	ldi	r23, 0x00	; 0
    292a:	ce 01       	movw	r24, r28
    292c:	68 df       	rcall	.-304    	; 0x27fe <_ZN4OLED12OLED_CommandEi>

		OLED_Command(0x20);
    292e:	60 e2       	ldi	r22, 0x20	; 32
    2930:	70 e0       	ldi	r23, 0x00	; 0
    2932:	ce 01       	movw	r24, r28
    2934:	64 df       	rcall	.-312    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x00);
    2936:	60 e0       	ldi	r22, 0x00	; 0
    2938:	70 e0       	ldi	r23, 0x00	; 0
    293a:	ce 01       	movw	r24, r28
    293c:	60 df       	rcall	.-320    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x21);
    293e:	61 e2       	ldi	r22, 0x21	; 33
    2940:	70 e0       	ldi	r23, 0x00	; 0
    2942:	ce 01       	movw	r24, r28
    2944:	5c df       	rcall	.-328    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
    2946:	60 e0       	ldi	r22, 0x00	; 0
		OLED_Command(0);
    2948:	70 e0       	ldi	r23, 0x00	; 0
    294a:	ce 01       	movw	r24, r28
    294c:	58 df       	rcall	.-336    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
    294e:	6f e7       	ldi	r22, 0x7F	; 127
		OLED_Command(127);
    2950:	70 e0       	ldi	r23, 0x00	; 0
    2952:	ce 01       	movw	r24, r28
    2954:	54 df       	rcall	.-344    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
		OLED_Command(0x22);
    2956:	62 e2       	ldi	r22, 0x22	; 34
    2958:	70 e0       	ldi	r23, 0x00	; 0
    295a:	ce 01       	movw	r24, r28
    295c:	50 df       	rcall	.-352    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
    295e:	60 e0       	ldi	r22, 0x00	; 0
		OLED_Command(0);
    2960:	70 e0       	ldi	r23, 0x00	; 0
    2962:	ce 01       	movw	r24, r28
    2964:	4c df       	rcall	.-360    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
    2966:	67 e0       	ldi	r22, 0x07	; 7
    2968:	70 e0       	ldi	r23, 0x00	; 0
		OLED_Command(7);
    296a:	ce 01       	movw	r24, r28
    296c:	48 df       	rcall	.-368    	; 0x27fe <_ZN4OLED12OLED_CommandEi>
    296e:	80 e4       	ldi	r24, 0x40	; 64
    2970:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWDR=0x40;
    2974:	84 e8       	ldi	r24, 0x84	; 132
    2976:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		TWCR=(1<<TWINT)|(1<<TWEN);
    297a:	ce 01       	movw	r24, r28
    297c:	7a df       	rcall	.-268    	; 0x2872 <_ZN4OLED16OLED_Bufer_ClearEv>
    297e:	60 e0       	ldi	r22, 0x00	; 0
		OLED_Bufer_Clear();
    2980:	70 e0       	ldi	r23, 0x00	; 0
    2982:	ce 01       	movw	r24, r28
    2984:	52 df       	rcall	.-348    	; 0x282a <_ZN4OLED9OLED_DataEi>
		OLED_Data(0b00000000);
    2986:	ce 01       	movw	r24, r28
    2988:	5b df       	rcall	.-330    	; 0x2840 <_ZN4OLED16OLED_Write_BuferEv>
    298a:	df 91       	pop	r29
    298c:	cf 91       	pop	r28
    298e:	1f 91       	pop	r17
		OLED_Write_Bufer();
    2990:	0f 91       	pop	r16
    2992:	08 95       	ret

00002994 <_ZN4OLED21OLED_Clear_Bufer_partEiiii>:
    2994:	cf 92       	push	r12
	}
    2996:	df 92       	push	r13
    2998:	ef 92       	push	r14
    299a:	ff 92       	push	r15
    299c:	0f 93       	push	r16
    299e:	1f 93       	push	r17
		}
	}


	void OLED::OLED_Clear_Bufer_part(int x,int y,int width,int height)
	{
    29a0:	cf 93       	push	r28
    29a2:	df 93       	push	r29
    29a4:	ec 01       	movw	r28, r24
    29a6:	7b 01       	movw	r14, r22
    29a8:	6a 01       	movw	r12, r20
    29aa:	b9 01       	movw	r22, r18
		for(int j=0;j<height;j++)
    29ac:	10 16       	cp	r1, r16
    29ae:	11 06       	cpc	r1, r17
    29b0:	bc f5       	brge	.+110    	; 0x2a20 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x8c>
    29b2:	20 e0       	ldi	r18, 0x00	; 0
    29b4:	30 e0       	ldi	r19, 0x00	; 0
    29b6:	ab 01       	movw	r20, r22
    29b8:	44 0f       	add	r20, r20
    29ba:	55 1f       	adc	r21, r21
    29bc:	44 0f       	add	r20, r20
    29be:	55 1f       	adc	r21, r21
    29c0:	44 0f       	add	r20, r20
    29c2:	55 1f       	adc	r21, r21
    29c4:	4e 0d       	add	r20, r14
    29c6:	5f 1d       	adc	r21, r15
		{
			
			for(int i=0;i<width;i++)
    29c8:	16 16       	cp	r1, r22
    29ca:	17 06       	cpc	r1, r23
    29cc:	24 f5       	brge	.+72     	; 0x2a16 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x82>
    29ce:	c9 01       	movw	r24, r18
    29d0:	33 23       	and	r19, r19
    29d2:	0c f4       	brge	.+2      	; 0x29d6 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x42>
    29d4:	07 96       	adiw	r24, 0x07	; 7
    29d6:	95 95       	asr	r25
    29d8:	87 95       	ror	r24
    29da:	95 95       	asr	r25
    29dc:	87 95       	ror	r24
    29de:	95 95       	asr	r25
    29e0:	87 95       	ror	r24
    29e2:	8c 0d       	add	r24, r12
    29e4:	9d 1d       	adc	r25, r13
    29e6:	96 95       	lsr	r25
    29e8:	98 2f       	mov	r25, r24
    29ea:	88 27       	eor	r24, r24
    29ec:	97 95       	ror	r25
    29ee:	87 95       	ror	r24
    29f0:	fc 01       	movw	r30, r24
    29f2:	ee 0d       	add	r30, r14
    29f4:	ff 1d       	adc	r31, r15
    29f6:	ec 0f       	add	r30, r28
    29f8:	fd 1f       	adc	r31, r29
    29fa:	84 0f       	add	r24, r20
    29fc:	95 1f       	adc	r25, r21
    29fe:	8c 0f       	add	r24, r28
    2a00:	9d 1f       	adc	r25, r29
    2a02:	df 01       	movw	r26, r30
    2a04:	18 96       	adiw	r26, 0x08	; 8
			{
				for(int k=0;k<8;k++)
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]=0b00000000;
    2a06:	11 92       	st	Z+, r1
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
			{
				for(int k=0;k<8;k++)
    2a08:	ea 17       	cp	r30, r26
    2a0a:	fb 07       	cpc	r31, r27
    2a0c:	e1 f7       	brne	.-8      	; 0x2a06 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x72>
    2a0e:	fd 01       	movw	r30, r26
	void OLED::OLED_Clear_Bufer_part(int x,int y,int width,int height)
	{
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
    2a10:	8a 17       	cp	r24, r26
    2a12:	9b 07       	cpc	r25, r27
    2a14:	b1 f7       	brne	.-20     	; 0x2a02 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x6e>
	}


	void OLED::OLED_Clear_Bufer_part(int x,int y,int width,int height)
	{
		for(int j=0;j<height;j++)
    2a16:	2f 5f       	subi	r18, 0xFF	; 255
    2a18:	3f 4f       	sbci	r19, 0xFF	; 255
    2a1a:	02 17       	cp	r16, r18
    2a1c:	13 07       	cpc	r17, r19
    2a1e:	a1 f6       	brne	.-88     	; 0x29c8 <_ZN4OLED21OLED_Clear_Bufer_partEiiii+0x34>
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]=0b00000000;
				}
			}
		}
	}
    2a20:	df 91       	pop	r29
    2a22:	cf 91       	pop	r28
    2a24:	1f 91       	pop	r17
    2a26:	0f 91       	pop	r16
    2a28:	ff 90       	pop	r15
    2a2a:	ef 90       	pop	r14
    2a2c:	df 90       	pop	r13
    2a2e:	cf 90       	pop	r12
    2a30:	08 95       	ret

00002a32 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh>:

	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
    2a32:	2f 92       	push	r2
    2a34:	3f 92       	push	r3
    2a36:	4f 92       	push	r4
    2a38:	5f 92       	push	r5
    2a3a:	6f 92       	push	r6
    2a3c:	7f 92       	push	r7
    2a3e:	8f 92       	push	r8
    2a40:	9f 92       	push	r9
    2a42:	af 92       	push	r10
    2a44:	bf 92       	push	r11
    2a46:	cf 92       	push	r12
    2a48:	df 92       	push	r13
    2a4a:	ef 92       	push	r14
    2a4c:	ff 92       	push	r15
    2a4e:	0f 93       	push	r16
    2a50:	1f 93       	push	r17
    2a52:	cf 93       	push	r28
    2a54:	df 93       	push	r29
    2a56:	00 d0       	rcall	.+0      	; 0x2a58 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x26>
    2a58:	00 d0       	rcall	.+0      	; 0x2a5a <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x28>
    2a5a:	00 d0       	rcall	.+0      	; 0x2a5c <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x2a>
    2a5c:	cd b7       	in	r28, 0x3d	; 61
    2a5e:	de b7       	in	r29, 0x3e	; 62
    2a60:	9e 83       	std	Y+6, r25	; 0x06
    2a62:	8d 83       	std	Y+5, r24	; 0x05
    2a64:	3a 01       	movw	r6, r20
    2a66:	29 01       	movw	r4, r18
    2a68:	18 01       	movw	r2, r16
		for(int j=0;j<height;j++)
    2a6a:	10 16       	cp	r1, r16
    2a6c:	11 06       	cpc	r1, r17
    2a6e:	0c f0       	brlt	.+2      	; 0x2a72 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x40>
    2a70:	74 c0       	rjmp	.+232    	; 0x2b5a <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x128>
    2a72:	3c 83       	std	Y+4, r19	; 0x04
    2a74:	2b 83       	std	Y+3, r18	; 0x03
    2a76:	8e 2c       	mov	r8, r14
    2a78:	9f 2c       	mov	r9, r15
    2a7a:	c1 2c       	mov	r12, r1
    2a7c:	d1 2c       	mov	r13, r1
			
			for(int i=0;i<width;i++)
			{
				for(int k=0;k<8;k++)
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]|=((img[j*width+i]<<k)&0b10000000)>>(7-j%8);
    2a7e:	0f 2e       	mov	r0, r31
    2a80:	f7 e0       	ldi	r31, 0x07	; 7
    2a82:	af 2e       	mov	r10, r31
    2a84:	b1 2c       	mov	r11, r1
    2a86:	f0 2d       	mov	r31, r0
    2a88:	c9 01       	movw	r24, r18
    2a8a:	88 0f       	add	r24, r24
    2a8c:	99 1f       	adc	r25, r25
    2a8e:	88 0f       	add	r24, r24
    2a90:	99 1f       	adc	r25, r25
    2a92:	88 0f       	add	r24, r24
    2a94:	99 1f       	adc	r25, r25
    2a96:	9b 01       	movw	r18, r22
    2a98:	28 0f       	add	r18, r24
    2a9a:	39 1f       	adc	r19, r25
    2a9c:	3a 83       	std	Y+2, r19	; 0x02
    2a9e:	29 83       	std	Y+1, r18	; 0x01
	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
    2aa0:	14 14       	cp	r1, r4
    2aa2:	15 04       	cpc	r1, r5
    2aa4:	0c f0       	brlt	.+2      	; 0x2aa8 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x76>
    2aa6:	4e c0       	rjmp	.+156    	; 0x2b44 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x112>
			{
				for(int k=0;k<8;k++)
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]|=((img[j*width+i]<<k)&0b10000000)>>(7-j%8);
    2aa8:	c6 01       	movw	r24, r12
    2aaa:	87 70       	andi	r24, 0x07	; 7
    2aac:	90 78       	andi	r25, 0x80	; 128
    2aae:	99 23       	and	r25, r25
    2ab0:	24 f4       	brge	.+8      	; 0x2aba <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x88>
    2ab2:	01 97       	sbiw	r24, 0x01	; 1
    2ab4:	88 6f       	ori	r24, 0xF8	; 248
    2ab6:	9f 6f       	ori	r25, 0xFF	; 255
    2ab8:	01 96       	adiw	r24, 0x01	; 1
    2aba:	85 01       	movw	r16, r10
    2abc:	08 1b       	sub	r16, r24
    2abe:	19 0b       	sbc	r17, r25
    2ac0:	76 01       	movw	r14, r12
    2ac2:	dd 20       	and	r13, r13
    2ac4:	1c f4       	brge	.+6      	; 0x2acc <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x9a>
    2ac6:	97 e0       	ldi	r25, 0x07	; 7
    2ac8:	e9 0e       	add	r14, r25
    2aca:	f1 1c       	adc	r15, r1
    2acc:	f5 94       	asr	r15
    2ace:	e7 94       	ror	r14
    2ad0:	f5 94       	asr	r15
    2ad2:	e7 94       	ror	r14
    2ad4:	f5 94       	asr	r15
    2ad6:	e7 94       	ror	r14
    2ad8:	e6 0c       	add	r14, r6
    2ada:	f7 1c       	adc	r15, r7
    2adc:	f6 94       	lsr	r15
    2ade:	fe 2c       	mov	r15, r14
    2ae0:	ee 24       	eor	r14, r14
    2ae2:	f7 94       	ror	r15
    2ae4:	e7 94       	ror	r14
    2ae6:	ab 01       	movw	r20, r22
    2ae8:	4e 0d       	add	r20, r14
    2aea:	5f 1d       	adc	r21, r15
    2aec:	2d 81       	ldd	r18, Y+5	; 0x05
    2aee:	3e 81       	ldd	r19, Y+6	; 0x06
    2af0:	42 0f       	add	r20, r18
    2af2:	53 1f       	adc	r21, r19
    2af4:	89 81       	ldd	r24, Y+1	; 0x01
    2af6:	9a 81       	ldd	r25, Y+2	; 0x02
    2af8:	e8 0e       	add	r14, r24
    2afa:	f9 1e       	adc	r15, r25
    2afc:	e2 0e       	add	r14, r18
    2afe:	f3 1e       	adc	r15, r19
    2b00:	d4 01       	movw	r26, r8
    2b02:	fa 01       	movw	r30, r20
    2b04:	20 e0       	ldi	r18, 0x00	; 0
    2b06:	30 e0       	ldi	r19, 0x00	; 0
    2b08:	8c 91       	ld	r24, X
    2b0a:	90 e0       	ldi	r25, 0x00	; 0
    2b0c:	02 2e       	mov	r0, r18
    2b0e:	02 c0       	rjmp	.+4      	; 0x2b14 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xe2>
    2b10:	88 0f       	add	r24, r24
    2b12:	99 1f       	adc	r25, r25
    2b14:	0a 94       	dec	r0
    2b16:	e2 f7       	brpl	.-8      	; 0x2b10 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xde>
    2b18:	80 78       	andi	r24, 0x80	; 128
    2b1a:	99 27       	eor	r25, r25
    2b1c:	00 2e       	mov	r0, r16
    2b1e:	02 c0       	rjmp	.+4      	; 0x2b24 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xf2>
    2b20:	95 95       	asr	r25
    2b22:	87 95       	ror	r24
    2b24:	0a 94       	dec	r0
    2b26:	e2 f7       	brpl	.-8      	; 0x2b20 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xee>
    2b28:	90 81       	ld	r25, Z
    2b2a:	89 2b       	or	r24, r25
    2b2c:	81 93       	st	Z+, r24
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
			{
				for(int k=0;k<8;k++)
    2b2e:	2f 5f       	subi	r18, 0xFF	; 255
    2b30:	3f 4f       	sbci	r19, 0xFF	; 255
    2b32:	28 30       	cpi	r18, 0x08	; 8
    2b34:	31 05       	cpc	r19, r1
    2b36:	41 f7       	brne	.-48     	; 0x2b08 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xd6>
    2b38:	48 5f       	subi	r20, 0xF8	; 248
    2b3a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b3c:	11 96       	adiw	r26, 0x01	; 1
	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
		for(int j=0;j<height;j++)
		{
			
			for(int i=0;i<width;i++)
    2b3e:	4e 15       	cp	r20, r14
    2b40:	5f 05       	cpc	r21, r15
    2b42:	f9 f6       	brne	.-66     	; 0x2b02 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0xd0>
		}
	}

	void OLED::OLED_Write_To_Bufer(int x,int y,int width,int height,uint8_t* img)
	{
		for(int j=0;j<height;j++)
    2b44:	3f ef       	ldi	r19, 0xFF	; 255
    2b46:	c3 1a       	sub	r12, r19
    2b48:	d3 0a       	sbc	r13, r19
    2b4a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b4c:	9c 81       	ldd	r25, Y+4	; 0x04
    2b4e:	88 0e       	add	r8, r24
    2b50:	99 1e       	adc	r9, r25
    2b52:	2c 14       	cp	r2, r12
    2b54:	3d 04       	cpc	r3, r13
    2b56:	09 f0       	breq	.+2      	; 0x2b5a <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x128>
    2b58:	a3 cf       	rjmp	.-186    	; 0x2aa0 <_ZN4OLED19OLED_Write_To_BuferEiiiiPh+0x6e>
				{
					oled_bufer[(x+i*8+k)+(y+j/8)*OLED_WIDTH]|=((img[j*width+i]<<k)&0b10000000)>>(7-j%8);
				}
			}
		}
	}
    2b5a:	26 96       	adiw	r28, 0x06	; 6
    2b5c:	0f b6       	in	r0, 0x3f	; 63
    2b5e:	f8 94       	cli
    2b60:	de bf       	out	0x3e, r29	; 62
    2b62:	0f be       	out	0x3f, r0	; 63
    2b64:	cd bf       	out	0x3d, r28	; 61
    2b66:	df 91       	pop	r29
    2b68:	cf 91       	pop	r28
    2b6a:	1f 91       	pop	r17
    2b6c:	0f 91       	pop	r16
    2b6e:	ff 90       	pop	r15
    2b70:	ef 90       	pop	r14
    2b72:	df 90       	pop	r13
    2b74:	cf 90       	pop	r12
    2b76:	bf 90       	pop	r11
    2b78:	af 90       	pop	r10
    2b7a:	9f 90       	pop	r9
    2b7c:	8f 90       	pop	r8
    2b7e:	7f 90       	pop	r7
    2b80:	6f 90       	pop	r6
    2b82:	5f 90       	pop	r5
    2b84:	4f 90       	pop	r4
    2b86:	3f 90       	pop	r3
    2b88:	2f 90       	pop	r2
    2b8a:	08 95       	ret

00002b8c <_ZN3TWIC1Ev>:
#include "TWI.h"


	TWI::TWI(){}
    2b8c:	08 95       	ret

00002b8e <_ZN3TWI8twi_InitEv>:

	void TWI::twi_Init(void)
	{
		TWBR=(((CPU_F)/(SCL_F)-16)/2);
    2b8e:	10 92 b8 00 	sts	0x00B8, r1	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
		TWSR=0;
    2b92:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
    2b96:	08 95       	ret

00002b98 <_ZN3TWI14twi_SendAdressEv>:
	}

	void TWI::twi_SendAdress(void)
	{
		TWDR=(Dev_Adr<<1)|0;
    2b98:	88 e7       	ldi	r24, 0x78	; 120
    2b9a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
		TWCR=(1<<TWINT)|(1<<TWEN);
    2b9e:	84 e8       	ldi	r24, 0x84	; 132
    2ba0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    2ba4:	ec eb       	ldi	r30, 0xBC	; 188
    2ba6:	f0 e0       	ldi	r31, 0x00	; 0
    2ba8:	80 81       	ld	r24, Z
    2baa:	88 23       	and	r24, r24
    2bac:	ec f7       	brge	.-6      	; 0x2ba8 <_ZN3TWI14twi_SendAdressEv+0x10>
	}
    2bae:	08 95       	ret

00002bb0 <_ZN3TWI9twi_StartEv>:

	void TWI::twi_Start(void)
	{
		TWCR=(1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
    2bb0:	84 ea       	ldi	r24, 0xA4	; 164
    2bb2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		while(!(TWCR & (1<<TWINT))){};
    2bb6:	ec eb       	ldi	r30, 0xBC	; 188
    2bb8:	f0 e0       	ldi	r31, 0x00	; 0
    2bba:	80 81       	ld	r24, Z
    2bbc:	88 23       	and	r24, r24
    2bbe:	ec f7       	brge	.-6      	; 0x2bba <_ZN3TWI9twi_StartEv+0xa>
	}
    2bc0:	08 95       	ret

00002bc2 <__tablejump2__>:
    2bc2:	ee 0f       	add	r30, r30
    2bc4:	ff 1f       	adc	r31, r31
    2bc6:	00 24       	eor	r0, r0
    2bc8:	00 1c       	adc	r0, r0
    2bca:	0b be       	out	0x3b, r0	; 59
    2bcc:	07 90       	elpm	r0, Z+
    2bce:	f6 91       	elpm	r31, Z
    2bd0:	e0 2d       	mov	r30, r0
    2bd2:	09 94       	ijmp

00002bd4 <_exit>:
    2bd4:	f8 94       	cli

00002bd6 <__stop_program>:
    2bd6:	ff cf       	rjmp	.-2      	; 0x2bd6 <__stop_program>
